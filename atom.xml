<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Daichong&#39;s Blog</title>
  
  <subtitle>戴崇博客,戴崇技术博客,php技术博客,hexo博客,web技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.daichongweb.com/"/>
  <updated>2019-11-12T02:36:07.544Z</updated>
  <id>http://www.daichongweb.com/</id>
  
  <author>
    <name>Daichongweb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>架构之路-mysql主从复制基础搭建篇</title>
    <link href="http://www.daichongweb.com/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF-mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%9F%BA%E7%A1%80%E6%90%AD%E5%BB%BA%E7%AF%87/"/>
    <id>http://www.daichongweb.com/架构之路-mysql主从复制基础搭建篇/</id>
    <published>2019-11-12T02:18:09.000Z</published>
    <updated>2019-11-12T02:36:07.544Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>本文介绍的是在虚拟机上搭建，实际情况其实和真正的线上环境一毛一样，使用的系统是Centos 7。</p><h4 id="什么是主从复制？原理是什么？"><a href="#什么是主从复制？原理是什么？" class="headerlink" title="什么是主从复制？原理是什么？"></a>什么是主从复制？原理是什么？</h4><p>答：简单点理解，主从复制其实就是两个数据库数据的项目备份过程。其原理就是主库产生的操作都会生成<code>binlog</code>传入从库，从库通过<code>I/O</code>线程把<code>binlog</code>写入<code>relaylog</code>，然后从库创建<code>I/O</code>线程执行<code>relaylog</code>进行数据备份。<br><a id="more"></a></p><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><img src="/架构之路-mysql主从复制基础搭建篇/img/1.png"><h4 id="为什么要做主从复制？"><a href="#为什么要做主从复制？" class="headerlink" title="为什么要做主从复制？"></a>为什么要做主从复制？</h4><p>答：一方面是为了备份数据，防止数据丢失和破坏，另一方面是为读写分离做铺垫。</p><h4 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><h5 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h5><p>首先在本地安装虚拟机，我个人比较推荐 <code>VMware Workstation Pro</code>，当然也可以是使用其他的。<br>虚拟机的安装就不做介绍了，无非都是下一步下一步。安装好之后在需要下载对用的系统镜像，因为本文主要是在<code>Centos</code>上做演示，所以我就下载了<code>Centos</code>的镜像，但是无法分享给大家，因为太大了，足足<code>4G</code>。</p><p>安装好之后新建两个虚拟机(怎么新建虚拟机就不做介绍了):<br><img src="/架构之路-mysql主从复制基础搭建篇/img/2.png"></p><h5 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h5><p>注意：尽量两个虚拟机上的mysql版本保持一直，避免出现不可预知的错误。<br>我安装的版本是5.7.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入</span></span><br><span class="line">cd /usr/local/src</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载rpm包</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装rpm</span></span><br><span class="line">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 mysql-server</span></span><br><span class="line">yum install -y mysql-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 </span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置开机自启</span></span><br><span class="line">systemctl enable mysqld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登陆mysql</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></p><p>因为5.7之后的版本都是禁止匿名登陆的，你可以通过查看密码并登陆，然后修改密码，或者直接修改<code>my.cnf</code>来禁止登陆验证。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/mysqld.log|grep 'A temporary password'</span><br></pre></td></tr></table></figure></p><p>因为系统给我的默认密码含有一些特殊符号，我没法输入，我只能使用第二种方法：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi \etc\my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后增加一行</span></span><br><span class="line">skip-grant-tables=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 登陆mysql，刷新权限</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">use mysql;</span><br><span class="line">update user set password='password' where user='root'；</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改成功后再次刷新权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后重启一下mysql服务</span></span><br></pre></td></tr></table></figure></p><h5 id="本地连接虚拟机上的mysql"><a href="#本地连接虚拟机上的mysql" class="headerlink" title="本地连接虚拟机上的mysql"></a>本地连接虚拟机上的mysql</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看IP</span></span><br><span class="line">ifconfig</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在本地Cmd中ping这个IP</span></span><br></pre></td></tr></table></figure><h5 id="使用telnet测试mysql连接状态"><a href="#使用telnet测试mysql连接状态" class="headerlink" title="使用telnet测试mysql连接状态"></a>使用telnet测试mysql连接状态</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.22.130 3360</span><br></pre></td></tr></table></figure><h5 id="错误的情况（因我这里是好的，所以我把3306填成了3360）"><a href="#错误的情况（因我这里是好的，所以我把3306填成了3360）" class="headerlink" title="错误的情况（因我这里是好的，所以我把3306填成了3360）"></a>错误的情况（因我这里是好的，所以我把3306填成了3360）</h5><img src="/架构之路-mysql主从复制基础搭建篇/img/3.png"><h5 id="检查虚拟机是否安装了iptables"><a href="#检查虚拟机是否安装了iptables" class="headerlink" title="检查虚拟机是否安装了iptables"></a>检查虚拟机是否安装了iptables</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo yum install iptables-services</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启服务</span></span><br><span class="line">sudo systemctl enable iptables </span><br><span class="line">sudo systemctl enable ip6tables </span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动服务</span></span><br><span class="line">sudo systemctl start iptables </span><br><span class="line">sudo systemctl start ip6tables</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启访问权限</span></span><br><span class="line">vi /etc/sysconfig/iptables</span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制到端口22的下面</span></span><br><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT</span><br><span class="line"><span class="meta">#</span><span class="bash"> 保持退出后重启</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><img src="/架构之路-mysql主从复制基础搭建篇/img/4.png"><img src="/架构之路-mysql主从复制基础搭建篇/img/5.png"><p>再次使用<code>telnet 192.168.22.130 3306</code>还是报错上边图片所示时。</p><h5 id="配置权限"><a href="#配置权限" class="headerlink" title="配置权限"></a>配置权限</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个用户</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO 'daichong'@'%' IDENTIFIED BY 'daichong' WITH GRANT OPTION;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新权限</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里注意真实线上情况权限不能这么开</span></span><br></pre></td></tr></table></figure><img src="/架构之路-mysql主从复制基础搭建篇/img/6.png"><p>出现这个说明已经成功了</p><h5 id="使用navicat连接"><a href="#使用navicat连接" class="headerlink" title="使用navicat连接"></a>使用navicat连接</h5><img src="/架构之路-mysql主从复制基础搭建篇/img/7.png"><p>到这里基础的安装已经完成了，如果遇到问题可在评论中提问，下一篇介绍主从复制如何配置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;本文介绍的是在虚拟机上搭建，实际情况其实和真正的线上环境一毛一样，使用的系统是Centos 7。&lt;/p&gt;
&lt;h4 id=&quot;什么是主从复制？原理是什么？&quot;&gt;&lt;a href=&quot;#什么是主从复制？原理是什么？&quot; class=&quot;headerlink&quot; title=&quot;什么是主从复制？原理是什么？&quot;&gt;&lt;/a&gt;什么是主从复制？原理是什么？&lt;/h4&gt;&lt;p&gt;答：简单点理解，主从复制其实就是两个数据库数据的项目备份过程。其原理就是主库产生的操作都会生成&lt;code&gt;binlog&lt;/code&gt;传入从库，从库通过&lt;code&gt;I/O&lt;/code&gt;线程把&lt;code&gt;binlog&lt;/code&gt;写入&lt;code&gt;relaylog&lt;/code&gt;，然后从库创建&lt;code&gt;I/O&lt;/code&gt;线程执行&lt;code&gt;relaylog&lt;/code&gt;进行数据备份。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="架构" scheme="http://www.daichongweb.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>laravel模型关联查询与JOIN哪个性能好</title>
    <link href="http://www.daichongweb.com/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E4%B8%8EJOIN%E5%93%AA%E4%B8%AA%E6%80%A7%E8%83%BD%E5%A5%BD/"/>
    <id>http://www.daichongweb.com/laravel模型关联查询与JOIN哪个性能好/</id>
    <published>2019-11-08T08:34:03.000Z</published>
    <updated>2019-11-12T02:26:19.742Z</updated>
    
    <content type="html"><![CDATA[<p><strong>初学Laravel</strong></p><p>最近接手一个新项目，整个项目完全看不到<code>left join</code>这样的写法，我打印了模型关联查询后的<code>sql</code>后发现跟常有的查询写法完全不同。<br>原谅我一直是个码农，几乎没见过这样的写法，一直想对比一下这样的写法和常用的写法性能方面到底有什么差别。<br><a id="more"></a><br><strong>一个小栗子</strong></p><p>模型关联生成的sql<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`post_comment`</span> <span class="keyword">where</span> <span class="string">`comment`</span>.<span class="string">`id`</span> = <span class="string">`post_comment`</span>.<span class="string">`comment_id`</span> <span class="keyword">and</span> <span class="string">`post_id`</span> = ?)</span><br></pre></td></tr></table></figure></p><p>常用查询<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">`comment`</span>.id,<span class="string">`comment`</span>.info,<span class="string">`comment`</span>.user_id <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">left</span> <span class="keyword">join</span> post_comment <span class="keyword">on</span> <span class="string">`comment`</span>.id = <span class="string">`post_comment`</span>.comment_id <span class="keyword">where</span> post_comment.post_id = ?</span><br></pre></td></tr></table></figure></p><p>单从<code>sql</code>上看区别还是挺大的，再做码农的期间，最常听到的就是链表查询性能不好。但是还真不能确定这两个<code>sql</code>到底哪个性能好一点，没办法只能测试一下。</p><h3 id="posts-Tables"><a href="#posts-Tables" class="headerlink" title="posts Tables"></a>posts Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">title</th><th style="text-align:right">time</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">模型关联查询</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">left join 查询</td><td style="text-align:right">2019-11-08</td></tr></tbody></table><h3 id="comment-Tables"><a href="#comment-Tables" class="headerlink" title="comment Tables"></a>comment Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">info</th><th style="text-align:right">time</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">模型关联查询的性能好</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">left join 查询的性能好</td><td style="text-align:right">2019-11-08</td></tr><tr><td style="text-align:left">3</td><td style="text-align:center">两个都挺好</td><td style="text-align:right">2019-11-08</td></tr></tbody></table><h3 id="post-comment-Tables"><a href="#post-comment-Tables" class="headerlink" title="post_comment Tables"></a>post_comment Tables</h3><table><thead><tr><th style="text-align:left">id</th><th style="text-align:center">post_id</th><th style="text-align:right">comment_id</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">1</td><td style="text-align:right">1</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">2</td><td style="text-align:right">2</td></tr><tr><td style="text-align:left">3</td><td style="text-align:center">3</td><td style="text-align:right">2</td></tr></tbody></table><p>为了避免争议，我添加了一些比较合理的数据。</p><h4 id="数据量"><a href="#数据量" class="headerlink" title="数据量"></a>数据量</h4><table><thead><tr><th style="text-align:left">posts</th><th style="text-align:center">comment</th><th style="text-align:right">post_comment</th></tr></thead><tbody><tr><td style="text-align:left">29999条</td><td style="text-align:center">29999条</td><td style="text-align:right">29999条</td></tr></tbody></table><h4 id="下面使用EXPLAIN进行分析"><a href="#下面使用EXPLAIN进行分析" class="headerlink" title="下面使用EXPLAIN进行分析"></a>下面使用EXPLAIN进行分析</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`post_comment`</span> <span class="keyword">where</span> <span class="string">`comment`</span>.<span class="string">`id`</span> = <span class="string">`post_comment`</span>.<span class="string">`comment_id`</span> <span class="keyword">and</span> <span class="string">`post_id`</span> = <span class="number">2</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">select_type</th><th style="text-align:right">table</th><th style="text-align:right">partitions</th><th style="text-align:right">type</th></tr></thead><tbody><tr><td style="text-align:center">PRIMARY</td><td style="text-align:right">comment</td><td style="text-align:right">NULL</td><td style="text-align:right">ALL</td></tr><tr><td style="text-align:center">DEPENDENT SUBQUERY</td><td style="text-align:right">post_comment</td><td style="text-align:right">NULL</td><td style="text-align:right">ref</td></tr></tbody></table><table><thead><tr><th style="text-align:right">possible_keys</th><th style="text-align:right">key</th><th style="text-align:right">key_len</th><th style="text-align:right">ref</th></tr></thead><tbody><tr><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td><td style="text-align:right">NULL</td></tr><tr><td style="text-align:right">post_id,comment_id</td><td style="text-align:right">post_id</td><td style="text-align:right">5</td><td style="text-align:right">const</td></tr></tbody></table><table><thead><tr><th style="text-align:right">rows</th><th style="text-align:right">filtered</th><th style="text-align:right">Extra</th></tr></thead><tbody><tr><td style="text-align:right">29999</td><td style="text-align:right">100.00</td><td style="text-align:right">Using where</td></tr><tr><td style="text-align:right">1</td><td style="text-align:right">10.00</td><td style="text-align:right">Using where</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> <span class="string">`comment`</span>.id,<span class="string">`comment`</span>.info,<span class="string">`comment`</span>.user_id <span class="keyword">from</span> <span class="string">`comment`</span> <span class="keyword">left</span> <span class="keyword">join</span> post_comment <span class="keyword">on</span> <span class="string">`comment`</span>.id = <span class="string">`post_comment`</span>.comment_id <span class="keyword">where</span> post_comment.post_id = <span class="number">2</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">select_type</th><th style="text-align:center">table</th><th style="text-align:right">partitions</th></tr></thead><tbody><tr><td style="text-align:left">SIMPLE</td><td style="text-align:center">post_comment</td><td style="text-align:right">NULL</td></tr><tr><td style="text-align:left">SIMPLE</td><td style="text-align:center">comment</td><td style="text-align:right">NULL</td></tr></tbody></table><table><thead><tr><th style="text-align:right">type</th><th style="text-align:right">possible_keys</th><th style="text-align:right">key</th><th style="text-align:right">key_len</th></tr></thead><tbody><tr><td style="text-align:right">ref</td><td style="text-align:right">post_id,comment_id</td><td style="text-align:right">post_id</td><td style="text-align:right">5</td></tr><tr><td style="text-align:right">eq_ref</td><td style="text-align:right">PRIMARY</td><td style="text-align:right">PRIMARY</td><td style="text-align:right">4</td></tr></tbody></table><table><thead><tr><th style="text-align:right">ref</th><th style="text-align:right">rows</th><th style="text-align:right">filtered</th><th style="text-align:right">Extra</th></tr></thead><tbody><tr><td style="text-align:right">const</td><td style="text-align:right">1</td><td style="text-align:right">100.00</td><td style="text-align:right">Using where</td></tr><tr><td style="text-align:right">test.post_comment.comment_id</td><td style="text-align:right">1</td><td style="text-align:right">100.00</td><td style="text-align:right">NULL</td></tr></tbody></table><p>从上边的<code>EXPLAIN</code>结果来看，<code>left join</code>比模型关联的写法效率高太多了，之后我在<code>laravel</code>社区也发布了相关的提问，得到的结论是<code>数据量大的时候用JOIN，数据量小的时候用模型</code>。</p><p>从得的的结论来看，模型并适合大数据查询，但是对一些新增、修改、删除操作提供了很好的效果！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;初学Laravel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近接手一个新项目，整个项目完全看不到&lt;code&gt;left join&lt;/code&gt;这样的写法，我打印了模型关联查询后的&lt;code&gt;sql&lt;/code&gt;后发现跟常有的查询写法完全不同。&lt;br&gt;原谅我一直是个码农，几乎没见过这样的写法，一直想对比一下这样的写法和常用的写法性能方面到底有什么差别。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="laravel" scheme="http://www.daichongweb.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>laravel模型关联</title>
    <link href="http://www.daichongweb.com/laravel%E6%A8%A1%E5%9E%8B%E5%85%B3%E8%81%94/"/>
    <id>http://www.daichongweb.com/laravel模型关联/</id>
    <published>2019-11-06T09:30:11.000Z</published>
    <updated>2019-11-08T08:34:19.518Z</updated>
    
    <content type="html"><![CDATA[<p><b>一对一</b></p><p>&emsp;什么是一对多？</p><p>&emsp;在程序角度讲：一对多基本上都是用来描述两个数据表之间的关系。</p><p>&emsp;假设现有两个数据表：（1）文章表posts （2）评论表comment。一个文章可以有多个评论，但一个评论只能属于一个文章，相对于评论来说它与文章的关系是多对一，相对与文章来说它与评论的关系是一对多，这也就是laravel里反向关联的基础。</p><p><em>文章表posts</em></p><table><th>id</th><th>title</th><th>time</th><tr><td>1</td><td>什么是一对一？</td><td>2019-11-07</td></tr><tr><td>2</td><td>什么是一对多？</td><td>2019-11-08</td></tr><tr><td>3</td><td>什么是多对多？</td><td>2019-11-06</td></tr></table><br><a id="more"></a><br><br><em>评论表comment</em><br><br><table><th>id</th><th>info</th><th>user_id</th><tr><td>1</td><td>我知道什么是一对一。</td><td>10086</td></tr><tr><td>2</td><td>我知道什么是一对多。</td><td>10085</td></tr><tr><td>3</td><td>我知道什么是多对多。</td><td>10084</td></tr><td>4</td><td>这谁不知道啊！</td><td>10084</td></table><p><em>中间表posts_comment（也可以叫做关系表）</em></p><table><th>id</th><th>post_id</th><th>comment_id</th><tr><td>1</td><td>1</td><td>1</td></tr><tr><td>2</td><td>2</td><td>2</td></tr><tr><td>3</td><td>3</td><td>3</td></tr><tr><td>4</td><td>3</td><td>4</td></tr></table><p>&emsp;从表的结构可以看出来，ID=1、2的文章只有一条评论，ID=3的文章有两条评论。</p><p>&emsp;那么这是要有个业务，已知文章的ID=3，请使用laravel的模型关联找出该文章下的所有评论。</p><p>&emsp;首先确认两个表之间的关系，一个评论在中间表只有一条数据，中间表里的comment_id肯定是唯一的，不可能出现一个评论同时属于两个文章，所以它们之间的关系是<em>一对一</em>。<a>但是，你会发现使用hasMany(多对多)关联方法获取的数据居然是一样的</a>。</p><figure class="highlight plain"><figcaption><span>模型关联</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 一对多写法</span><br><span class="line">public function comments()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasMany(&apos;App\Models\PostComment&apos;, &apos;comment_id&apos;, &apos;id&apos;);</span><br><span class="line">&#125;</span><br><span class="line"># 一对一写法</span><br><span class="line">public function comment()</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;hasOne(&apos;App\Models\PostComment&apos;, &apos;comment_id&apos;, &apos;id&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查询写法使用（with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public function list()</span><br><span class="line">&#123;</span><br><span class="line">    $postId = 3;</span><br><span class="line">    $data = \App\Models\Comment::with(&apos;comments&apos;)-&gt;whereHas(&quot;comments&quot;, function ($query) use ($postId) &#123;</span><br><span class="line">        return $query-&gt;where(&quot;post_id&quot;, $postId);</span><br><span class="line">    &#125;)-&gt;get();</span><br><span class="line">    dump($data-&gt;toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>获取的数据结果（使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"># with(&apos;comments);</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comments&quot; =&gt; array:1 [▼</span><br><span class="line">      0 =&gt; array:3 [▼</span><br><span class="line">        &quot;id&quot; =&gt; 3</span><br><span class="line">        &quot;post_id&quot; =&gt; 3</span><br><span class="line">        &quot;comment_id&quot; =&gt; 3</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comments&quot; =&gt; array:1 [▼</span><br><span class="line">      0 =&gt; array:3 [▼</span><br><span class="line">        &quot;id&quot; =&gt; 4</span><br><span class="line">        &quot;post_id&quot; =&gt; 3</span><br><span class="line">        &quot;comment_id&quot; =&gt; 4</span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"># with(&apos;comment);</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comment&quot; =&gt; array:3 [▼</span><br><span class="line">      &quot;id&quot; =&gt; 3</span><br><span class="line">      &quot;post_id&quot; =&gt; 3</span><br><span class="line">      &quot;comment_id&quot; =&gt; 3</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:4 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">    &quot;comment&quot; =&gt; array:3 [▼</span><br><span class="line">      &quot;id&quot; =&gt; 4</span><br><span class="line">      &quot;post_id&quot; =&gt; 3</span><br><span class="line">      &quot;comment_id&quot; =&gt; 4</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>执行的SQL（使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 两次sql是一样的</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `comment` where exists (select * from `post_comment` where `comment`.`id` = `post_comment`.`comment_id` and `post_id` = ?)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; array:1 [▶]</span><br><span class="line">    &quot;time&quot; =&gt; 12.67</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `post_comment` where `post_comment`.`comment_id` in (3, 4)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; []</span><br><span class="line">    &quot;time&quot; =&gt; 0.21</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;我们分析一下laravel底层的处理逻辑，从上边的sql可以看出使用模型关联第一步会使用一个嵌套查询找出comment在post_comment里存在的结果集，最终的得到的结果是3、4。随后会做一个IN查询得到最终comment.id=3、4的数据最后合并成结果集返回。</p><figure class="highlight plain"><figcaption><span>查询写法使用（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public function list()</span><br><span class="line">&#123;</span><br><span class="line">    $postId = 3;</span><br><span class="line"></span><br><span class="line">    $data = \App\Models\Comment::whereHas(&quot;comment&quot;, function ($query) use ($postId) &#123;</span><br><span class="line">        return $query-&gt;where(&quot;post_id&quot;, $postId);</span><br><span class="line">    &#125;)-&gt;get();</span><br><span class="line">    dump($data-&gt;toArray());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>执行的SQL（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 两次执行sql也是一样的</span><br><span class="line">array:1 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;query&quot; =&gt; &quot;select * from `comment` where exists (select * from `post_comment` where `comment`.`id` = `post_comment`.`comment_id` and `post_id` = ?)&quot;</span><br><span class="line">    &quot;bindings&quot; =&gt; array:1 [▶]</span><br><span class="line">    &quot;time&quot; =&gt; 2.82</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查询的结果（不使用with）</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 得到的结果也是一样的</span><br><span class="line">array:2 [▼</span><br><span class="line">  0 =&gt; array:3 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 3</span><br><span class="line">    &quot;info&quot; =&gt; &quot;\t我知道什么是多对多&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">  ]</span><br><span class="line">  1 =&gt; array:3 [▼</span><br><span class="line">    &quot;id&quot; =&gt; 4</span><br><span class="line">    &quot;info&quot; =&gt; &quot;这谁不知道啊！&quot;</span><br><span class="line">    &quot;user_id&quot; =&gt; 10084</span><br><span class="line">  ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&emsp;两种写法的端异想必大家都能看得出来，就不再介绍了。</p><p><b>那么问题来了，为什么要使用模型关联呢？</b></p><p>&emsp;假设某一个文章被评论了，在不使用模型关联的情况下需要这样写：</p><figure class="highlight plain"><figcaption><span>普通写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$mode = new \App\Models\Comment();</span><br><span class="line">$mode-&gt;info = &apos;测试&apos;;</span><br><span class="line">$mode-&gt;user_id = 11;</span><br><span class="line">$mode-&gt;save();</span><br><span class="line"></span><br><span class="line">\App\Models\PostComment::create([</span><br><span class="line">  &apos;post_id&apos; =&gt; 3,</span><br><span class="line">  &apos;comment_id&apos; =&gt; $mode-&gt;id</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>模型关联写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$mode = new \App\Models\Comment();</span><br><span class="line">$mode-&gt;info = &apos;测试&apos;;</span><br><span class="line">$mode-&gt;user_id = 11;</span><br><span class="line">$mode-&gt;save();</span><br><span class="line"></span><br><span class="line">$mode-&gt;comment()-&gt;create([</span><br><span class="line">    &apos;post_id&apos; =&gt; 3,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><p>&emsp;而且我的公司有规定不能使用left join写法，而且模型中不允许写有关业务的代码，这样大大限制了随心所欲开发，降低了项目的维护成本。并且在使用模型关联后，一切的代码变得简单了，可读性提高，倒是性能这块我没有真正的测试过，之后肯定会研究一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一对一&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;什么是一对多？&lt;/p&gt;
&lt;p&gt;&amp;emsp;在程序角度讲：一对多基本上都是用来描述两个数据表之间的关系。&lt;/p&gt;
&lt;p&gt;&amp;emsp;假设现有两个数据表：（1）文章表posts （2）评论表comment。一个文章可以有多个评论，但一个评论只能属于一个文章，相对于评论来说它与文章的关系是多对一，相对与文章来说它与评论的关系是一对多，这也就是laravel里反向关联的基础。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;文章表posts&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;title&lt;/th&gt;&lt;th&gt;time&lt;/th&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;什么是一对一？&lt;/td&gt;&lt;td&gt;2019-11-07&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;什么是一对多？&lt;/td&gt;&lt;td&gt;2019-11-08&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;什么是多对多？&lt;/td&gt;&lt;td&gt;2019-11-06&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="laravel" scheme="http://www.daichongweb.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>vue+element实战（入门篇 一）</title>
    <link href="http://www.daichongweb.com/vue-element%E5%AE%9E%E6%88%98%EF%BC%88%E5%85%A5%E9%97%A8%E7%AF%87%EF%BC%89/"/>
    <id>http://www.daichongweb.com/vue-element实战（入门篇）/</id>
    <published>2019-11-03T05:12:51.000Z</published>
    <updated>2019-11-06T09:34:08.580Z</updated>
    
    <content type="html"><![CDATA[<p><b>我为什么会学vue？</b></p><p>&emsp;学Vue之前一直觉得它好难，首先源代码看不懂，对于我一个主要是做PHP后端来说，看见那些import还有哪些花里胡哨的语法，真的是太难看懂了。<br><img src="/vue-element实战（入门篇）/img/vue.jpg"><br>&emsp;后来在机缘巧合的进了一家后台是用vue+element搭建的公司，因为公司的前端就一个，关键还是个妹子，也不好意给她增加工作量，基本上管理后台的后端代码和前端代码都需要我来写。</p><p>&emsp;好在框架已经搭建好了，我只需要写一些数据交互和数据渲染。</p><p>&emsp;更深入的了解Vue的设计思想点击这里： <a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Vue官网</a>、<a href="https://www.cnblogs.com/baiyang2292/p/11172675.html" target="_blank" rel="noopener">Vue设计思想</a>。<br><a id="more"></a></p><p><b>vue到底难不难？</b></p><p>&emsp;从我真正接触vue来说，想真正把vue摸透确实很难，但是只想学会怎么用vue搭建后台管理系统这倒不难。</p><p>&emsp;当然这需要你有点前端的基础（html\css\js），在没有前端的基础情况下，入门vue确实有点难。</p><p><b>有一定前端的基础的情况下，怎么快速的入门vue？</b></p><p>&emsp;首先你要知道vue+elementUi或者其他ui开发的核心是什么？</p><p>&emsp;简单的举个栗子：</p><figure class="highlight js"><figcaption><span>小栗子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-table :data=<span class="string">"tableData"</span>&gt;</span><br><span class="line">      &lt;el-table-column prop=<span class="string">"date"</span> label=<span class="string">"日期"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">      &lt;el-table-column prop="name" label="姓名"&gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop="address" label="地址"&gt;&lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">      data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          tableData: [&#123;</span><br><span class="line">            date: '2016-05-02',</span><br><span class="line">            name: '王小虎',</span><br><span class="line">            address: '上海市普陀区金沙江路 1518 弄'</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            date: '2016-05-04',</span><br><span class="line">            name: '王小虎',</span><br><span class="line">            address: '上海市普陀区金沙江路 1517 弄'</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            date: '2016-05-01',</span><br><span class="line">            name: '王小虎',</span><br><span class="line">            address: '上海市普陀区金沙江路 1519 弄'</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            date: '2016-05-03',</span><br><span class="line">            name: '王小虎',</span><br><span class="line">            address: '上海市普陀区金沙江路 1516 弄'</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="/vue-element实战（入门篇）/img/table.png"><p>&emsp;从代码可以看出Table的数据来源是Js里tableData数组，它们是通过Vue的特性双向绑定来实现的<a>:data=”tableData”</a>，字段通过<a>:prop=”字段名”</a>。</p><p>&emsp;那么在真实数据交互的情况下就这么写：</p><figure class="highlight js"><figcaption><span>小栗子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">      data() &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          tableData: []</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123; <span class="comment">// 页面创建后执行</span></span><br><span class="line">        <span class="keyword">this</span>.getList(); <span class="comment">// 查询数据</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123; <span class="comment">// 方法集合</span></span><br><span class="line">        getList()&#123;</span><br><span class="line">          axios(&#123; <span class="comment">// 首选你要安装 axios</span></span><br><span class="line">             method:<span class="string">'get'</span>,</span><br><span class="line">             url:<span class="string">'请求地址'</span></span><br><span class="line">          &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">resp</span>)</span>&#123;</span><br><span class="line">              <span class="comment">// 请求成功，把数据赋值给tableData</span></span><br><span class="line">              <span class="keyword">this</span>.tableData = resp.data</span><br><span class="line">          &#125;).catch(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// 请求失败</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>&emsp;就这么简单，vue+element+axios数据交互和渲染已经完成了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;我为什么会学vue？&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;学Vue之前一直觉得它好难，首先源代码看不懂，对于我一个主要是做PHP后端来说，看见那些import还有哪些花里胡哨的语法，真的是太难看懂了。&lt;br&gt;&lt;img src=&quot;/vue-element实战（入门篇）/img/vue.jpg&quot;&gt;&lt;br&gt;&amp;emsp;后来在机缘巧合的进了一家后台是用vue+element搭建的公司，因为公司的前端就一个，关键还是个妹子，也不好意给她增加工作量，基本上管理后台的后端代码和前端代码都需要我来写。&lt;/p&gt;
&lt;p&gt;&amp;emsp;好在框架已经搭建好了，我只需要写一些数据交互和数据渲染。&lt;/p&gt;
&lt;p&gt;&amp;emsp;更深入的了解Vue的设计思想点击这里： &lt;a href=&quot;https://cn.vuejs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue官网&lt;/a&gt;、&lt;a href=&quot;https://www.cnblogs.com/baiyang2292/p/11172675.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue设计思想&lt;/a&gt;。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://www.daichongweb.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Navicat Premium 12.1安装与激活</title>
    <link href="http://www.daichongweb.com/Navicat-Premium-12-1%E5%AE%89%E8%A3%85%E4%B8%8E%E6%BF%80%E6%B4%BB/"/>
    <id>http://www.daichongweb.com/Navicat-Premium-12-1安装与激活/</id>
    <published>2019-09-28T09:45:15.000Z</published>
    <updated>2019-11-03T08:11:30.789Z</updated>
    
    <content type="html"><![CDATA[<p><b>前言</b></p><p>&emsp;<a>（1）即将国庆，在我回老家之前给大家分享一波福利！</a></p><p>&emsp;（2）后端开发离不开数据库的管理，为了更加方便的管理数据，经常会使用一些数据库管理工。如<a href="https://www.phpmyadmin.net" target="_blank" rel="noopener">phpMyAdmin</a>、<a href="https://www.webyog.com/" target="_blank" rel="noopener">SQLyog</a>、<a href="https://dev.mysql.com/downloads/workbench/" target="_blank" rel="noopener">Workbench</a>、 <a href="https://www.navicat.com.cn/" target="_blank" rel="noopener">Navicat</a>等等。</p><p>&emsp;（3）但我个人觉得从UI、功能上来说最优的是<a>Navicat</a>。</p><p>&emsp;（4）具体的功能就不做介绍了，本篇就教大家怎么破解使用最新版的<a>Navicat</a>，而且是破解官方版的哦，绝对不是那种从乱七八糟的网站上下载来的。</p><p>&emsp;（5）安全可靠，好用，<a>官方收费3个月1699人民币</a>，马上能免费用到他，想想就觉得兴奋。<br><a id="more"></a></p><p><b>下载&amp;安装</b></p><p>&emsp;（1）官方最新版下载地址:<a href="https://www.navicat.com.cn/download/navicat-premium" target="_blank" rel="noopener">Navicat Premium 12.1</a>。</p><p>&emsp;（2）注册机下载地址： <a href="https://pan.baidu.com/s/1ADnw3MrVnzV4j1-MTLv1qg" target="_blank" rel="noopener">Navicat注册机</a>。</p><p><b>破解</b></p><p>&emsp;（2）<a>Navicat Premium 12.1</a>安装步骤就不介绍了，直接都next就好了。</p><p>&emsp;（3）安装注册机（把杀毒软件全部退出）。</p><p>&emsp;（4）选择你对应的版本信息和语言。</p><img src="/Navicat-Premium-12-1安装与激活/img/p.png"><p>&emsp;（5）点击Patch选择Navicat安装目录下的navicat.exe。</p><img src="/Navicat-Premium-12-1安装与激活/img/p1.png"><p>&emsp;（6）点击Generate生成注册码。</p><img src="/Navicat-Premium-12-1安装与激活/img/p2.png"><p>&emsp;（7）把注册码复制到软件中，点击激活，这里会提示激活失败，然后咱们点击手动激活。</p><img src="/Navicat-Premium-12-1安装与激活/img/p4.png"><p>&emsp;（8）把请求码复制到注册机中，如下面的位置，然后点击Generate，把返回的激活码再复制回软件中，点击激活。</p><img src="/Navicat-Premium-12-1安装与激活/img/p5.png"><p>&emsp;（9）激活成功。</p><img src="/Navicat-Premium-12-1安装与激活/img/p6.png"><p><b>最后</b></p><p>&emsp;然后就尽情的使用吧！！！！哈哈哈。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;前言&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&lt;a&gt;（1）即将国庆，在我回老家之前给大家分享一波福利！&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;（2）后端开发离不开数据库的管理，为了更加方便的管理数据，经常会使用一些数据库管理工。如&lt;a href=&quot;https://www.phpmyadmin.net&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;phpMyAdmin&lt;/a&gt;、&lt;a href=&quot;https://www.webyog.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SQLyog&lt;/a&gt;、&lt;a href=&quot;https://dev.mysql.com/downloads/workbench/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Workbench&lt;/a&gt;、 &lt;a href=&quot;https://www.navicat.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Navicat&lt;/a&gt;等等。&lt;/p&gt;
&lt;p&gt;&amp;emsp;（3）但我个人觉得从UI、功能上来说最优的是&lt;a&gt;Navicat&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&amp;emsp;（4）具体的功能就不做介绍了，本篇就教大家怎么破解使用最新版的&lt;a&gt;Navicat&lt;/a&gt;，而且是破解官方版的哦，绝对不是那种从乱七八糟的网站上下载来的。&lt;/p&gt;
&lt;p&gt;&amp;emsp;（5）安全可靠，好用，&lt;a&gt;官方收费3个月1699人民币&lt;/a&gt;，马上能免费用到他，想想就觉得兴奋。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发工具" scheme="http://www.daichongweb.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>swoole+websocket实现聊天室功能</title>
    <link href="http://www.daichongweb.com/swoole+websocket%E5%AE%9E%E7%8E%B0%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.daichongweb.com/swoole+websocket实现聊天室功能/</id>
    <published>2019-09-25T02:43:15.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>基础介绍</b></p><p>&emsp;（1）<a href="https://baike.baidu.com/item/Swoole/3707136?fr=aladdin" target="_blank" rel="noopener">Swoole</a>是一个面向生产环境的 PHP 异步网络通信引擎，使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。Swoole 可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域。 使用 PHP + Swoole 作为网络通信框架，可以使企业 IT 研发团队的效率大大提升。—<em>百度百科</em></p><p>&emsp;（2）<a href="https://baike.baidu.com/item/WebSocket/1953845?fr=aladdin" target="_blank" rel="noopener">WebSocket</a>是一种在单个TCP连接上进行全双工通信的协议。WebSocket通信协议于2011年被IETF定为标准RFC 6455，并由RFC7936补充规范。WebSocket API也被W3C定为标准。<br>WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。 —<em>百度百科</em><br><a id="more"></a></p><p>&emsp;（3）那这篇的主题就是如何使用<a>Swoole</a>+<a>WebSocket</a>实现一个简易的聊天室。</p><p>&emsp;&emsp;熟悉网络通信协议的同学肯定不会陌生。</p><p><b>功能需求及问题处理</b></p><p>&emsp;web端：<br>&emsp;&emsp;（1）每次刷新都会生成一个唯一的ID(id值从1开始).<br>&emsp;&emsp;（2）第一次进入网站时会要求用户设置昵称并会与ID进行绑定。<br>&emsp;问题点：<br>&emsp;&emsp;（1）刷新页面后用户标识（ID）会重新生成，之前生成ID被弃用。<br>&emsp;&emsp;（2）websocket生成了新的用户ID,但是跟现在的无法形成关联关系。</p><p>&emsp;server端：<br>&emsp;（1）当用户进入聊天室后，发送广播给所有人并加入聊天群组（使用redis存储）。<br>&emsp;（2）当用户退出直播间后，发送广播给所有人并清除该用户的记录。<br>&emsp;（3）用户每发送一次消息都要形成新的记录广播给所有人。<br>&emsp;（4）用户生成新的昵称后把昵称推送给他。</p><p>&emsp;web端问题处理方法：<br>&emsp;（1）浏览器刷新时提醒用户刷新即将重新获得新的身份。<br>&emsp;（2）用户连接成功后记录用户name,每次连接把这个name带上，清除之前该name的绑定关系，形成新的关系。</p><p><b>演示地址</b></p><p>&emsp;<a href="http://swoole.daichongweb.cn" target="_blank" rel="noopener">聊天室演示</a></p><p><b>代码实现</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;RedisManager.php&quot;;</span><br><span class="line"></span><br><span class="line">$server = new Swoole\WebSocket\Server(&quot;0.0.0.0&quot;, 8877);</span><br><span class="line"></span><br><span class="line">// 客户端连接</span><br><span class="line">$server-&gt;on(&apos;open&apos;, function (Swoole\WebSocket\Server $server, $request) &#123;</span><br><span class="line">    //连接成功把当前在线的用户返回</span><br><span class="line">    $user_list = RedisConnect::getRedis()-&gt;hGetAll(&apos;message:user&apos;);</span><br><span class="line">    alone($server, $request-&gt;fd, [</span><br><span class="line">        &apos;type&apos; =&gt; &apos;first&apos;,</span><br><span class="line">        &apos;data&apos; =&gt; $user_list</span><br><span class="line">    ]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 接收客户端发送的消息</span><br><span class="line">$server-&gt;on(&apos;message&apos;, function (Swoole\WebSocket\Server $server, $frame) &#123;</span><br><span class="line">    $message_data = json_decode($frame-&gt;data, true);</span><br><span class="line">    $type = $message_data[&apos;type&apos;];</span><br><span class="line">    $data = $message_data[&apos;user_name&apos;];</span><br><span class="line">    if (isset($message_data[&apos;send_message&apos;])) &#123;</span><br><span class="line">        $user_message = $message_data[&apos;send_message&apos;];</span><br><span class="line">    &#125;</span><br><span class="line">    switch ($type) &#123;</span><br><span class="line">        case &apos;save_user&apos;:</span><br><span class="line">            $new_name = &apos;大厦单子&apos; . $frame-&gt;fd . &apos;号&apos;;</span><br><span class="line">            // 修改用户昵称</span><br><span class="line">            RedisConnect::getRedis()-&gt;hset(&apos;message:user&apos;, $frame-&gt;fd, $new_name);</span><br><span class="line"></span><br><span class="line">            // 把生成的用户昵称返回给他</span><br><span class="line">            alone($server, $frame-&gt;fd, [</span><br><span class="line">                &apos;type&apos; =&gt; &apos;new_name&apos;,</span><br><span class="line">                &apos;name&apos; =&gt; $new_name,</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd</span><br><span class="line">            ]);</span><br><span class="line"></span><br><span class="line">            // 广播消息给其他用户</span><br><span class="line">            groupSending($server, [</span><br><span class="line">                &apos;type&apos; =&gt; &apos;open&apos;,</span><br><span class="line">                &apos;name&apos; =&gt; $new_name,</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd</span><br><span class="line">            ]);</span><br><span class="line">            break;</span><br><span class="line">        case &apos;send_message&apos;:</span><br><span class="line">            $msg = [</span><br><span class="line">                &apos;id&apos; =&gt; $frame-&gt;fd,</span><br><span class="line">                &apos;user_name&apos; =&gt; $data,</span><br><span class="line">                &apos;message&apos; =&gt; $user_message,</span><br><span class="line">                &apos;type&apos; =&gt; &apos;message&apos;</span><br><span class="line">            ];</span><br><span class="line">            // 接受用户发送的消息</span><br><span class="line">            RedisConnect::getRedis()-&gt;lpush(&apos;message:user:say&apos;, $msg);</span><br><span class="line">            groupSending($server, $msg);</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 退出聊天室</span><br><span class="line">$server-&gt;on(&apos;close&apos;, function ($ser, $fd) &#123;</span><br><span class="line">    $user = RedisConnect::getRedis()-&gt;hget(&apos;message:user&apos;, $fd);</span><br><span class="line">    RedisConnect::getRedis()-&gt;hdel(&apos;message:user&apos;, $fd);</span><br><span class="line">    $msg = [</span><br><span class="line">        &apos;id&apos; =&gt; $fd,</span><br><span class="line">        &apos;user_name&apos; =&gt; $user,</span><br><span class="line">        &apos;message&apos; =&gt; &apos;退出聊天室&apos;,</span><br><span class="line">        &apos;type&apos; =&gt; &apos;close&apos;</span><br><span class="line">    ];</span><br><span class="line">    groupSending($ser, $msg, $fd);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 开启服务</span><br><span class="line">$server-&gt;start();</span><br><span class="line"></span><br><span class="line">// 群发消息</span><br><span class="line">function groupSending($server, $msg, $self = null)</span><br><span class="line">&#123;</span><br><span class="line">    foreach ($server-&gt;connections as $conn) &#123;</span><br><span class="line">        if ($conn == $self) break; //不再推送给当前退出的用户</span><br><span class="line">        $server-&gt;push($conn, json_encode($msg));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 单独发消息</span><br><span class="line">function alone($server, $fd, $msg)</span><br><span class="line">&#123;</span><br><span class="line">    $server-&gt;push($fd, json_encode($msg));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;聊天室&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">       *&#123;margin:0;padding:0&#125;.box&#123;width:602px;height:500px;margin:20px auto&#125;.body&#123;width:500px;height:500px;border:1px solid #333;padding:20px;box-sizing:border-box;float:right&#125;.title&#123;text-align:center;margin-top:10px&#125;.msg&#123;margin-top:20px;width:100%;text-align:left&#125;.message_box&#123;width:100%;height:90%;margin-top:10px;font-size:12px;overflow:hidden;overflow-y:auto&#125;.name&#123;font-weight:bold&#125;.right&#123;text-align:right&#125;.prompt&#123;width:600px;margin:0 auto&#125;.live&#123;width:100px;height:500px;float:left;border:1px solid #333;font-size:12px;text-align:center&#125;.live-box&#123;height:100%;overflow:hidden;overflow-y:auto&#125;.live-box p&#123;margin-top:10px&#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;title&quot;&gt;+++++++++++聊天室++++++++++++&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;message_box&quot; id=&quot;test&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;live&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;live-title&quot;&gt;在线人数&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;live-box&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;prompt&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;say&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;发送&quot; id=&quot;send&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;input type=&quot;button&quot; value=&quot;增加消息&quot; id=&quot;add&quot;&gt; --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;jquery.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    window.onbeforeunload = function (event) &#123;</span><br><span class="line">        window.localStorage.clear();</span><br><span class="line">    &#125;;</span><br><span class="line">    $(function () &#123;</span><br><span class="line">        window.user_name = &apos;&apos;;</span><br><span class="line">        // 获取在线用户</span><br><span class="line">        if (!(&quot;WebSocket&quot; in window)) &#123;</span><br><span class="line">            alert(&quot;您的浏览器不支持 WebSocket!&quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        // 连接</span><br><span class="line">        let ws = new WebSocket(&quot;ws://49.235.172.110:8877&quot;);</span><br><span class="line">        //连接成功</span><br><span class="line">        ws.onopen = function (event) &#123;</span><br><span class="line">            // 修改昵称</span><br><span class="line">            let user_info = &#123;</span><br><span class="line">                &apos;type&apos;: &apos;save_user&apos;,</span><br><span class="line">                &apos;user_name&apos;: &apos;&apos;,</span><br><span class="line">            &#125;;</span><br><span class="line">            ws.send(JSON.stringify(user_info));</span><br><span class="line">            console.log(&apos;连接成功&apos;, &apos;修改昵称成功&apos;);</span><br><span class="line">        &#125;;</span><br><span class="line">        ws.onmessage = function (evt) &#123;</span><br><span class="line">            let received_msg = JSON.parse(evt.data);</span><br><span class="line">            let type = received_msg[&apos;type&apos;];</span><br><span class="line">            switch (type) &#123;</span><br><span class="line">                case &apos;message&apos;:</span><br><span class="line">                    add_msg(received_msg);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;close&apos;:</span><br><span class="line">                    $(&quot;.live-box&quot;).find(&apos;p[user=&apos; + received_msg[&apos;id&apos;] + &apos;]&apos;).remove();</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;connect&apos;:</span><br><span class="line">                    console.log(received_msg);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;new_name&apos;:</span><br><span class="line">                    user_name = received_msg[&apos;name&apos;];</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;open&apos;:</span><br><span class="line">                    $(&apos;.live-box&apos;).append(&apos;&lt;p user=&quot;&apos; + received_msg[&apos;id&apos;] + &apos;&quot;&gt;&apos; + received_msg[&apos;name&apos;] + &apos;&lt;/p&gt;&apos;);</span><br><span class="line">                    break;</span><br><span class="line">                case &apos;first&apos;:</span><br><span class="line">                    let data = received_msg[&apos;data&apos;];</span><br><span class="line">                    let str = &apos;&apos;;</span><br><span class="line">                    $.each(data, function (k, v) &#123;</span><br><span class="line">                        if (isNaN(v)) &#123;</span><br><span class="line">                            str += &apos;&lt;p user=&quot;&apos; + k + &apos;&quot;&gt;&apos; + v + &apos;&lt;/p&gt;&apos;;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    $(&apos;.live-box&apos;).append(str);</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 发送消息</span><br><span class="line">        $(&quot;#send&quot;).click(function () &#123;</span><br><span class="line">            send_msg();</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        $(&quot;input[name=say]&quot;).bind(&quot;keydown&quot;, function (e) &#123;</span><br><span class="line">            var theEvent = e || window.event;</span><br><span class="line">            var code = theEvent.keyCode || theEvent.which || theEvent.charCode;</span><br><span class="line">            if (code == 13) &#123;</span><br><span class="line">                send_msg();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 发送消息</span><br><span class="line">        function send_msg() &#123;</span><br><span class="line">            var message = $(&apos;input[name=say]&apos;).val();</span><br><span class="line">            if (message !== &apos; &apos;) &#123;</span><br><span class="line">                var arr = &#123;</span><br><span class="line">                    &apos;type&apos;: &apos;send_message&apos;,</span><br><span class="line">                    &apos;user_name&apos;: user_name,</span><br><span class="line">                    &apos;send_message&apos;: message</span><br><span class="line">                &#125;;</span><br><span class="line">                ws.send(JSON.stringify(arr));</span><br><span class="line">            &#125;</span><br><span class="line">            $(&apos;input[name=say]&apos;).val(&apos; &apos;);</span><br><span class="line">            var ele = document.getElementById(&quot;test&quot;);</span><br><span class="line">            if (ele.scrollHeight &gt; ele.clientHeight) &#123;</span><br><span class="line">                ele.scrollTop = ele.scrollHeight + 100;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 增加消息</span><br><span class="line">        function add_msg(data) &#123;</span><br><span class="line">            let str = &apos;&lt;div class=&quot;msg&quot;&gt;&apos;;</span><br><span class="line">            str += &apos;&lt;span class=&quot;name&quot;&gt;&apos; + data[&apos;user_name&apos;] + &apos;&lt;/span&gt;:&apos;;</span><br><span class="line">            str += &apos;&lt;span class=&quot;text&quot;&gt;&apos; + data[&apos;message&apos;] + &apos;&lt;/span&gt;&lt;/div&gt;&apos;;</span><br><span class="line">            $(&apos;.message_box&apos;).append(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><b>总结</b></p><p>&emsp;这篇文章只是简单的介绍前后端如何实现通信，很多的细节问题没有进行处理。<br>&emsp;UI比较low，这里大家只看代码就好了…<br>&emsp;更多关于Swoole的功能还待探索…敬请期待…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;基础介绍&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;（1）&lt;a href=&quot;https://baike.baidu.com/item/Swoole/3707136?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swoole&lt;/a&gt;是一个面向生产环境的 PHP 异步网络通信引擎，使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。Swoole 可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域。 使用 PHP + Swoole 作为网络通信框架，可以使企业 IT 研发团队的效率大大提升。—&lt;em&gt;百度百科&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;（2）&lt;a href=&quot;https://baike.baidu.com/item/WebSocket/1953845?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebSocket&lt;/a&gt;是一种在单个TCP连接上进行全双工通信的协议。WebSocket通信协议于2011年被IETF定为标准RFC 6455，并由RFC7936补充规范。WebSocket API也被W3C定为标准。&lt;br&gt;WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。 —&lt;em&gt;百度百科&lt;/em&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php扩展类" scheme="http://www.daichongweb.com/tags/php%E6%89%A9%E5%B1%95%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>WEB性能测试-并发测试</title>
    <link href="http://www.daichongweb.com/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-%E5%B9%B6%E5%8F%91%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.daichongweb.com/WEB性能测试-并发测试/</id>
    <published>2019-09-18T07:07:45.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>前篇回忆：</b></p><p>&emsp;前两篇介绍了<a>redis</a>队列如何处理订单和<a>JMeter</a>的环境配置及安装方法，这篇根据程序开发的逻辑和习惯来解决几个问题：</p><p>&emsp;&emsp;（1）JMeter并发测试的基本使用。<br>&emsp;&emsp;（2）<a>redis</a>和<a>mysql</a>相比的性能差距如何？<br>&emsp;&emsp;（3）大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？<br>&emsp;&emsp;（4）遇到并发带来各种各样的问题如何解决？<br><a id="more"></a></p><p><b>问题一：<sup>JMeter并发测试的基本使用<sup></sup></sup></b></p><p>&emsp;（1）设置系统语言：Options-&gt;Choose Lanuage 里选择适合你的语言。<br>&emsp;（2）添加线程组：<br><img src="/WEB性能测试-并发测试/img/plan.png"><br>&emsp;（3）设置线程属性：<br>&emsp;&emsp;线程数：也就是并发数。<br>&emsp;&emsp;Ramp-Up时间（秒）：并发时间，0为同时并发。<br>&emsp;&emsp;循环次数：重复次数。<br><img src="/WEB性能测试-并发测试/img/plan1.png"><br>&emsp;（4）添加HTTP请求：<br>&emsp;&emsp;协议：http或https。<br>&emsp;&emsp;服务器名称或IP：请求地址。<br>&emsp;&emsp;路径：要请求的路由或文件路径。<br>&emsp;&emsp;参数：添加请求参数。<br><img src="/WEB性能测试-并发测试/img/plan2.png"><br>&emsp;（5）添加察看结果树：可查看发送的数据，返回的结果等。<br><img src="/WEB性能测试-并发测试/img/plan3.png"><br>&emsp;（6）添加汇总报告：可查看错误率，吞吐量等。<br><img src="/WEB性能测试-并发测试/img/plan4.png"></p><p><b>问题二：<sup>大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？<sup></sup></sup></b></p><p>&emsp;在同时并发2000的情况下（因为redis队列为异步，所以这里不考虑redis出列的性能问题）：<br>&emsp;<a>mysql</a>：错误率87.9%，成功条数241。<br><img src="/WEB性能测试-并发测试/img/plan5.png"><br>&emsp;<a>redis</a>：错误率0.35%，成功条数1993。<br><img src="/WEB性能测试-并发测试/img/plan5.png"><br>&emsp;总结：从以上结果可以看出在高并发场景下msyql扛不住压力错误率高。<br>&emsp;结论：redis在处理并发性能优于mysql。</p><p><b>问题三：大量的并发和请求下<a>redis</a>、<a>mysql</a>、<a>nginx</a>各自会出现的问题？</b></p><p>&emsp;3000并发循环请求3次相当于9000的次请求的情况下：<br>&emsp;&emsp;（1）nginx报错：<a>Too many open files</a>（打开的文件数超过限制nginx默认为1024）。<br>&emsp;&emsp;（2）redis报错：<a>RDB: 2 MB of memory used by copy-on-write</a>。<br>&emsp;&emsp;（3）mysql直接写入失败。</p><p><b>问题四：<sup>遇到并发带来各种各样的问题如何解决？<sup></sup></sup></b></p><p>&emsp;（1）<a>nginx错误分析：最大打开文件数超过限制</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看系统打开文件值 Max open files</span><br><span class="line">cat /proc/`ps -ef | grep nginx|grep -v grep|head -1|awk &apos;&#123;print $2&#125;&apos;`/limits</span><br><span class="line"># 修改</span><br><span class="line">vi /etc/systemd/ststem.conf</span><br><span class="line"># 修改两个值</span><br><span class="line">DefaultLimitNOFILE = 102400</span><br><span class="line">DefaultLimitNPROC = 102400</span><br><span class="line"># 随后重启系统</span><br></pre></td></tr></table></figure><br>&emsp;（2）<a>redis错误分析：保存频繁导致内存不够了。</a>（暂未找到最合适的方案）<br>&emsp;点击查看更详细的错误分析:<a href="https://yq.aliyun.com/articles/629296" target="_blank" rel="noopener">Redis-redis异常解决以及日常命令</a></p><p>&emsp;（3）<a>mysql</a>暂没找到方案。</p><p><b>总结：</b></p><p>&emsp;相同的配置&amp;高并发场景下<a>redis</a>比<a>mysql</a>要可靠很多，伴随着并发越来越高服务器、程序、数据库各方面的问题扑面而来，不要慌，这才是你真正需要学习的东西！生于忧患死于安乐，只有不断的处理问题，才能真正的驾驭程序！祝你早日成功！！！</p><p>&emsp;本文最高测试并发在3000循环次数为3次，服务器环境为lnmrp,系统配置为2核4G6M,因为redis的问题没有解决不能做更高的并发测试。并且还有一个redis的问题没有解决，待我研究几日说。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;前篇回忆：&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;前两篇介绍了&lt;a&gt;redis&lt;/a&gt;队列如何处理订单和&lt;a&gt;JMeter&lt;/a&gt;的环境配置及安装方法，这篇根据程序开发的逻辑和习惯来解决几个问题：&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;（1）JMeter并发测试的基本使用。&lt;br&gt;&amp;emsp;&amp;emsp;（2）&lt;a&gt;redis&lt;/a&gt;和&lt;a&gt;mysql&lt;/a&gt;相比的性能差距如何？&lt;br&gt;&amp;emsp;&amp;emsp;（3）大量的并发和请求下&lt;a&gt;redis&lt;/a&gt;、&lt;a&gt;mysql&lt;/a&gt;、&lt;a&gt;nginx&lt;/a&gt;各自会出现的问题？&lt;br&gt;&amp;emsp;&amp;emsp;（4）遇到并发带来各种各样的问题如何解决？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试" scheme="http://www.daichongweb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>WEB性能测试-JMeter安装</title>
    <link href="http://www.daichongweb.com/WEB%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95-JMeter%E5%AE%89%E8%A3%85/"/>
    <id>http://www.daichongweb.com/WEB性能测试-JMeter安装/</id>
    <published>2019-09-17T01:55:10.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、了解JMeter工具</b></p><p>&emsp;<a href="https://baike.baidu.com/item/Jmeter/3104456?fr=aladdin" target="_blank" rel="noopener">Apache JMeter</a>是 <a href="https://baike.baidu.com/item/apache/6265" target="_blank" rel="noopener">Apache</a>组织的开放源代码项目，是一个100%纯Java桌面应用，用于压力测试和性能测量。它最初被设计用于Web应用测试但后来扩展到其它测试领域。Apache JMeter可以用于对静态的和动态的资源（文件，Servlet，Perl脚本，Java对象，数据库和查询，FTP服务器或是其它资源）的性能进行测试。JMeter可以用于在服务器，网络或对象模拟繁重的负载来测试它们提供服务的受压能力或者分析不同压力条件下的总体性能情况。你可以使用JMeter提供的图形化界面，分析性能指标或者在高负载情况下测试你的服务器/脚本/对象。<br><a id="more"></a><br><b>二、JMeter的作用</b></p><p>&emsp;（1）能够对<a href="https://baike.baidu.com/item/http/243074?fr=aladdin" target="_blank" rel="noopener">HTTP</a>和<a href="https://baike.baidu.com/item/FTP%E5%8D%8F%E8%AE%AE/7651119" target="_blank" rel="noopener">FTP</a>服务器进行压力和性能测试，也可以对任何的数据库进行同样的测试（通过<a href="https://baike.baidu.com/item/JDBC" target="_blank" rel="noopener">JDBC</a>）。</p><p>&emsp;（2）完全多线程 框架允许通过多个线程并发取样和 通过单独的线程组对不同的功能同时取样。</p><p>&emsp;（3）在设计阶段，JMeter能够充当HTTP PROXY（代理）来记录IE/NETSCAPE的HTTP请求，也可以记录apache等WebServer的log文件来重现HTTP流量。当这些HTTP客户端请求被记录以后，测试运行时可以方便的设置重复次数和并发度（线程数）来产生巨大的流量。JMeter还提供可视化组件以及报表工具把量服务器在不同压力下的性能展现出来。</p><p><b>三、安装</b></p><p>&emsp;（1）JMeter是完全基于JAVA开发，首先要安装 <a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">JAVA JDK</a>。</p><p>&emsp;（2）安装<a href="http://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">JMeter客户端</a>。</p><p><b>四、配置JAVA环境变量</b></p><p>&emsp;（1）右键 “我的电脑\属性”<sup>(第一步)</sup> 或 “控制面板\所有控制面板项\系统”<sup>(第一步)</sup> 找到 “高级系统设置”<sup>(第二步)</sup> 点击 “环境变量”<sup>(第三步)</sup>。</p><p>&emsp;（2）新建环境变量JAVA_HOME，值为JAVA安装的根目录。</p><img src="/WEB性能测试-JMeter安装/img/path.png"><p>&emsp;（3）新建环境变量CLASSPATH，值为JAVA安装目录下的lib/tools.jar和lib/dt.jar。</p><img src="/WEB性能测试-JMeter安装/img/path1.png"><p>&emsp;（4）修改系统变量的PATH值，增加为JAVA安装目录下的bin目录。</p><img src="/WEB性能测试-JMeter安装/img/path2.png"><p><b>五、配置JMeter环境变量</b></p><p>&emsp;（1）新建环境变量JMETER_HOME，值为JMeter的根目录。</p><img src="/WEB性能测试-JMeter安装/img/path3.png"><p>&emsp;（2）修改CLASSPATH，增加JMeter/lib/ApacheJMeter_core.jar和logkit-2.0.jar。</p><img src="/WEB性能测试-JMeter安装/img/path4.png"><p>&emsp;（3）找到JMeter/bin/JMeter.bat双击打开，如出现错误，检查是否有JMeter/lib/ApacheJMeter_core.jar这个文件，没有这个文件就是安装错误了，重新换个包安装。</p><p><b>六、打开成功演示</b></p><p>&emsp;随后会自动打开JMeter客户端。</p><img src="/WEB性能测试-JMeter安装/img/path5.png"><p><b>七、总结</b></p><p>&emsp;总体的安装还是比较简单的，就是步骤繁多，每一个步骤都不能漏，否则就会无法使用。</p><p>&emsp;下一篇将会介绍JMeter的基本使用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、了解JMeter工具&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&lt;a href=&quot;https://baike.baidu.com/item/Jmeter/3104456?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache JMeter&lt;/a&gt;是 &lt;a href=&quot;https://baike.baidu.com/item/apache/6265&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache&lt;/a&gt;组织的开放源代码项目，是一个100%纯Java桌面应用，用于压力测试和性能测量。它最初被设计用于Web应用测试但后来扩展到其它测试领域。Apache JMeter可以用于对静态的和动态的资源（文件，Servlet，Perl脚本，Java对象，数据库和查询，FTP服务器或是其它资源）的性能进行测试。JMeter可以用于在服务器，网络或对象模拟繁重的负载来测试它们提供服务的受压能力或者分析不同压力条件下的总体性能情况。你可以使用JMeter提供的图形化界面，分析性能指标或者在高负载情况下测试你的服务器/脚本/对象。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试" scheme="http://www.daichongweb.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>消息队列（redis）-订单处理</title>
    <link href="http://www.daichongweb.com/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%88redis%EF%BC%89-%E8%AE%A2%E5%8D%95%E5%A4%84%E7%90%86/"/>
    <id>http://www.daichongweb.com/消息队列（redis）-订单处理/</id>
    <published>2019-09-16T03:20:32.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、简单的介绍</b></p><p>&emsp;<a href="https://baike.baidu.com/item/Redis/6549233?fr=aladdin" target="_blank" rel="noopener">Redis</a>是一个开源的使用<a href="https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fr=aladdin" target="_blank" rel="noopener">ANSI C语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。<br>&emsp;<a href="https://www.php.net/manual/zh/book.mysqli.php" target="_blank" rel="noopener">MySQLi</a>是一个开源使用的 <a href="https://baike.baidu.com/item/mySQL/471251?fr=aladdin" target="_blank" rel="noopener">MySQL</a>连接扩展，用于对数据库的操作和管理。<br>&emsp;<a href="http://pecl.php.net/package/redis" target="_blank" rel="noopener">php-redis</a>是一个开源的使用C语言编写的php扩展，用于php连接、管理redis。<br><a id="more"></a><br><b>二、业务介绍</b></p><p>&emsp;某商城搞促销活动，会有大量的订单涌入数据库，每个订单15分钟未支付即为过期订单并且不能继续支付。</p><p><b>二、需求分析</b></p><p>&emsp;很显然此业务需求在不使用redis队列的情况下，大量的订单并发会造成阻塞，甚至有可能超时（php默认的超时时间为30s）。</p><p>&emsp;那么就会有以下步骤：<br>&emsp;&emsp;（1）用户下单后把数据直接写入消息队列（list）而不是数据库，写入队列成功即返回用户成功消息。<br>&emsp;&emsp;（2）创建订单队列：启动脚本来处理订单队列，逐一写入数据库，并设置一个key为订单号的hash过期时间为15分钟。<br>&emsp;&emsp;（3）用户支付时首先拿这个订单号去redis里查是存在，如存在订单状态为正常状态，否则为过期状态。<br>&emsp;&emsp;（4）订单支付成功队列：支付成功后，把订单数据写入另一个队列中，并启动脚本处理订单状态都为‘支付成功’的队列（如发送消息，修改订单状态等操作）。</p><p>&emsp;<a>注意：</a>这期间可能会出现数据量过大，订单创建的队列尚未执行完毕，订单支付成功后查找该订单却未找到(lpop)，那么就需要把这个未找到的订单重新添加到队列的最后（rpush）。</p><p><b>三、代码实现</b><br>&emsp;<a>（1）创建订单：create_order.php</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;./RedisManager.php&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 模拟下单</span><br><span class="line"> */</span><br><span class="line">$post = $_POST;</span><br><span class="line">if (!empty($post)) &#123;</span><br><span class="line">    // 声明状态</span><br><span class="line">    $status = 0;</span><br><span class="line">    $msg = &apos;error&apos;;</span><br><span class="line"></span><br><span class="line">    $order = [</span><br><span class="line">        &apos;order_id&apos; =&gt; &apos;HD&apos; . time(),</span><br><span class="line">        &apos;name&apos; =&gt; $post[&apos;name&apos;] . &apos;_&apos; . $post[&apos;id&apos;],</span><br><span class="line">        &apos;price&apos; =&gt; $post[&apos;price&apos;],</span><br><span class="line">        &apos;date&apos; =&gt; date(&apos;Y-m-d H:i:s&apos;)</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    // 用户下单但未支付加入队列等待支付</span><br><span class="line">    return createOrder($order);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 创建订单 createOrder</span><br><span class="line"> *</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function createOrder($order)</span><br><span class="line">&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        $orderList = &apos;order:temp:list&apos;; // 临时订单列表</span><br><span class="line">        // 把订单写入队列 守护进程启动一个 watch_order.php 来处理订单消息</span><br><span class="line">        $result = RedisConnect::getRedis()-&gt;lpush($orderList, json_encode($order));</span><br><span class="line"></span><br><span class="line">        // 记录日志</span><br><span class="line">        if (!$result) &#123;</span><br><span class="line">            createLog(&apos;订单写入队列失败&apos;, $order);</span><br><span class="line">            returnMsg(&apos;订单写入队列失败&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">        returnMsg(&apos;下单成功&apos;, $order);</span><br><span class="line">    &#125; catch (Exception $e) &#123;</span><br><span class="line">        createLog($e-&gt;getMessage(), $order);</span><br><span class="line">        returnMsg($e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 写入日志 createLog</span><br><span class="line"> *</span><br><span class="line"> * @param string $msg</span><br><span class="line"> * @param array $data</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function createLog(string $msg, array $data = [])</span><br><span class="line">&#123;</span><br><span class="line">    $orderMsg = &apos;order:msg&apos;; // 订单消息</span><br><span class="line">    $data[&apos;errorMsg&apos;] = $msg;</span><br><span class="line">    $data[&apos;errorTime&apos;] = date(&apos;Y-m-d H:i:s&apos;);</span><br><span class="line"></span><br><span class="line">    RedisConnect::getRedis()-&gt;select(1);</span><br><span class="line">    RedisConnect::getRedis()-&gt;lPush($orderMsg, json_encode($data));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 输出消息 returnMsg</span><br><span class="line"> *</span><br><span class="line"> * @param string $msg</span><br><span class="line"> * @param array $data</span><br><span class="line"> * @return void</span><br><span class="line"> */</span><br><span class="line">function returnMsg(string $msg, array $data = [])</span><br><span class="line">&#123;</span><br><span class="line">    echo json_encode([</span><br><span class="line">        &apos;status&apos; =&gt; 200,</span><br><span class="line">        &apos;message&apos; =&gt; $msg,</span><br><span class="line">        &apos;data&apos; =&gt; $data</span><br><span class="line">    ]);</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;<a>（2）订单入库insert_db.php（以守护进程启动）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;default_socket_timeout&apos;, -1);</span><br><span class="line">include &apos;./RedisManager.php&apos;;</span><br><span class="line">include &apos;./MysqlManager.php&apos;;</span><br><span class="line"></span><br><span class="line">$orderExpire = &apos;order:temp:list&apos;;</span><br><span class="line">while (true) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">        $orderList = &apos;order:temp:list&apos;; // 临时订单列表</span><br><span class="line">if (RedisConnect::getRedis()-&gt;lSize($orderList) &lt; 1) &#123;</span><br><span class="line">var_dump(&apos;订单已处理完毕&apos;) . &apos;\n&apos;;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line">// 处理消息</span><br><span class="line">$order = RedisConnect::getRedis()-&gt;lPop($orderList);</span><br><span class="line"></span><br><span class="line">if ($order) &#123;</span><br><span class="line">$order = json_decode($order, true);</span><br><span class="line">$order_id = $order[&apos;order_id&apos;];</span><br><span class="line">$name = $order[&apos;name&apos;];</span><br><span class="line">$price = $order[&apos;price&apos;];</span><br><span class="line">$sql = &quot;INSERT INTO `order`(`order_id`,`name`,`price`) VALUES(&apos;&#123;$order_id&#125;&apos;,&apos;&#123;$name&#125;&apos;,&#123;$price&#125;)&quot;;</span><br><span class="line">$result = MysqlConnect::getMysql()-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">//给每一个订单设置一个过期时间</span><br><span class="line">$expireResult = RedisConnect::getRedis()-&gt;hMset($orderExpire . &apos;:&apos; . $order[&apos;order_id&apos;], $order);</span><br><span class="line">RedisConnect::getRedis()-&gt;expire($orderExpire . &apos;:&apos; . $order[&apos;order_id&apos;], 900);</span><br><span class="line">var_dump($result) . &apos;\n&apos;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (Exception $e) &#123;</span><br><span class="line">echo $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;<a>（3）监听过期的订单watch_order.php（以守护进程启动）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&apos;default_socket_timeout&apos;, -1);</span><br><span class="line"></span><br><span class="line">include &apos;./RedisManager.php&apos;;</span><br><span class="line">include &apos;./MysqlManager.php&apos;;</span><br><span class="line"></span><br><span class="line">RedisConnect::getRedis()-&gt;psubscribe(array(&apos;__keyevent@0__:expired&apos;), &apos;keyCallback&apos;);</span><br><span class="line"></span><br><span class="line">function keyCallback($redis, $pattern, $channel, $message)</span><br><span class="line">&#123;</span><br><span class="line">    // 把过期的订单写入队列进行处理（这里可以处理为不同的订单写入不同的队列）</span><br><span class="line">    $msgType = [</span><br><span class="line">        &apos;HD&apos; =&gt; &apos;home:order&apos;, // 住房订单</span><br><span class="line">        &apos;DD&apos; =&gt; &apos;ding:order&apos; // 餐饮订单</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $keyArr = explode(&apos;:&apos;, $message);</span><br><span class="line">    $key = array_pop($keyArr);</span><br><span class="line">    $id = substr($key, 0, 2);</span><br><span class="line">    switch($id)&#123;</span><br><span class="line">        case &apos;HD&apos;:</span><br><span class="line">            $sql = &quot;UPDATE `order` SET `status` = 1 WHERE `order_id` = &apos;&#123;$key&#125;&apos;&quot;;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    $result = MysqlConnect::getMysql()-&gt;query($sql);</span><br><span class="line">    var_dump($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;<a>（4）支付成功后的订单处理success_order.php（以守护进程启动）</a><br>&emsp;&emsp;代码上边代码一样不做展示。</p><p>&emsp;<a>（5）另外可增加日志队列处理来发送错误邮件给管理员send_error_mail.php（以守护进程启动）</a><br>&emsp;&emsp;——————————–</p><p><b>四、总结</b></p><p>&emsp;本文只是做业务分析，未在真实的业务场景中进行实现，如有错误还请多多指正。<br>&emsp;下一篇可能会写利用<a href>Jmeter</a>来分析该业务代码的效率性能等问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、简单的介绍&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;&lt;a href=&quot;https://baike.baidu.com/item/Redis/6549233?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Redis&lt;/a&gt;是一个开源的使用&lt;a href=&quot;https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ANSI C语言&lt;/a&gt;编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。&lt;br&gt;&amp;emsp;&lt;a href=&quot;https://www.php.net/manual/zh/book.mysqli.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MySQLi&lt;/a&gt;是一个开源使用的 &lt;a href=&quot;https://baike.baidu.com/item/mySQL/471251?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MySQL&lt;/a&gt;连接扩展，用于对数据库的操作和管理。&lt;br&gt;&amp;emsp;&lt;a href=&quot;http://pecl.php.net/package/redis&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;php-redis&lt;/a&gt;是一个开源的使用C语言编写的php扩展，用于php连接、管理redis。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="redis" scheme="http://www.daichongweb.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>解决nginx循环重定向问题</title>
    <link href="http://www.daichongweb.com/%E8%A7%A3%E5%86%B3nginx%E5%BE%AA%E7%8E%AF%E9%87%8D%E5%AE%9A%E5%90%91%E9%97%AE%E9%A2%98/"/>
    <id>http://www.daichongweb.com/解决nginx循环重定向问题/</id>
    <published>2019-09-09T03:12:07.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、什么是重定向、循环重定向</b></p><p>&emsp;（1）重定向是指浏览器先访问了服务器A，然后服务器A带着请求的参数（header、状态码3xx）返回到地址为B的服务器上。<br>&emsp;（2）循环重定向是指服务器A重定向到了服务器B，服务器B由于某种原因又重定向到了A，这样就构成了重定向循环。</p><p><b>二、3xx重定向状态码</b></p><p>&emsp;（1）301(Move Permanently)：永久性重定向，请求的资源被分配了新的URI，以后都使用这个（get）。<br>&emsp;（2）302(Found)：临时性重定向，请求的资源被分配了新的URI，本次使用这个（get，允许缓存）。<br>&emsp;（3）303(See Other)：请求资源存在另一个URI，应使用get方法获取请求资源。<br>&emsp;（4）307(Temporary Redirect)：类似于302，只是302的POST方法会变为GET，而307的不会。<br><a id="more"></a><br><b>三、怎么产生的？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.daichongweb.cn;</span><br><span class="line"></span><br><span class="line">    root   /site/hexo/public;</span><br><span class="line">    index  index.html;</span><br><span class="line"></span><br><span class="line">    # 这段是产生循环重定向的原因</span><br><span class="line">    # 当浏览器访问 www.daichongweb.cn 时发现不是https就会进行重定向，</span><br><span class="line">    # 但重定向到https之后又没有判断是否是https，也就是没有禁止跳转，最终造成了循环</span><br><span class="line">    return  301 https://$host$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、怎么解决？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.daichongweb.cn;</span><br><span class="line"></span><br><span class="line">    root   /site/hexo/public;</span><br><span class="line">    index  index.html;</span><br><span class="line"></span><br><span class="line">    # 通过上面的解释逻辑就变得相对简单了，只需要增加一个判断就可以解决</span><br><span class="line">    if ($scheme = http) &#123;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、总结</b></p><p>&emsp;在项目开发中经常会用到重定向，认识比较常见的状态码对网络请求的判断又很大帮助。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、什么是重定向、循环重定向&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;（1）重定向是指浏览器先访问了服务器A，然后服务器A带着请求的参数（header、状态码3xx）返回到地址为B的服务器上。&lt;br&gt;&amp;emsp;（2）循环重定向是指服务器A重定向到了服务器B，服务器B由于某种原因又重定向到了A，这样就构成了重定向循环。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;二、3xx重定向状态码&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;（1）301(Move Permanently)：永久性重定向，请求的资源被分配了新的URI，以后都使用这个（get）。&lt;br&gt;&amp;emsp;（2）302(Found)：临时性重定向，请求的资源被分配了新的URI，本次使用这个（get，允许缓存）。&lt;br&gt;&amp;emsp;（3）303(See Other)：请求资源存在另一个URI，应使用get方法获取请求资源。&lt;br&gt;&amp;emsp;（4）307(Temporary Redirect)：类似于302，只是302的POST方法会变为GET，而307的不会。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.daichongweb.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.6搭建lnmp环境</title>
    <link href="http://www.daichongweb.com/Centos7.6%E6%90%AD%E5%BB%BAlnmp%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.daichongweb.com/Centos7.6搭建lnmp环境/</id>
    <published>2019-09-07T09:39:48.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、前言</b></p><p>&emsp;搭建程序运行环境是程序员必不可少的技能！<br>&emsp;今天买了个新的云服务器，需要搭建环境，借此机会自己也熟悉了一番搭建的流程，做个日记供以后参考。<br>&emsp;本篇大部分命令仅适合<font color="#ff5722">Centos7.x</font>的系统使用。<br>&emsp;<font color="#ff5722">lnmp</font>是指<font color="#ff5722">Liunx、Nginx、Mysql和Php</font>。</p><p>&emsp;目录：<br>&emsp;（1）安装<font color="#ff5722">Nginx1.4</font>。<br>&emsp;（2）安装<font color="#ff5722">php7.2</font>。<br>&emsp;（3）安装<font color="#ff5722">Mariadb10.2</font>。<br>&emsp;（4）总结。<br><a id="more"></a></p><p><b>二、安装Nginx</b></p><p>&emsp;（1）防火墙设置，允许http、https通信、开启80、443、8080等端口（已开启的忽略此步骤）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 允许http通信</span><br><span class="line">firewall-cmd --zone=public --add-service=http --permanent</span><br><span class="line">// 允许https通信</span><br><span class="line">firewall-cmd --zone=public --add-service=https --permanent</span><br><span class="line">// 打开80端口</span><br><span class="line">firewall-cmd --zone-public –add-port=80/tcp --permanent </span><br><span class="line">// 打开443端口</span><br><span class="line">firewall-cmd --zone-public –add-port=443/tcp --permanent </span><br><span class="line">// 打开8080端口</span><br><span class="line">firewall-cmd --zone-public –add-port=8080/tcp --permanent </span><br><span class="line">// 重新加载配置</span><br><span class="line">firewall-cmd --reload </span><br></pre></td></tr></table></figure><br>&emsp;（2）下载依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum intall pcre pcre-devel yum install pcre pcre-devel yum install zlib zlib-devel yum install openssl; openssl-devel yum install openssl;openssl-devel yum install openssl openssl-devel</span><br></pre></td></tr></table></figure><br>&emsp;（3）配置官方yum源&amp;安装Nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install nginx</span><br><span class="line"></span><br><span class="line"># 默认主配置文件：/etc/nginx/conf.d</span><br><span class="line"></span><br><span class="line"># 启动&amp;停止</span><br><span class="line">systemctl start/stop nginx.service</span><br><span class="line"># 查看服务是否启动</span><br><span class="line">ps aux|grep nginx</span><br><span class="line"># 设置服务开机自启</span><br><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure></p><p><font color="#ff5722">注意：</font>安装成功后无法访问，请检查防火墙设置，或在服务商后台配置安全组策略等。</p><p><b>二、安装php</b></p><p>&emsp;（1）配置yum源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><br>&emsp;（2）安装php7.2及常用的扩展<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</span><br></pre></td></tr></table></figure><br>&emsp;（3）启动php-fpm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop/start php-fpm</span><br><span class="line"># 设置开机启动</span><br><span class="line">systemctl enable php-fpm</span><br></pre></td></tr></table></figure><br>&emsp;（4）配置nginx支持php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/default.conf</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    root   /usr/share/nginx/html; //这是里应用目录和下面的root对应，可自定义</span><br><span class="line">    index  index.html index.htm index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           /usr/share/nginx/html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>三、安装mariadb10.2</b></p><p>&emsp;（1）配置yum源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 进入</span><br><span class="line">cd /usr/local/src</span><br><span class="line"># 下载rpm包</span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"># 安装rpm</span><br><span class="line">rpm -ivh mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"># 安装 mysql-server</span><br><span class="line">yum install -y mysql-server</span><br><span class="line"># 启动 </span><br><span class="line">systemctl start mysqld</span><br><span class="line"># 设置开机自启</span><br><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure></p><p>&emsp;（2）登入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 由于MySQL从5.7开始不允许首次安装后，使用空密码进行登录，系统会随机生成一个密码以供管理员首次登录使用，这个密码记录在/var/log/mysqld.log文件中，使用下面的命令可以查看此密码：</span><br><span class="line">cat /var/log/mysqld.log|grep &apos;A temporary password&apos;</span><br><span class="line"># 登录</span><br><span class="line">mysql -u root -p</span><br><span class="line"># 如报错 You must reset your password using ALTER USER statement before executing this statement</span><br><span class="line">修改密码</span><br><span class="line">use mysql;</span><br><span class="line">SET PASSWORD = PASSWORD(&apos;daichongweb&apos;); </span><br><span class="line">或 </span><br><span class="line">ALTER USER USER() IDENTIFIED BY &apos;daichongweb&apos;;</span><br><span class="line"></span><br><span class="line"># 如报错Your password does not satisfy the current policy requirements</span><br><span class="line">set global validate_password_policy=0; //修改密码验证为长度验证</span><br></pre></td></tr></table></figure></p><p><b>四、总结</b></p><p>&emsp;总体来说使用yum安装比源码编译安装简单多了。<br>&emsp;再多的理论不如真正的实践。<br>&emsp;从出现问题，到分析问题，再到解决问题，你会从中学习到很多的知识，这也是我就算花钱也要买云服务器的原因。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、前言&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;搭建程序运行环境是程序员必不可少的技能！&lt;br&gt;&amp;emsp;今天买了个新的云服务器，需要搭建环境，借此机会自己也熟悉了一番搭建的流程，做个日记供以后参考。&lt;br&gt;&amp;emsp;本篇大部分命令仅适合&lt;font color=&quot;#ff5722&quot;&gt;Centos7.x&lt;/font&gt;的系统使用。&lt;br&gt;&amp;emsp;&lt;font color=&quot;#ff5722&quot;&gt;lnmp&lt;/font&gt;是指&lt;font color=&quot;#ff5722&quot;&gt;Liunx、Nginx、Mysql和Php&lt;/font&gt;。&lt;/p&gt;
&lt;p&gt;&amp;emsp;目录：&lt;br&gt;&amp;emsp;（1）安装&lt;font color=&quot;#ff5722&quot;&gt;Nginx1.4&lt;/font&gt;。&lt;br&gt;&amp;emsp;（2）安装&lt;font color=&quot;#ff5722&quot;&gt;php7.2&lt;/font&gt;。&lt;br&gt;&amp;emsp;（3）安装&lt;font color=&quot;#ff5722&quot;&gt;Mariadb10.2&lt;/font&gt;。&lt;br&gt;&amp;emsp;（4）总结。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.daichongweb.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>php性能优化-循环优化</title>
    <link href="http://www.daichongweb.com/php%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96-%E5%BE%AA%E7%8E%AF%E4%BC%98%E5%8C%96/"/>
    <id>http://www.daichongweb.com/php性能优化-循环优化/</id>
    <published>2019-08-31T02:22:30.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、前言</b></p><p>&emsp;对于任何计算机程序，程序的运行性能决定了一个程序的好坏，夸张一点说程序性能的好坏直接影响了一个互联网公司的生存与发展的问题。所以对于程序员，优化性能的技能是必不可少的，就因为不会优化性能，可能就会比其他人差好几个等级。</p><p>&emsp;在PHP界，大部分互联网公司的工作内容就是最常见的CURD。你会发现自己和一些应届毕业生相比完全没有竞争优势，甚至一些公司的岗位要求也只是会CURD就行了。就像我最近找工作，不止一次的遇到面试官问：“我你觉得你的优势是什么？”，我每次都是哑口无言。<br><a id="more"></a><br>&emsp;大家都懂为了避免这样的出现，学了很多种语言。造成现在PHP岗位的要求从只会PHP语言到<font color="#ff5722">PHP+MYSQL+LIUNX+HTNL+CSS+JS</font>,甚至我对面试官说：“我的优势是比其他人会的语言多！”的时候，他会回你一句：“这不是大家都会的吗？”。</p><p>&emsp;更恐怖的是，现在的PH招聘要求上都TM开始写要求熟悉<font color="#ff5722">JAVA、Python、Go、Golang</font>，你TM能再过分点吗？</p><p><b>二、言归正传</b></p><p>&emsp;在PHP中最常见的就是foreach，处理数据交际的时候一般第一时间想到的都是嵌套。</p><p>&emsp;在这我只能说尽量少用或者不使用这样的写法。</p><p>&emsp;下面介绍3种可以代替循环嵌套写法例子，并分析执行的效率和性能问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">ini_set(&apos;memory_limit&apos;,&apos;3072M&apos;);</span><br><span class="line"></span><br><span class="line">$arr = [];</span><br><span class="line">$arr1 = [];</span><br><span class="line"></span><br><span class="line">for($i=1;$i&lt;=1000000;$i++)&#123;</span><br><span class="line">$arr[$i] = [</span><br><span class="line">&apos;id&apos; =&gt; ($i+1)*2,</span><br><span class="line">&apos;name&apos; =&gt; &apos;戴崇_&apos;.$i</span><br><span class="line">];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for($j=1;$j&lt;=1000000;$j++)&#123;</span><br><span class="line">$arr1[$j] = [</span><br><span class="line">&apos;uid&apos; =&gt;($j+1)*2,</span><br><span class="line">&apos;age&apos; =&gt; $j</span><br><span class="line">];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$t1 = microtime(true);</span><br><span class="line"></span><br><span class="line">$mode = mode1($arr,$arr1);</span><br><span class="line"></span><br><span class="line">echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">$t2 = microtime(true);</span><br><span class="line">echo $mode . &apos;耗时: &apos;.round($t2-$t1,3).&apos; 秒&lt;br /&gt;&apos;;</span><br><span class="line">echo &apos;内存消耗: &apos; . memory_get_usage() / 1024 / 1024 . &apos; MB&lt;br /&gt;&apos;;</span><br><span class="line"></span><br><span class="line">// 循环嵌套</span><br><span class="line">function mode($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">foreach ($arr as $k =&gt; $v) &#123;</span><br><span class="line">foreach ($arr1 as $key =&gt; $value) &#123;</span><br><span class="line">if($v[&apos;id&apos;] == $value[&apos;uid&apos;])&#123;</span><br><span class="line">$arr[$k][&apos;age&apos;] = $value[&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return &apos;方法一-&gt;循环嵌套法-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 循环拆分</span><br><span class="line">function mode1($arr,$arr1)&#123;</span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">foreach ($arr as &amp;$value) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return &apos;方法二-&gt;循环拆分-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// array_walk 闭包</span><br><span class="line">function mode2($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">array_walk($arr, function(&amp;$value,$key) use ($arr1) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">return &apos;方法二-&gt;array_walk 闭包-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// array_map</span><br><span class="line"></span><br><span class="line">function mode3($arr,$arr1)&#123;</span><br><span class="line"></span><br><span class="line">$arr1 = array_index($arr1,&apos;uid&apos;);</span><br><span class="line"></span><br><span class="line">$arr = array_map(function(&amp;$value) use ($arr1) &#123;</span><br><span class="line">if(isset($arr1[$value[&apos;id&apos;]]))&#123;</span><br><span class="line">$value[&apos;age&apos;] = $arr1[$value[&apos;id&apos;]][&apos;age&apos;];</span><br><span class="line">&#125;</span><br><span class="line">return $value;</span><br><span class="line">&#125;, $arr);</span><br><span class="line"></span><br><span class="line">return &apos;方法三-&gt;array_map-&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 把多维数组中的某个键值设置为键名</span><br><span class="line">function array_index(array $array, $name)</span><br><span class="line">&#123;</span><br><span class="line">    $indexedArray = array();</span><br><span class="line">    if (empty($array)) &#123;</span><br><span class="line">        return $indexedArray;</span><br><span class="line">    &#125;</span><br><span class="line">    foreach ($array as $item) &#123;</span><br><span class="line">        if (isset($item[$name])) &#123;</span><br><span class="line">            $indexedArray[$item[$name]] = $item;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $indexedArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;经过试验的到结果：</p><p>&emsp;&emsp;(1)方法一：10000*10000（万级） 执行时间 <font color="#ff5722">3.377 秒</font></p><p>&emsp;&emsp;(2)方法二：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.741 秒 0.642 秒 0.673 秒 0.609 秒 0.618 秒</font></p><p>&emsp;&emsp;(3)方法三：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.745 秒 0.75 秒 0.664 秒 0.672 秒 0.684 秒</font></p><p>&emsp;&emsp;(4)方法四：1000000*1000000（百万级） 执行时间： <font color="#ff5722">0.781 秒 0.803 秒 0.661 秒 0.661 秒 0.658 秒</font></p><p><b>三、总结</b></p><p>&emsp;在开发中一定要考虑数据量大的情况下会出现的问题，尽量使用上面的方法代替循环嵌套。另外还要注意代码风格和规范等问题。</p><p>&emsp;希望大家在看了之后能有所收获。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、前言&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;对于任何计算机程序，程序的运行性能决定了一个程序的好坏，夸张一点说程序性能的好坏直接影响了一个互联网公司的生存与发展的问题。所以对于程序员，优化性能的技能是必不可少的，就因为不会优化性能，可能就会比其他人差好几个等级。&lt;/p&gt;
&lt;p&gt;&amp;emsp;在PHP界，大部分互联网公司的工作内容就是最常见的CURD。你会发现自己和一些应届毕业生相比完全没有竞争优势，甚至一些公司的岗位要求也只是会CURD就行了。就像我最近找工作，不止一次的遇到面试官问：“我你觉得你的优势是什么？”，我每次都是哑口无言。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.daichongweb.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php处理视频</title>
    <link href="http://www.daichongweb.com/php%E5%A4%84%E7%90%86%E8%A7%86%E9%A2%91/"/>
    <id>http://www.daichongweb.com/php处理视频/</id>
    <published>2019-08-29T04:47:51.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、首先介绍一下这个功能的使用场景</b></p><p>&emsp;如<a href="https://www.youku.com/" target="_blank" rel="noopener">优酷</a>视频网站，某些视频的封面图就使用的这样的功能。</p><p>&emsp;大概有4种：</p><p>&emsp;&emsp;(1)自有封面图（这类可能是自己手动上传的封面图，如一些宣传图）。<br>&emsp;&emsp;(2)截取视频第一帧（可以理解为0.001秒）时的视频内容作为封面图。<br>&emsp;&emsp;(3)截取视频某一时刻的内容作为封面图，如截取视频的第1分钟。<br>&emsp;&emsp;(4)截取视频某一段的内容（gif）作为封面图，如截取视频的第1分20秒到1分30秒。</p><font color="#ff5722">PS:</font>只是单纯的拿来做例子，并不是指优酷就是使用这样的技术。<br><a id="more"></a><br><b>二、将会使用到的技术</b><br><br>&emsp;(1)<a href="http://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg</a>：FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的。<em>—百度百科</em>&emsp; <font color="#ff5722">注意:‘需要安装’，不同的系统安装、使用的方法不同。</font><p>&emsp;(2)<a href="https://www.php.net/" target="_blank" rel="noopener">PHP</a>的<a href="https://www.php.net/manual/zh/book.exec.php" target="_blank" rel="noopener">Exec</a>或<a href="https://www.php.net/manual/zh/function.system.php" target="_blank" rel="noopener">System</a>等函数（当然任何能执行外部程序的语言都能实现）。</p><p><b>三、Demo</b></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 安装路径</span><br><span class="line">$ffmpeg = &quot;C:\\Users\user\\Desktop\\ffmpeg\\bin\\ffmpeg.exe&quot;;</span><br><span class="line">// 待处理视频的地址</span><br><span class="line">$video_route = &quot;D:\\phpstudy_pro\\WWW\a.mp4&quot;;</span><br><span class="line">//存储地址</span><br><span class="line">$store_path = &quot;./2.jpg&quot;;</span><br><span class="line"></span><br><span class="line">// 把视频的前30帧截取为gif</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -vframes 30 -y -f gif 1.gif&quot;); </span><br><span class="line">// 把视频的第一帧截取为图片 -r 1 表示为图宽度、高度自适应</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -y -f image2 -t 0.001 -r 1 1.png&quot;); </span><br><span class="line">// 把视频的第8.01秒处截取为图片</span><br><span class="line">system($ffmpeg . &quot; -i &quot;.$video_route.&quot; -y -f image2 -ss 08.010 -t 0.001 -s 1920x1080 &quot; .$store_path. &quot;); </span><br></pre></td></tr></table></figure><p><b>三、更多</b></p><p>&emsp;<a href="https://www.php.net/" target="_blank" rel="noopener">PHP</a>+<a href="http://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg</a>仅能实现这样功能吗？当然不是！还有更多的功能等待探索…<br>&emsp;如:<br>&emsp;&emsp;(1)视频转码。<br>&emsp;&emsp;(2)视频加密。<br>&emsp;&emsp;(3)视频剪切。<br>&emsp;&emsp;(4)视频合成。<br>&emsp;&emsp;(5)多张图片合成一个视频。<br>&emsp;&emsp;(6)字幕。<br>&emsp;&emsp;(7)音频处理。<br>&emsp;&emsp;等等等….</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、首先介绍一下这个功能的使用场景&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;如&lt;a href=&quot;https://www.youku.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;优酷&lt;/a&gt;视频网站，某些视频的封面图就使用的这样的功能。&lt;/p&gt;
&lt;p&gt;&amp;emsp;大概有4种：&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;(1)自有封面图（这类可能是自己手动上传的封面图，如一些宣传图）。&lt;br&gt;&amp;emsp;&amp;emsp;(2)截取视频第一帧（可以理解为0.001秒）时的视频内容作为封面图。&lt;br&gt;&amp;emsp;&amp;emsp;(3)截取视频某一时刻的内容作为封面图，如截取视频的第1分钟。&lt;br&gt;&amp;emsp;&amp;emsp;(4)截取视频某一段的内容（gif）作为封面图，如截取视频的第1分20秒到1分30秒。&lt;/p&gt;
&lt;font color=&quot;#ff5722&quot;&gt;PS:&lt;/font&gt;只是单纯的拿来做例子，并不是指优酷就是使用这样的技术。&lt;br&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.daichongweb.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php-Sphinx搜索引擎</title>
    <link href="http://www.daichongweb.com/php-Sphinx%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    <id>http://www.daichongweb.com/php-Sphinx搜索引擎/</id>
    <published>2019-08-16T08:33:22.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、Sphinx是什么？</b></p><p>&emsp;是一个基于SQL的全文检索引擎，可以结合MySQL,PostgreSQL做全文搜索，它可以提供比数据库本身更专业的搜索功能，使得应用程序更容易实现专业化的全文检索。Sphinx特别为一些脚本语言设计搜索API接口，如Java，PHP，Python，Perl，Ruby等，同时为MySQL也设计了一个存储引擎插件。 <em>—百度百科</em>    </p><p>&emsp;Sphinx 单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建索引的速度为：创建100万条记录的索引只需 3～4分钟，创建1000万条记录的索引可以在50分钟内完成，而只包含最新10万条记录的增量索引，重建一次只需几十秒。<em>—百度百科</em><br><a id="more"></a></p><p><b>二、Sphinx的特性是什么？</b></p><p>&emsp;高速索引 （在新款CPU上，近10 MB/秒）; 高速搜索 (2-4G的文本量中平均查询速度不到0.1秒); 高可用性 （单CPU上最大可支持100 GB的文本，100M文档）; 提供良好的相关性排名 支持分布式搜索； 提供文档摘要生成； 提供从MySQL内部的插件式存储引擎上搜索 支持布尔，短语， 和近义词查询； 支持每个文档多个全文检索域（默认最大32个）; 支持每个文档多属性； 支持断词； 支持单字节编码与UTF-8编码；</p><p><b>三、Sphinx安装与配置</b> <em>–windows环境</em></p><p>&emsp;1.万物不离其宗，第一步肯定是安装啦！<a href="http://sphinxsearch.com/downloads/current/" target="_blank" rel="noopener">下载地址</a> <em>—具体的安装步骤就不一一介绍了</em></p><p>&emsp;2.解压之后会看到 <font color="#ff5722">api、bin、doc、etc、misc、src </font>六个文件。 <em>–windows环境可能和其他环境不同</em></p><p>&emsp;3.在同级目录下新建<font color="#ff5722">data、log</font>两个文件。 <em>–data:数据文件、log:检索的日志文件</em></p><p>&emsp;4.复制<font color="#ff5722">etc</font>目录下的<font color="#ff5722">sphinx-min.conf.dist</font>到<font color="#ff5722">bin</font>目录修改文件名为<font color="#ff5722">sphinx.conf</font>。修改配置为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">source school # school 名字是随意起的</span><br><span class="line">&#123;</span><br><span class="line">type= mysql</span><br><span class="line"></span><br><span class="line">sql_host= localhost</span><br><span class="line">sql_user= root</span><br><span class="line">sql_pass= root</span><br><span class="line">sql_db= test</span><br><span class="line">sql_port= 3306</span><br><span class="line"># 设置数据库字符集</span><br><span class="line">sql_query_pre   = SET NAMES utf8 </span><br><span class="line"># 配置数据源--也就是数据表的数据</span><br><span class="line">sql_query=  SELECT id, school, address FROM school </span><br><span class="line"># 配置返回字段--必须是数据表中存在的字段，不能设置返回主键，否则会报错</span><br><span class="line"># 这里的字段还要和下面index里配置的 rt_field相对应</span><br><span class="line">sql_field_string        = school </span><br><span class="line">    sql_field_string        = address </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">index school</span><br><span class="line">&#123;</span><br><span class="line">source            = school # 数据源--也就是上边的名字</span><br><span class="line">    path              = E:\sphinx\data\school # 数据存放的地址--配置为刚新建的data下</span><br><span class="line">    mlock             = 0 # 缓存内存锁定</span><br><span class="line">    morphology        = none # 数据处理方法</span><br><span class="line">    min_word_len      = 1 # 最小索引字长</span><br><span class="line">    html_strip        = 0 # 是否去除html标签</span><br><span class="line">    ngram_len         = 1 # 支持中文</span><br><span class="line">    ngram_chars       = U+3000..U+2FA1F # 支持中文</span><br><span class="line"></span><br><span class="line">    # 字段配置</span><br><span class="line">    rt_attr_uint    = id </span><br><span class="line">    rt_field        = school</span><br><span class="line">    rt_field        = address</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">mem_limit= 128M</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 下面都是默认的 修改一下log地址就好了</span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line">listen= 9312</span><br><span class="line">listen= 9306:mysql41</span><br><span class="line">log= E:\sphinx\log\searchd.log</span><br><span class="line">query_log= E:\sphinx\log\query.log</span><br><span class="line">read_timeout= 5</span><br><span class="line">max_children= 30</span><br><span class="line">pid_file= E:\sphinx\log\searchd.pid</span><br><span class="line">seamless_rotate= 1</span><br><span class="line">preopen_indexes= 1</span><br><span class="line">unlink_old= 1</span><br><span class="line">workers= threads # for RT to work</span><br><span class="line">binlog_path= E:\sphinx\data</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><b>四、Sphinx在项目中如何使用呢？</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">require &quot;E:\sphinx\api\sphinxapi.php&quot;;</span><br><span class="line"></span><br><span class="line">$page = isset($_GET[&apos;p&apos;]) ? intval($_GET[&apos;p&apos;]) : 1;</span><br><span class="line">if ($page &lt;= 0) &#123;</span><br><span class="line">    $page = 1;</span><br><span class="line">&#125;</span><br><span class="line">$pagesize = 20;</span><br><span class="line"></span><br><span class="line">$sphinxClass = new \SphinxClient();</span><br><span class="line">$sphinxClass-&gt;setServer(&quot;localhost&quot;, 9312);</span><br><span class="line">$sphinxClass-&gt;setMaxQueryTime(3);</span><br><span class="line">$sphinxClass-&gt;SetArrayResult(true);</span><br><span class="line">$sphinxClass-&gt;SetLimits(($page - 1) * $pagesize, $pagesize, 3000); // 搜索分页</span><br><span class="line">// @school 表示只匹配数据表中school的字段 ,第二个参数表示使用的索引方法 对应sphinx中的index school</span><br><span class="line">$result = $sphinxClass-&gt;query(&apos;@school 戴崇&apos;, &apos;school&apos;);</span><br><span class="line">echo &apos;&lt;pre&gt;&apos;;</span><br><span class="line">print_r($result);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>从上面代码可以看出，在项目中使用sphinx是非常简单的只需要引入这个类就ok了。</p><p><b>五、测试</b></p><p>&emsp;数据量200014条数据。</p><p>&emsp;使用mysql模糊查询平均耗时 <font color="#ff5722">0.130s</font></p><p>&emsp;使用sphinx搜索引擎平均耗时 <font color="#ff5722">0.030s</font></p><p>&emsp;由此可见差距是很大的，如何数据量更大的情况下差距会更大。</p><p><b>六、Sphinx的优点及缺点</b></p><p>&emsp;优点:<br>&emsp;&emsp;(1)Sphinx索引文件每次更新都会把数据全部存储在本地，也就是说当用户使用搜索的时候并不会直接请求数据库，降低了数据库的压力。<br>&emsp;&emsp;(2)在几十万级数据查询时，Sphinx索引速度要比数据库索引速度快上好几倍，速度快。</p><p>&emsp;缺点:<br>&emsp;&emsp;(1)数据的索引文件会存储在本地，数据量大的时候对内存也有一定影响。<br>&emsp;&emsp;(2)数据库的数据变化，是无法同步到Sphinx索引文件里的，也就是说每次数据库更新都要手动更新索引文件。<br>&emsp;&emsp;(3)在没有使用中文分词的技术上，Sphinx搜索的结果是不准确的，例如：数据库中有‘戴崇1，戴崇2，戴崇3，戴崇’，使用like查询‘戴崇’会有四个结果，但使用Sphinx查询只会出现一个。</p><p><b>总结</b></p><p>&emsp;Sphinx从官网上可以看出已经将近一年没有更新过了，甚至还有一些bug没有修复，但整体来说Sphinx在使用方面还是非常简单可靠的。</p><p>&emsp;<font color="#ff5722">PS:下一篇将会介绍Sphinx中文分词如何使用！</font></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、Sphinx是什么？&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;是一个基于SQL的全文检索引擎，可以结合MySQL,PostgreSQL做全文搜索，它可以提供比数据库本身更专业的搜索功能，使得应用程序更容易实现专业化的全文检索。Sphinx特别为一些脚本语言设计搜索API接口，如Java，PHP，Python，Perl，Ruby等，同时为MySQL也设计了一个存储引擎插件。 &lt;em&gt;—百度百科&lt;/em&gt;    &lt;/p&gt;
&lt;p&gt;&amp;emsp;Sphinx 单一索引最大可包含1亿条记录，在1千万条记录情况下的查询速度为0.x秒（毫秒级）。Sphinx创建索引的速度为：创建100万条记录的索引只需 3～4分钟，创建1000万条记录的索引可以在50分钟内完成，而只包含最新10万条记录的增量索引，重建一次只需几十秒。&lt;em&gt;—百度百科&lt;/em&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php扩展类" scheme="http://www.daichongweb.com/tags/php%E6%89%A9%E5%B1%95%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>mysql视图的使用方法</title>
    <link href="http://www.daichongweb.com/mysql%E8%A7%86%E5%9B%BE%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://www.daichongweb.com/mysql视图的使用方法/</id>
    <published>2019-08-15T10:48:57.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;上篇简单的介绍了视图的概念，那么这篇将告诉大家如何创建、修改、删除视图，也就是视图的基本操作了！</p><p><b>一、在单表上创建视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建表 user</span><br><span class="line">create table user (id int,name varchar(10),age tinyint(3));</span><br><span class="line"># 插入数据</span><br><span class="line">insert into user values(1,&apos;张三&apos;,20),(2,&apos;李四&apos;,20);</span><br><span class="line"># 创建视图-并计算他们两年之后多少岁</span><br><span class="line">create view view_user as select id,name,age+2 as age from user; </span><br><span class="line"># 第二种写法</span><br><span class="line">create view view_user_1(user_id,user_name,user_age) as select id,name,age from user;</span><br></pre></td></tr></table></figure><br><a id="more"></a><br>得到结果:<table><th>id</th><th>name</th><th>age</th><tr><td>1</td><td>张三</td><td>22</td></tr><tr><td>2</td><td>李四</td><td>22</td></tr><tr><td>3</td><td>王二</td><td>22</td></tr></table></p><table><th>user_id</th><th>user_name</th><th>user_age</th><tr><td>1</td><td>张三</td><td>22</td></tr><tr><td>2</td><td>李四</td><td>22</td></tr><tr><td>3</td><td>王二</td><td>22</td></tr></table><br>从这两种写法可以看出，在视图上是可以使用计算的，虽然两个视图中字段名不同，但数据确实相同的。因此在使用视图的时候，用户根本接触不到实际表中的结构和数据，从而保证了数据库的安全。<br><br><b>二、在多表上创建视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建表 user、school</span><br><span class="line">create table user (id int, name varchar(10), age tinyint(3), school_id int);</span><br><span class="line">create table school (id int, name varchar(10));</span><br><span class="line"># 插入数据 </span><br><span class="line">insert into user values(1,&apos;张三&apos;,20,1),(2,&apos;李四&apos;,20,2);</span><br><span class="line">insert into school values(1,&apos;清华&apos;),(2,&apos;北大&apos;);</span><br><span class="line"># 创建视图</span><br><span class="line">create view view_user_school(user_id,user_name,user_school) as select user.id,user.name school.name from user,school where user.school_id = school.id;</span><br></pre></td></tr></table></figure><br>通过视图看到的结果：<table><th>user_id</th><th>user_name</th><th>user_school</th><tr><td>1</td><td>张三</td><td>清华</td></tr><tr><td>2</td><td>李四</td><td>北大</td></tr></table><p><b>三、查看视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 视图名;</span><br></pre></td></tr></table></figure><br>通过这个命令可以看出视图的字段定义、字段的数据类型、是否为空、是否为主键/外键、默认值和额外信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select table status like &apos;视图名&apos;;</span><br></pre></td></tr></table></figure><br>通过这个命令可看出存储引擎、创建时间、Comment。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create view &apos;视图名&apos;;</span><br></pre></td></tr></table></figure><br>通过这个命令可以看出视图的名称、创建视图的语句等信息。</p><p><b>四、修改视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create or replace view view_user as select id,user,name,age from user;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert view view_user as select id,user,name,age from user;</span><br></pre></td></tr></table></figure><p><b>五、更新视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update view_user set age=100 where id=1;</span><br><span class="line">delete from view_user where id=1;</span><br></pre></td></tr></table></figure><br>当视图更新的时候相对应的基础表也会被更新，但如果是多表创建、使用了计算或者是聚合函数都是无法修改/删除成功的，并且会报错。</p><p><b>六、删除视图</b><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view if exists view_user;</span><br></pre></td></tr></table></figure></p><p><b>总结：</b></p><p>&emsp;1.两者的区别</p><p>&emsp;&emsp;(1) 视图是已经编译好的sql语句，是基于sql语句的结果集形成的可视化表，而表不是。<br>&emsp;&emsp;(2) 视图没有实际的物理记录，而表有。<br>&emsp;&emsp;(3) 表是内容，视图是窗口。<br>&emsp;&emsp;(4) 表占用物理空间而视图不占用。<br>&emsp;&emsp;(5) 视图是查看数据表的一种方法，从安全角度上来说视图可以防止用户接触到数据表，使用户不知道表结构。<br>&emsp;&emsp;(6) 表属于全局模式中的表，是实表，视图是局部模式的表，是虚表。<br>&emsp;&emsp;(7) 视图的简历和删除只会影响到视图的本身，不影响对应表的基本数据。 </p><p>&emsp;2.两者的关系</p><p>&emsp;&emsp;(1) 视图是建立在基本表纸上的表，它的结构都来源于基本表。无基本表视图将无法建立，视图是基本表的抽象和在逻辑意义上建立的新关系。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;上篇简单的介绍了视图的概念，那么这篇将告诉大家如何创建、修改、删除视图，也就是视图的基本操作了！&lt;/p&gt;
&lt;p&gt;&lt;b&gt;一、在单表上创建视图&lt;/b&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 创建表 user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create table user (id int,name varchar(10),age tinyint(3));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 插入数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert into user values(1,&amp;apos;张三&amp;apos;,20),(2,&amp;apos;李四&amp;apos;,20);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 创建视图-并计算他们两年之后多少岁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create view view_user as select id,name,age+2 as age from user; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 第二种写法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;create view view_user_1(user_id,user_name,user_age) as select id,name,age from user;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.daichongweb.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql视图介绍</title>
    <link href="http://www.daichongweb.com/mysql%E8%A7%86%E5%9B%BE%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.daichongweb.com/mysql视图介绍/</id>
    <published>2019-08-15T09:01:27.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><b>一、视图的含义</b></p><p>&emsp;1.视图是从一个或多个表中导出的，视图的行为与表非常的相似，但视图是一个虚拟的表。在视图中可以使用<font color="#7070D8">Select</font>语句进行查询，也可以使用<font color="#7070D8">Insert</font>、<font color="#7070D8">Update</font>、<font color="#7070D8">Delete</font>，视图还可以从已经存在的视图的基础上定义（也就是视图上再做视图）。<br><a id="more"></a><br>&emsp;2.视图定义好之后会存在数据库中，从视图看到的数据并不是视图真正存储在数据库中的数据，通过视图看到的数据只是存放在基本表中的数据。</p><p>&emsp;<font color="#7070D8">3.对视图的操作和对表的操作是一样的，可以进行CURD。当修改通过视图看到的数据时，相对于的基本表的数据也会发生变化;同时，若基本表的数据发生变化，视图看到的数据也会发生变化。</font></p><p><b>二、如何理解视图与基本表的关系呢？</b></p><p>&emsp;有一张用户表：<table><th>ID</th><th>姓名</th><th>年龄</th><th>学校</th><tr><td>1</td><td>张三</td><td>20</td><td>清华</td></tr><tr><td>2</td><td>李四</td><td>20</td><td>北大</td></tr><tr><td>3</td><td>王二</td><td>20</td><td>北大</td></tr></table></p><p>&emsp;创建一个基于用户表的视图，视图里的字段只有姓名和年龄，那么他们的关系就像在这个用户表上盖了一个木板，木板上留了个窗口，从这个窗口看进去只能看见姓名和年龄，这便是视图的作用和他们的关系。</p><p><b>三、视图的作用</b></p><p>&emsp;与直接从数据表中读取数据相比，视图具有以下优点：</p><p>&emsp;&emsp;(1)、简单化</p><p>&emsp;&emsp;&emsp;&emsp;：从视图看到的数据你可以自定义，也就是说看到的都是需要的数据。那些被经常使用查询的表可以创建一张视图，从而使使以后的操作不需要都假设全部的条件。</p><p>&emsp;&emsp;(2)、安全性</p><p>&emsp;&emsp;&emsp;&emsp;：假如数据表的某些字段是隐私的，不想被其他人看到。这时你就可以创建一张视图把隐私的字段过滤掉。</p><p>&emsp;&emsp;(3)、逻辑数据独立性</p><p>&emsp;&emsp;&emsp;&emsp;：视图可帮助用户屏蔽真实的表结构变化带来的影响。</p><p>PS:下篇讲介绍视图如何创建、使用等。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;b&gt;一、视图的含义&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;emsp;1.视图是从一个或多个表中导出的，视图的行为与表非常的相似，但视图是一个虚拟的表。在视图中可以使用&lt;font color=&quot;#7070D8&quot;&gt;Select&lt;/font&gt;语句进行查询，也可以使用&lt;font color=&quot;#7070D8&quot;&gt;Insert&lt;/font&gt;、&lt;font color=&quot;#7070D8&quot;&gt;Update&lt;/font&gt;、&lt;font color=&quot;#7070D8&quot;&gt;Delete&lt;/font&gt;，视图还可以从已经存在的视图的基础上定义（也就是视图上再做视图）。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.daichongweb.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>charles过滤数据包</title>
    <link href="http://www.daichongweb.com/charles%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
    <id>http://www.daichongweb.com/charles过滤数据包/</id>
    <published>2019-08-09T05:04:51.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.1 设置过滤：找到【Proxy】-【Recording Setting】<br><img src="/charles过滤数据包/img/record.png"><br><a id="more"></a><br>点击Add添加过滤规则：</p><p>（1）Protocol 选择过滤的协议</p><p>（2）Host 填写IP或网址</p><p>（3）Port 填写端口 *为全部端口</p><img src="/charles过滤数据包/img/record1.png">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.1 设置过滤：找到【Proxy】-【Recording Setting】&lt;br&gt;&lt;img src=&quot;/charles过滤数据包/img/record.png&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发工具" scheme="http://www.daichongweb.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>charles抓ios手机数据包</title>
    <link href="http://www.daichongweb.com/charles%E6%8A%93ios%E6%89%8B%E6%9C%BA%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
    <id>http://www.daichongweb.com/charles抓ios手机数据包/</id>
    <published>2019-08-09T02:57:15.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>Charles其实是一款代理服务器，通过过将自己设置成系统（电脑或者浏览器）的网络访问代理服务器，然后截取请求和请求结果达到分析抓包的目的。该软件是用Java写的，能够在Windows，Mac，Linux上使用.<br><a id="more"></a><br>Charles的主要功能：</p><p>（1）截取Http 和 Https 网络封包。</p><p>（2）支持重发网络请求，方便后端调试。</p><p>（3）支持修改网络请求参数。</p><p>（4）支持网络请求的截获并动态修改。</p><p>（5）支持模拟慢速网络。</p><p>1.1 下载安装Charles： <a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener">点击下载</a></p><p>1.2 设置代理模式：设置端口为8888，勾选上Enable transparency HTTP  proxying<br><img src="/charles抓ios手机数据包/img/charles1.png"><br><img src="/charles抓ios手机数据包/img/charles2.png"></p><p>1.3 设置本机为代理：勾选为Mac local 本地代理<br><img src="/charles抓ios手机数据包/img/charles3.png"></p><p>1.4 设置过滤协议：设置抓取协议类型 <em>.</em> 为全部host的所以协议端口<br><img src="/charles抓ios手机数据包/img/charles4.png"></p><p>到此为止其实已经可以抓取到手机的数据包了，只是无法抓取https协议的数据包。</p><p>2.1 安装证书：抓https数据包，点击之后会弹出电脑证书的列表<br><img src="/charles抓ios手机数据包/img/charles5.png"></p><p>2.2 设置信任：找到刚下载的Charles证书，双击打开，设置始终信任<br><img src="/charles抓ios手机数据包/img/charles6.png"></p><p>3.3 获取证书下载地址<br><img src="/charles抓ios手机数据包/img/charles7.png"><br><img src="/charles抓ios手机数据包/img/charles8.png"></p><p>3.4 下载证书：用苹果浏览器访问chls.pro/ssl下载证书<br><img src="/charles抓ios手机数据包/img/charles9.png"></p><p>3.5 安装证书：在【设置】-【通用】-【描述文件】中找到刚刚下载的证书，双击并安装<br><img src="/charles抓ios手机数据包/img/charles10.png"><br><img src="/charles抓ios手机数据包/img/charles11.png"></p><p>3.6 设置信任：在【设置】-【通用】-【关于本机】-【证书信任设置】中找到安装的证书，点击设置为信任<br><img src="/charles抓ios手机数据包/img/charles12.png"></p><p>之后就和电脑连接同一个wifi,配置代理为电脑端的本机ip，端口为设置的8888，连接之后电脑端会弹出一个提示框，点击Allow就ok了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Charles其实是一款代理服务器，通过过将自己设置成系统（电脑或者浏览器）的网络访问代理服务器，然后截取请求和请求结果达到分析抓包的目的。该软件是用Java写的，能够在Windows，Mac，Linux上使用.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发工具" scheme="http://www.daichongweb.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>git覆盖本地未提交的代码</title>
    <link href="http://www.daichongweb.com/git%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%9C%AA%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.daichongweb.com/git覆盖本地未提交的代码/</id>
    <published>2019-06-23T07:37:13.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;在多人协作开发中，使用git或svn管理代码最常见的问题就是代码冲突！</p><p>&emsp;作为高效开发团队中的一员应当具有处理这些问题的能力。</p><p>&emsp;假设现有一个项目，有多个开发成员，成员A和成员B共同管理同一个分支的代码。成员A在本地修改了代码并提交到daichongweb分支，成员B也修改了代码，当成员B需要用到成员A提交代码中的部分功能，需要拉取daichongweb分支的代码，这时会出现一个错误。<br><a id="more"></a><br><img src="/git覆盖本地未提交的代码/img/1.png"><br>&emsp;可以看出git不允许拉取代码，因为成员A也同样修改了代码。那么能提交吗？答案是不能！提交会出现代码冲突的错误！</p><p>&emsp;这时应该想到的是如何把本地代码保存起来，当然git提供了命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/2.png"><br>&emsp;使用 <font color="#ff5722">git stash</font> 可将已修改的代码保存起来，然后在使用<font color="#ff5722">git pull</font> 拉取代码就不会出现错误。</p><p>&emsp;然后执行<font color="#ff5722">git stash list</font>查看暂存代码，再使用<font color="#ff5722">git stash pop stash@{0}</font>把代码pop出来，这时会提示冲突，把冲突解决就好了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/3.png"></p><blockquote><p>总结</p></blockquote><p>代码冲突要在本地处理，不要直接提交。<br>解决同一分支冲突的步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br><span class="line">解决冲突</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;在多人协作开发中，使用git或svn管理代码最常见的问题就是代码冲突！&lt;/p&gt;
&lt;p&gt;&amp;emsp;作为高效开发团队中的一员应当具有处理这些问题的能力。&lt;/p&gt;
&lt;p&gt;&amp;emsp;假设现有一个项目，有多个开发成员，成员A和成员B共同管理同一个分支的代码。成员A在本地修改了代码并提交到daichongweb分支，成员B也修改了代码，当成员B需要用到成员A提交代码中的部分功能，需要拉取daichongweb分支的代码，这时会出现一个错误。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://www.daichongweb.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>【原创】phpgd库处理图片生成海报图</title>
    <link href="http://www.daichongweb.com/phpgd%E5%BA%93%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE/"/>
    <id>http://www.daichongweb.com/phpgd库处理图片生成海报图/</id>
    <published>2019-05-23T10:14:12.000Z</published>
    <updated>2019-10-23T03:07:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一.引言</p></blockquote><p>&emsp;好久没写博客了，不知道该写些什么。<br>&emsp;正发愁呢，突然发现了一个好玩的东西。<br>&emsp;是什么呢？是php的一个扩展GD库。</p><p>&emsp;为什么说他好玩？我刚开始想的是用gd库做一个画，金黄的太阳、碧蓝的天空下面有绿色的草地、草地上有幢五颜六色的房子和一个坐在草里玩电脑的男孩，以及旁边的一只白猫…<br>后来真的要做的时候才发现，这也太难了。除非全是用图片组合成的才用可能…但是真正的图片确也很难到达我的要求，那就算了吧，想象还是美好的。</p><p>&emsp;后来经过整理和实践发现，这个东西比较适合做产品推广图来用，更加适合在公众号或小程序里跟二维码结合起来使用。<br><a id="more"></a><br><blockquote><p>二.简单介绍</p></blockquote><br>&emsp;1).如何下载类库&amp;&amp;测试demo，大家可以从<font color="#ff5722">github</font>上拉取，地址：<a href="https://github.com/DaiChongyu/phpgd-CreatePoster" target="_blank" rel="noopener">类库&&demo</a><br>&emsp;2).如何使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">use \CreatePoster\CreateHelper;</span><br><span class="line">require &apos;./gd.php&apos;;</span><br><span class="line">CreateHelper::start();</span><br></pre></td></tr></table></figure><br>&emsp;3).注意事项：<br>&emsp;&emsp;1.写入字体要引入字体文件，文件路径一般为绝对路径。<br>&emsp;&emsp;2.下载地址可以在load函数中配置。<br>&emsp;&emsp;3.主图最好是png格式，这样清晰度会很高。<br>&emsp;&emsp;4.使用CreateImage创建画板时，如果传入的图片较小，如需放大请使用第4和第5个参数。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success1.png" width="300"></div><br></div><br>&emsp;&emsp;5.使用CreateImage创建画板时，注意imagecolortransparent使用，他会把画板变为透明。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error1.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success.png" width="300"></div><br></div></p><p><font color="#ff5722">PS:其他的用途就看大家的创意、想法了。<b>我们不做代码搬运工，我们要做代码艺术家。</b>后续此类会经常的更新和优化….</font><br><blockquote><p>四.代码浏览</p></blockquote><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace CreatePoster;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  生成海报图</span><br><span class="line"> *  @author daichongweb</span><br><span class="line"> *  @url daichongweb.cn,daichongweb.com</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">class CreateHelper</span><br><span class="line">&#123;</span><br><span class="line">    public static function start()</span><br><span class="line">    &#123;</span><br><span class="line">        echo (&apos;&lt;h2&gt;欢迎使用：)&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &apos;海报图制作步骤:&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;1.创建画板(普通画板用CreatePalette;图像画板用CreateImage)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;2.合并图片(ImagesMerge)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;3.插入文字(CreateChars)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;4.插入划线(CreateLine)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;5.下载或查看&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo (&apos;&lt;h2&gt;注意事项:&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &quot;&lt;font color=&apos;red&apos;&gt;注意事项：主图尽量改为png格式，这样的话图片会很清晰，在浏览器中直接查看效果不是很好，下载下来就会很清晰的。&lt;/font&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreatePalette 新建一个画板]</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x_size     画板的宽度</span><br><span class="line">     * @param    int        $y_size     画板的高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CreatePalette($config)</span><br><span class="line">    &#123;</span><br><span class="line">        $Palette = imagecreate($config[&apos;x_size&apos;], $config[&apos;y_size&apos;]);</span><br><span class="line">        imagecolorallocate($Palette, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        return $Palette;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBr 画一个矩形边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int       $red         红色</span><br><span class="line">     * @param    int       $green       绿色</span><br><span class="line">     * @param    int       $blue        蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagerectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBg 画一个矩形实体]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledrectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBr 画一个椭圆边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $height     高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imageellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBg 画一个实体椭圆]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [StarBr 画一个五角星边框]</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $r          半径</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     */</span><br><span class="line">    public static function StarBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $r = $config[&apos;r&apos;];</span><br><span class="line">        $degree36 = deg2rad(36);</span><br><span class="line">        $l = 2 * $r * sin($degree36);</span><br><span class="line">        $a = $l * cos($degree36);</span><br><span class="line">        $b = $l * sin($degree36);</span><br><span class="line">        $c = $l / 2;</span><br><span class="line">        $d = $r * cos($degree36);</span><br><span class="line"></span><br><span class="line">        $px1 = $config[&apos;left&apos;];</span><br><span class="line">        $py1 = $config[&apos;top&apos;];</span><br><span class="line"></span><br><span class="line">        $px2 = $px1 + $a;</span><br><span class="line">        $py2 = $py1 + $b;</span><br><span class="line">        $px3 = $px1 + $c;</span><br><span class="line">        $py3 = $py1 + $r + $d;</span><br><span class="line">        $px4 = $px1 - $c;</span><br><span class="line">        $py4 = $py1 + $r + $d;</span><br><span class="line">        $px5 = $px1 - $a;</span><br><span class="line">        $py5 = $py1 + $b;</span><br><span class="line"></span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line"></span><br><span class="line">        imageline($mainBg, $px2, $py2, $px5, $py5, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px3, $py3, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px2, $py2, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px3, $py3, $px5, $py5, $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateImage 新建一个图像画板]</span><br><span class="line">     * @param    url        $palette    图像的地址</span><br><span class="line">     * @param    string     $dst_w      目标图片的宽度</span><br><span class="line">     * @param    string     $dst_h      目标图片的高度</span><br><span class="line">     * @param    string     $bgWidth    画板的宽度</span><br><span class="line">     * @param    string     $bgHeight   画板的高度    这两项决定了图片如果小了是否会被拉伸</span><br><span class="line">     */</span><br><span class="line">    public static function CreateImage($palette, $dst_w = &apos;&apos;, $dst_h = &apos;&apos;, $bgWidth = &apos;&apos;, $bgHeight = &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = getimagesize($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundFun = &apos;imagecreatefrom&apos; . image_type_to_extension($info[2], false);</span><br><span class="line">        $background = $backgroundFun($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundWidth = imagesx($background);</span><br><span class="line">        $backgroundHeight = imagesy($background);</span><br><span class="line"></span><br><span class="line">        $imageRes = imageCreatetruecolor($bgWidth ? $bgWidth : $backgroundWidth, $bgHeight ? $bgHeight : $backgroundHeight);</span><br><span class="line">        $color = imagecolorallocate($imageRes, 255, 255, 255);</span><br><span class="line">        // 正式使用 这个定要注释</span><br><span class="line">        // imagecolortransparent($imageRes, $color);</span><br><span class="line">        imagefill($imageRes, 0, 0, $color);</span><br><span class="line"></span><br><span class="line">        imagecopyresized($imageRes, $background, 0, 0, 0, 0, $dst_w ? $dst_w : imagesx($background), $dst_h ? $dst_h : imagesy($background), imagesx($background), imagesy($background));</span><br><span class="line"></span><br><span class="line">        return $imageRes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateChars 在画板中插入文字]</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     配置信息</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $num        次数越多文字越粗</span><br><span class="line">     * @param    int        $size       文字大小</span><br><span class="line">     * @param    int        $angle      旋转的角度 默认不旋转为0</span><br><span class="line">     * @param    int        $x          文字的坐标x</span><br><span class="line">     * @param    int        $y          文字的坐标y</span><br><span class="line">     * @param    int        $font       字体文件 这里一般为绝对路径</span><br><span class="line">     * @param    int        $text       文字内容</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    public static function CreateChars($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置文字颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //循环多次为了加粗字体</span><br><span class="line">        for ($i = 1; $i &lt;= $config[&apos;num&apos;]; $i++) &#123;</span><br><span class="line"></span><br><span class="line">            imagettftext($image, $config[&apos;size&apos;], $config[&apos;angle&apos;], $config[&apos;x&apos;], $config[&apos;y&apos;], $color, $config[&apos;font&apos;], $config[&apos;text&apos;]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateLine 画一条实线]</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $alpha      透明度 0不透明</span><br><span class="line">     * @param    int        $x1 x2      坐标x</span><br><span class="line">     * @param    int        $y1 y2      坐标y</span><br><span class="line">     */</span><br><span class="line">    public static function CreateLine($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置线条颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //划线</span><br><span class="line">        imageline($image, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [functionName 图片合并]</span><br><span class="line">     * 将 src_im 图像中坐标从 src_x，src_y 开始，宽度为 src_w，高度为 src_h 的一部分拷贝到 dst_im 图像中坐标为 dst_x 和 dst_y 的位置上。两图像将根据 pct</span><br><span class="line">     * 来决定合并程度，其值范围从 0 到 100。当 pct = 0 时，实际上什么也没做，当为 100 时对于调色板图像本函数和 imagecopy() 完全一样，它对真彩色图像实现了 alpha *</span><br><span class="line">     * 透明。</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function ImagesMerge($mainBg, $second, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        imagecopymerge($mainBg, $second, $config[&apos;dst_x&apos;], $config[&apos;dst_y&apos;], $config[&apos;src_x&apos;], $config[&apos;src_y&apos;], $config[&apos;src_w&apos;], $config[&apos;src_h&apos;], $config[&apos;pct&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [AutoWrap 文字换行]</span><br><span class="line">     * @param    int        $fontsize   字体大小</span><br><span class="line">     * @param    int        $angle      角度大小</span><br><span class="line">     * @param    int        $fontface   字体文件</span><br><span class="line">     * @param    string     $string     文字内容</span><br><span class="line">     * @param    width      $width      最大宽度 也就是达到这个宽度之后会换行</span><br><span class="line">     */</span><br><span class="line">    public static function AutoWrap($fontsize, $angle, $fontface, $string, $width)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $content = &quot;&quot;;</span><br><span class="line">        // 将字符串拆分成一个个单字 保存到数组 letter 中</span><br><span class="line">        for ($i = 0; $i &lt; mb_strlen($string); $i++) &#123;</span><br><span class="line">            $letter[] = mb_substr($string, $i, 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        foreach ($letter as $l) &#123;</span><br><span class="line">            $teststr = $content . &quot;&quot; . $l;</span><br><span class="line">            $testbox = imagettfbbox($fontsize, $angle, $fontface, $teststr);</span><br><span class="line">            // 判断拼接后的字符串是否超过预设的宽度</span><br><span class="line">            if (($testbox[2] &gt; $width) &amp;&amp; ($content !== &quot;&quot;)) &#123;</span><br><span class="line">                $content .= &quot;\n&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            $content .= $l;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $content = mb_convert_encoding($content, &quot;html-entities&quot;, &quot;utf-8&quot;);</span><br><span class="line"></span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [getInfo 获取图片信息]</span><br><span class="line">     * @param    url        $name       图片地址</span><br><span class="line">     * @return   array</span><br><span class="line">     */</span><br><span class="line">    public static function getInfo($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $info = getimagesize($name);</span><br><span class="line"></span><br><span class="line">        $width = $info[0];</span><br><span class="line">        $height = $info[1];</span><br><span class="line">        $mime = $info[&apos;mime&apos;];</span><br><span class="line">        switch ($mime) &#123;</span><br><span class="line">            case &apos;image/jpeg&apos;:</span><br><span class="line">                $res = imagecreatefromjpeg($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/gif&apos;:</span><br><span class="line">                $res = imagecreatefromgif($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/png&apos;:</span><br><span class="line">                $res = imagecreatefrompng($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/wbmp&apos;:</span><br><span class="line">                $res = imagecreatefromwbmp($name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return array(&apos;width&apos; =&gt; $width, &apos;height&apos; =&gt; $height, &apos;res&apos; =&gt; $res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [look 在浏览器中显示图片]</span><br><span class="line">     * @param    resource   $imageRes   图片源</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function look($imageRes)</span><br><span class="line">    &#123;</span><br><span class="line">        header(&quot;Content-type:image/png&quot;);</span><br><span class="line">        imagejpeg($imageRes);</span><br><span class="line">        imagedestroy($imageRes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [load 下载图片]</span><br><span class="line">     * @param    resource   $img  图片源</span><br><span class="line">     * @param    url        $name 主图地址</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function load($img, $name)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = self::getInfo($name);</span><br><span class="line"></span><br><span class="line">        $ext = pathinfo($name, PATHINFO_EXTENSION);</span><br><span class="line">        $file_path = &apos;./&apos; . date(&apos;Y-m-d&apos;);</span><br><span class="line"></span><br><span class="line">        if (!file_exists($file_path)) &#123;</span><br><span class="line">            mkdir($file_path, 0777, true);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $rand_name = $file_path . &apos;/&apos; . md5(mt_rand() . time()) . &quot;.&quot; . $ext;</span><br><span class="line"></span><br><span class="line">        switch ($ext) &#123;</span><br><span class="line">            case &apos;jpg&apos;:</span><br><span class="line">            case &apos;jpeg&apos;:</span><br><span class="line">            case &apos;jpe&apos;:</span><br><span class="line">                imagejpeg($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;png&apos;:</span><br><span class="line">                imagepng($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;gif&apos;:</span><br><span class="line">                imagegif($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;bmp&apos;:</span><br><span class="line">            case &apos;wbmp&apos;:</span><br><span class="line">                imagewbmp($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        //销毁资源</span><br><span class="line">        imagedestroy($info[&apos;res&apos;]);</span><br><span class="line">        imagedestroy($img);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;一.引言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;好久没写博客了，不知道该写些什么。&lt;br&gt;&amp;emsp;正发愁呢，突然发现了一个好玩的东西。&lt;br&gt;&amp;emsp;是什么呢？是php的一个扩展GD库。&lt;/p&gt;
&lt;p&gt;&amp;emsp;为什么说他好玩？我刚开始想的是用gd库做一个画，金黄的太阳、碧蓝的天空下面有绿色的草地、草地上有幢五颜六色的房子和一个坐在草里玩电脑的男孩，以及旁边的一只白猫…&lt;br&gt;后来真的要做的时候才发现，这也太难了。除非全是用图片组合成的才用可能…但是真正的图片确也很难到达我的要求，那就算了吧，想象还是美好的。&lt;/p&gt;
&lt;p&gt;&amp;emsp;后来经过整理和实践发现，这个东西比较适合做产品推广图来用，更加适合在公众号或小程序里跟二维码结合起来使用。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.daichongweb.com/tags/php/"/>
    
  </entry>
  
</feed>
