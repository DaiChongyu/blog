<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Daichong&#39;s Blog</title>
  
  <subtitle>戴崇博客,戴崇技术博客,php技术博客,hexo博客,web技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.daichongweb.com/"/>
  <updated>2019-06-23T08:45:07.452Z</updated>
  <id>http://www.daichongweb.com/</id>
  
  <author>
    <name>Daichongweb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git覆盖本地未提交的代码</title>
    <link href="http://www.daichongweb.com/git%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%9C%AA%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.daichongweb.com/git覆盖本地未提交的代码/</id>
    <published>2019-06-23T07:37:13.000Z</published>
    <updated>2019-06-23T08:45:07.452Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;在多人协作开发中，使用git或svn管理代码最常见的问题就是代码冲突！</p><p>&emsp;作为高效开发团队中的一员应当具有处理这些问题的能力。</p><p>&emsp;假设现有一个项目，有多个开发成员，成员A和成员B共同管理同一个分支的代码。成员A在本地修改了代码并提交到daichongweb分支，成员B也修改了代码，当成员B需要用到成员A提交代码中的部分功能，需要拉取daichongweb分支的代码，这时会出现一个错误。<br><a id="more"></a><br><img src="/git覆盖本地未提交的代码/img/1.png"><br>&emsp;可以看出git不允许拉取代码，因为成员A也同样修改了代码。那么能提交吗？答案是不能！提交会出现代码冲突的错误！</p><p>&emsp;这时应该想到的是如何把本地代码保存起来，当然git提供了命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/2.png"><br>&emsp;使用 <font color="#ff5722">git stash</font> 可将已修改的代码保存起来，然后在使用<font color="#ff5722">git pull</font> 拉取代码就不会出现错误。</p><p>&emsp;然后执行<font color="#ff5722">git stash list</font>查看暂存代码，再使用<font color="#ff5722">git stash pop stash@{0}</font>把代码pop出来，这时会提示冲突，把冲突解决就好了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br></pre></td></tr></table></figure><br><img src="/git覆盖本地未提交的代码/img/3.png"></p><blockquote><p>总结</p></blockquote><p>代码冲突要在本地处理，不要直接提交。<br>解决同一分支冲突的步骤：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash list </span><br><span class="line">git stash pop stash@&#123;0&#125;</span><br><span class="line">解决冲突</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;在多人协作开发中，使用git或svn管理代码最常见的问题就是代码冲突！&lt;/p&gt;
&lt;p&gt;&amp;emsp;作为高效开发团队中的一员应当具有处理这些问题的能力。&lt;/p&gt;
&lt;p&gt;&amp;emsp;假设现有一个项目，有多个开发成员，成员A和成员B共同管理同一个分支的代码。成员A在本地修改了代码并提交到daichongweb分支，成员B也修改了代码，当成员B需要用到成员A提交代码中的部分功能，需要拉取daichongweb分支的代码，这时会出现一个错误。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://www.daichongweb.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>覆盖本地未提交的代码</title>
    <link href="http://www.daichongweb.com/%E8%A6%86%E7%9B%96%E6%9C%AC%E5%9C%B0%E6%9C%AA%E6%8F%90%E4%BA%A4%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.daichongweb.com/覆盖本地未提交的代码/</id>
    <published>2019-06-23T07:35:39.000Z</published>
    <updated>2019-06-23T07:35:39.983Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【原创】phpgd库处理图片生成海报图</title>
    <link href="http://www.daichongweb.com/phpgd%E5%BA%93%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87%E7%94%9F%E6%88%90%E6%B5%B7%E6%8A%A5%E5%9B%BE/"/>
    <id>http://www.daichongweb.com/phpgd库处理图片生成海报图/</id>
    <published>2019-05-23T10:14:12.000Z</published>
    <updated>2019-06-23T05:02:37.568Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一.引言</p></blockquote><p>&emsp;好久没写博客了，不知道该写些什么。<br>&emsp;正发愁呢，突然发现了一个好玩的东西。<br>&emsp;是什么呢？是php的一个扩展GD库。</p><p>&emsp;为什么说他好玩？我刚开始想的是用gd库做一个画，金黄的太阳、碧蓝的天空下面有绿色的草地、草地上有幢五颜六色的房子和一个坐在草里玩电脑的男孩，以及旁边的一只白猫…<br>后来真的要做的时候才发现，这也太难了。除非全是用图片组合成的才用可能…但是真正的图片确也很难到达我的要求，那就算了吧，想象还是美好的。</p><p>&emsp;后来经过整理和实践发现，这个东西比较适合做产品推广图来用，更加适合在公众号或小程序里跟二维码结合起来使用。<br><a id="more"></a><br><blockquote><p>二.简单介绍</p></blockquote><br>&emsp;1).如何下载类库&amp;&amp;测试demo，大家可以从<font color="#ff5722">github</font>上拉取，地址：<a href="https://github.com/DaiChongyu/phpgd-CreatePoster" target="_blank" rel="noopener">类库&&demo</a><br>&emsp;2).如何使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">use \CreatePoster\CreateHelper;</span><br><span class="line">require &apos;./gd.php&apos;;</span><br><span class="line">CreateHelper::start();</span><br></pre></td></tr></table></figure><br>&emsp;3).注意事项：<br>&emsp;&emsp;1.写入字体要引入字体文件，文件路径一般为绝对路径。<br>&emsp;&emsp;2.下载地址可以在load函数中配置。<br>&emsp;&emsp;3.主图最好是png格式，这样清晰度会很高。<br>&emsp;&emsp;4.使用CreateImage创建画板时，如果传入的图片较小，如需放大请使用第4和第5个参数。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success1.png" width="300"></div><br></div><br>&emsp;&emsp;5.使用CreateImage创建画板时，注意imagecolortransparent使用，他会把画板变为透明。</p><p><div style="display: flex;justify-content: space-around;"><br>    <div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/error1.png" width="300"></div><div style="display: inline-block;"><img src="/phpgd库处理图片生成海报图/img/success.png" width="300"></div><br></div></p><p><font color="#ff5722">PS:其他的用途就看大家的创意、想法了。<b>我们不做代码搬运工，我们要做代码艺术家。</b>后续此类会经常的更新和优化….</font><br><blockquote><p>四.代码浏览</p></blockquote><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace CreatePoster;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  生成海报图</span><br><span class="line"> *  @author daichongweb</span><br><span class="line"> *  @url daichongweb.cn,daichongweb.com</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">class CreateHelper</span><br><span class="line">&#123;</span><br><span class="line">    public static function start()</span><br><span class="line">    &#123;</span><br><span class="line">        echo (&apos;&lt;h2&gt;欢迎使用：)&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &apos;海报图制作步骤:&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;1.创建画板(普通画板用CreatePalette;图像画板用CreateImage)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;2.合并图片(ImagesMerge)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;3.插入文字(CreateChars)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;4.插入划线(CreateLine)&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo &apos;&amp;emsp;&amp;emsp;5.下载或查看&apos;;</span><br><span class="line">        echo &apos;&lt;br /&gt;&apos;;</span><br><span class="line">        echo (&apos;&lt;h2&gt;注意事项:&lt;/h2&gt;&apos;);</span><br><span class="line">        echo &apos;&lt;hr /&gt;&apos;;</span><br><span class="line">        echo &quot;&lt;font color=&apos;red&apos;&gt;注意事项：主图尽量改为png格式，这样的话图片会很清晰，在浏览器中直接查看效果不是很好，下载下来就会很清晰的。&lt;/font&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreatePalette 新建一个画板]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x_size     画板的宽度</span><br><span class="line">     * @param    int        $y_size     画板的高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CreatePalette($config)</span><br><span class="line">    &#123;</span><br><span class="line">        $Palette = imagecreate($config[&apos;x_size&apos;], $config[&apos;y_size&apos;]);</span><br><span class="line">        imagecolorallocate($Palette, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        return $Palette;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBr 画一个矩形边框]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int       $red         红色</span><br><span class="line">     * @param    int       $green       绿色</span><br><span class="line">     * @param    int       $blue        蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagerectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [OrthogonBg 画一个矩形实体]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $x1         x坐标</span><br><span class="line">     * @param    int        $y1         y坐标</span><br><span class="line">     *</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function OrthogonBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledrectangle($mainBg, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBr 画一个椭圆边框]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $height     高度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imageellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CircleBg 画一个实体椭圆]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     * @param    int        $width      宽度</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     */</span><br><span class="line">    public static function CircleBg($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line">        imagefilledellipse($mainBg, $config[&apos;left&apos;], $config[&apos;top&apos;], $config[&apos;width&apos;], $config[&apos;height&apos;], $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [StarBr 画一个五角星边框]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $mainBg     画布资源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $r          半径</span><br><span class="line">     * @param    int        $left       距离左边的距离</span><br><span class="line">     * @param    int        $top        距离上边的距离</span><br><span class="line">     */</span><br><span class="line">    public static function StarBr($mainBg, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        $r = $config[&apos;r&apos;];</span><br><span class="line">        $degree36 = deg2rad(36);</span><br><span class="line">        $l = 2 * $r * sin($degree36);</span><br><span class="line">        $a = $l * cos($degree36);</span><br><span class="line">        $b = $l * sin($degree36);</span><br><span class="line">        $c = $l / 2;</span><br><span class="line">        $d = $r * cos($degree36);</span><br><span class="line"></span><br><span class="line">        $px1 = $config[&apos;left&apos;];</span><br><span class="line">        $py1 = $config[&apos;top&apos;];</span><br><span class="line"></span><br><span class="line">        $px2 = $px1 + $a;</span><br><span class="line">        $py2 = $py1 + $b;</span><br><span class="line">        $px3 = $px1 + $c;</span><br><span class="line">        $py3 = $py1 + $r + $d;</span><br><span class="line">        $px4 = $px1 - $c;</span><br><span class="line">        $py4 = $py1 + $r + $d;</span><br><span class="line">        $px5 = $px1 - $a;</span><br><span class="line">        $py5 = $py1 + $b;</span><br><span class="line"></span><br><span class="line">        $color = imagecolorallocate($mainBg, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;]);</span><br><span class="line"></span><br><span class="line">        imageline($mainBg, $px2, $py2, $px5, $py5, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px3, $py3, $color);</span><br><span class="line">        imageline($mainBg, $px1, $py1, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px2, $py2, $px4, $py4, $color);</span><br><span class="line">        imageline($mainBg, $px3, $py3, $px5, $py5, $color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateImage 新建一个图像画板]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    url        $palette    图像的地址</span><br><span class="line">     * @param    string     $dst_w      目标图片的宽度</span><br><span class="line">     * @param    string     $dst_h      目标图片的高度</span><br><span class="line">     * @param    string     $bgWidth    画板的宽度</span><br><span class="line">     * @param    string     $bgHeight   画板的高度    这两项决定了图片如果小了是否会被拉伸</span><br><span class="line">     */</span><br><span class="line">    public static function CreateImage($palette, $dst_w = &apos;&apos;, $dst_h = &apos;&apos;, $bgWidth = &apos;&apos;, $bgHeight = &apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = getimagesize($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundFun = &apos;imagecreatefrom&apos; . image_type_to_extension($info[2], false);</span><br><span class="line">        $background = $backgroundFun($palette);</span><br><span class="line"></span><br><span class="line">        $backgroundWidth = imagesx($background);</span><br><span class="line">        $backgroundHeight = imagesy($background);</span><br><span class="line"></span><br><span class="line">        $imageRes = imageCreatetruecolor($bgWidth ? $bgWidth : $backgroundWidth, $bgHeight ? $bgHeight : $backgroundHeight);</span><br><span class="line">        $color = imagecolorallocate($imageRes, 255, 255, 255);</span><br><span class="line">        // 正式使用 这个定要注释</span><br><span class="line">        // imagecolortransparent($imageRes, $color);</span><br><span class="line">        imagefill($imageRes, 0, 0, $color);</span><br><span class="line"></span><br><span class="line">        imagecopyresized($imageRes, $background, 0, 0, 0, 0, $dst_w ? $dst_w : imagesx($background), $dst_h ? $dst_h : imagesy($background), imagesx($background), imagesy($background));</span><br><span class="line"></span><br><span class="line">        return $imageRes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateChars 在画板中插入文字]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     配置信息</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $num        次数越多文字越粗</span><br><span class="line">     * @param    int        $size       文字大小</span><br><span class="line">     * @param    int        $angle      旋转的角度 默认不旋转为0</span><br><span class="line">     * @param    int        $x          文字的坐标x</span><br><span class="line">     * @param    int        $y          文字的坐标y</span><br><span class="line">     * @param    int        $font       字体文件 这里一般为绝对路径</span><br><span class="line">     * @param    int        $text       文字内容</span><br><span class="line">     *</span><br><span class="line">     */</span><br><span class="line">    public static function CreateChars($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置文字颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //循环多次为了加粗字体</span><br><span class="line">        for ($i = 1; $i &lt;= $config[&apos;num&apos;]; $i++) &#123;</span><br><span class="line"></span><br><span class="line">            imagettftext($image, $config[&apos;size&apos;], $config[&apos;angle&apos;], $config[&apos;x&apos;], $config[&apos;y&apos;], $color, $config[&apos;font&apos;], $config[&apos;text&apos;]);</span><br><span class="line">        &#125;</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [CreateLine 画一条实线]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $image      图片源</span><br><span class="line">     * @param    array      $config     数据配置</span><br><span class="line">     * @param    int        $red        红色</span><br><span class="line">     * @param    int        $green      绿色</span><br><span class="line">     * @param    int        $blue       蓝色</span><br><span class="line">     * @param    int        $alpha      透明度 0不透明</span><br><span class="line">     * @param    int        $x1 x2      坐标x</span><br><span class="line">     * @param    int        $y1 y2      坐标y</span><br><span class="line">     */</span><br><span class="line">    public static function CreateLine($image, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        //设置线条颜色</span><br><span class="line">        $color = imagecolorexactalpha($image, $config[&apos;red&apos;], $config[&apos;green&apos;], $config[&apos;blue&apos;], $config[&apos;alpha&apos;]);</span><br><span class="line">        //划线</span><br><span class="line">        imageline($image, $config[&apos;x1&apos;], $config[&apos;y1&apos;], $config[&apos;x2&apos;], $config[&apos;y2&apos;], $color);</span><br><span class="line">        return $image;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [functionName 图片合并]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * 将 src_im 图像中坐标从 src_x，src_y 开始，宽度为 src_w，高度为 src_h 的一部分拷贝到 dst_im 图像中坐标为 dst_x 和 dst_y 的位置上。两图像将根据 pct</span><br><span class="line">     * 来决定合并程度，其值范围从 0 到 100。当 pct = 0 时，实际上什么也没做，当为 100 时对于调色板图像本函数和 imagecopy() 完全一样，它对真彩色图像实现了 alpha *</span><br><span class="line">     * 透明。</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function ImagesMerge($mainBg, $second, $config)</span><br><span class="line">    &#123;</span><br><span class="line">        imagecopymerge($mainBg, $second, $config[&apos;dst_x&apos;], $config[&apos;dst_y&apos;], $config[&apos;src_x&apos;], $config[&apos;src_y&apos;], $config[&apos;src_w&apos;], $config[&apos;src_h&apos;], $config[&apos;pct&apos;]);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * [AutoWrap 文字换行]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    int        $fontsize   字体大小</span><br><span class="line">     * @param    int        $angle      角度大小</span><br><span class="line">     * @param    int        $fontface   字体文件</span><br><span class="line">     * @param    string     $string     文字内容</span><br><span class="line">     * @param    width      $width      最大宽度 也就是达到这个宽度之后会换行</span><br><span class="line">     */</span><br><span class="line">    public static function AutoWrap($fontsize, $angle, $fontface, $string, $width)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $content = &quot;&quot;;</span><br><span class="line">        // 将字符串拆分成一个个单字 保存到数组 letter 中</span><br><span class="line">        for ($i = 0; $i &lt; mb_strlen($string); $i++) &#123;</span><br><span class="line">            $letter[] = mb_substr($string, $i, 1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        foreach ($letter as $l) &#123;</span><br><span class="line">            $teststr = $content . &quot;&quot; . $l;</span><br><span class="line">            $testbox = imagettfbbox($fontsize, $angle, $fontface, $teststr);</span><br><span class="line">            // 判断拼接后的字符串是否超过预设的宽度</span><br><span class="line">            if (($testbox[2] &gt; $width) &amp;&amp; ($content !== &quot;&quot;)) &#123;</span><br><span class="line">                $content .= &quot;\n&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            $content .= $l;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $content = mb_convert_encoding($content, &quot;html-entities&quot;, &quot;utf-8&quot;);</span><br><span class="line"></span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [getInfo 获取图片信息]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    url        $name       图片地址</span><br><span class="line">     * @return   array</span><br><span class="line">     */</span><br><span class="line">    public static function getInfo($name)</span><br><span class="line">    &#123;</span><br><span class="line">        $info = getimagesize($name);</span><br><span class="line"></span><br><span class="line">        $width = $info[0];</span><br><span class="line">        $height = $info[1];</span><br><span class="line">        $mime = $info[&apos;mime&apos;];</span><br><span class="line">        switch ($mime) &#123;</span><br><span class="line">            case &apos;image/jpeg&apos;:</span><br><span class="line">                $res = imagecreatefromjpeg($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/gif&apos;:</span><br><span class="line">                $res = imagecreatefromgif($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/png&apos;:</span><br><span class="line">                $res = imagecreatefrompng($name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;image/wbmp&apos;:</span><br><span class="line">                $res = imagecreatefromwbmp($name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        return array(&apos;width&apos; =&gt; $width, &apos;height&apos; =&gt; $height, &apos;res&apos; =&gt; $res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [look 在浏览器中显示图片]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $imageRes   图片源</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function look($imageRes)</span><br><span class="line">    &#123;</span><br><span class="line">        header(&quot;Content-type:image/png&quot;);</span><br><span class="line">        imagejpeg($imageRes);</span><br><span class="line">        imagedestroy($imageRes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * [load 下载图片]</span><br><span class="line">     * @author DaiChong</span><br><span class="line">     * @DateTime 2019-05-23</span><br><span class="line">     * @param    resource   $img  图片源</span><br><span class="line">     * @param    url        $name 主图地址</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static function load($img, $name)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        $info = self::getInfo($name);</span><br><span class="line"></span><br><span class="line">        $ext = pathinfo($name, PATHINFO_EXTENSION);</span><br><span class="line">        $file_path = &apos;./&apos; . date(&apos;Y-m-d&apos;);</span><br><span class="line"></span><br><span class="line">        if (!file_exists($file_path)) &#123;</span><br><span class="line">            mkdir($file_path, 0777, true);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $rand_name = $file_path . &apos;/&apos; . md5(mt_rand() . time()) . &quot;.&quot; . $ext;</span><br><span class="line"></span><br><span class="line">        switch ($ext) &#123;</span><br><span class="line">            case &apos;jpg&apos;:</span><br><span class="line">            case &apos;jpeg&apos;:</span><br><span class="line">            case &apos;jpe&apos;:</span><br><span class="line">                imagejpeg($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;png&apos;:</span><br><span class="line">                imagepng($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;gif&apos;:</span><br><span class="line">                imagegif($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">            case &apos;bmp&apos;:</span><br><span class="line">            case &apos;wbmp&apos;:</span><br><span class="line">                imagewbmp($img, $rand_name);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        //销毁资源</span><br><span class="line">        imagedestroy($info[&apos;res&apos;]);</span><br><span class="line">        imagedestroy($img);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;一.引言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;好久没写博客了，不知道该写些什么。&lt;br&gt;&amp;emsp;正发愁呢，突然发现了一个好玩的东西。&lt;br&gt;&amp;emsp;是什么呢？是php的一个扩展GD库。&lt;/p&gt;
&lt;p&gt;&amp;emsp;为什么说他好玩？我刚开始想的是用gd库做一个画，金黄的太阳、碧蓝的天空下面有绿色的草地、草地上有幢五颜六色的房子和一个坐在草里玩电脑的男孩，以及旁边的一只白猫…&lt;br&gt;后来真的要做的时候才发现，这也太难了。除非全是用图片组合成的才用可能…但是真正的图片确也很难到达我的要求，那就算了吧，想象还是美好的。&lt;/p&gt;
&lt;p&gt;&amp;emsp;后来经过整理和实践发现，这个东西比较适合做产品推广图来用，更加适合在公众号或小程序里跟二维码结合起来使用。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.daichongweb.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>使用htpasswd为web网站增加安全性</title>
    <link href="http://www.daichongweb.com/%E4%BD%BF%E7%94%A8htpasswd%E4%B8%BAweb%E7%BD%91%E7%AB%99%E5%A2%9E%E5%8A%A0%E5%AE%89%E5%85%A8%E6%80%A7/"/>
    <id>http://www.daichongweb.com/使用htpasswd为web网站增加安全性/</id>
    <published>2019-05-13T07:34:52.000Z</published>
    <updated>2019-06-23T05:02:37.579Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一.引言</p></blockquote><font color="#ff5722">什么是 htpasswd ?</font><br>&emsp;(1)htpasswd是开源 http 服务器apache httpd的一个命令工具，用于生成 http 基本认证的密码文件。<br>&emsp;(2)nginx底层提供了 <a href="http://www.nginx.cn/doc/standard/httpauthbasic.html" target="_blank" rel="noopener">HttpAuthBasic</a>模块，这个模块支持最基本的http认证，这是http协议支持的。当你访问网站时候会弹出一个对话框要求你输入账号密码,只要输入正确才能访问对应的网站。<br><font color="#ff5722">如果认证失败会怎么样 ?</font><br><a id="more"></a><br><img src="/使用htpasswd为web网站增加安全性/img/htpasswd.png"><br><font color="#ff5722">这样做的目的是什么 ?</font><br>&emsp;(1)为了禁止访问特殊的网页(这里暂时还没了解到特殊的用法…之后再补充)<br>&emsp;(2)是的,我用这个的原因是为walle项目安全考虑的,因为walle官方推荐为了安全尽量放在内网(这里应该是为了防止暴力破解),之前的的博文也有讲到可以使用双向认证,但是对初学者而言是很不友好、有点麻烦的,那么这个htpasswd就非常之简单了，就是敢敢单单。哎！坐下坐下这是基操。<br><blockquote><p>二.安装&amp;&amp;配置</p></blockquote><br>&emsp;第一步:检测是否已经安装了 httpd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#httpd -v</span><br><span class="line">Server version: Apache/2.4.6 (CentOS)</span><br><span class="line">Server built:   Apr 24 2019 13:45:48</span><br><span class="line"></span><br><span class="line">#没安装的执行</span><br><span class="line">#yum -y install httpd </span><br></pre></td></tr></table></figure><br>&emsp;第二步:创建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#这里必须是nginx的安装目录.passwd后面是 账号 密码</span><br><span class="line"></span><br><span class="line">#htpasswd -bc /etc/nginx/.passwd daichongweb daichongweb</span><br><span class="line">#生成成功:Adding password for user daichongweb</span><br><span class="line"></span><br><span class="line">#注意:不同的机子可能nginx下的文件不同有的人是.htpasswd</span><br></pre></td></tr></table></figure><br>&emsp;第三步:nginx配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location  /  &#123;</span><br><span class="line">auth_basic            &quot;这里随意起个名字&quot;;</span><br><span class="line">auth_basic_user_file  /etc/nginx/.passwd;#这里是nginx安装目录下的密码文件</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;第四步:检测配置&amp;&amp;重启服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#nginx -t</span><br><span class="line"></span><br><span class="line">#nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">#nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line"></span><br><span class="line">#重启</span><br><span class="line">#nginx -s reload</span><br></pre></td></tr></table></figure><br>&emsp;第五步:访问域名测试<br><img src="/使用htpasswd为web网站增加安全性/img/htpasswd1.png"><br><blockquote><p>三.其他操作</p></blockquote><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#删除用户</span><br><span class="line">#htpasswd -D /etc/nginx/.passwd daichongweb</span><br><span class="line"></span><br><span class="line">#修改密码</span><br><span class="line">#htpasswd -d /etc/nginx/.passwd daichongweb123</span><br><span class="line"></span><br><span class="line">#其他命令</span><br><span class="line">-c：创建一个加密文件</span><br><span class="line">-n：不更新加密文件，只将加密后的用户名密码显示在屏幕上</span><br><span class="line">-m：默认采用MD5算法对密码进行加密</span><br><span class="line">-d：采用CRYPT算法对密码进行加密</span><br><span class="line">-p：不对密码进行进行加密，即明文密码</span><br><span class="line">-s：采用SHA算法对密码进行加密</span><br><span class="line">-b：在命令行中一并输入用户名和密码而不是根据提示输入密码</span><br><span class="line">-D：删除指定的用户</span><br></pre></td></tr></table></figure><br><font color="#ff5722">本篇文章到这里就结束了，感谢大家的支持！</font>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;一.引言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;font color=&quot;#ff5722&quot;&gt;什么是 htpasswd ?&lt;/font&gt;&lt;br&gt;&amp;emsp;(1)htpasswd是开源 http 服务器apache httpd的一个命令工具，用于生成 http 基本认证的密码文件。&lt;br&gt;&amp;emsp;(2)nginx底层提供了 &lt;a href=&quot;http://www.nginx.cn/doc/standard/httpauthbasic.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HttpAuthBasic&lt;/a&gt;模块，这个模块支持最基本的http认证，这是http协议支持的。当你访问网站时候会弹出一个对话框要求你输入账号密码,只要输入正确才能访问对应的网站。&lt;br&gt;&lt;font color=&quot;#ff5722&quot;&gt;如果认证失败会怎么样 ?&lt;/font&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.daichongweb.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>【原创】用jquery做爬虫</title>
    <link href="http://www.daichongweb.com/%E7%94%A8jquery%E5%81%9A%E7%88%AC%E8%99%AB/"/>
    <id>http://www.daichongweb.com/用jquery做爬虫/</id>
    <published>2019-05-10T03:34:38.000Z</published>
    <updated>2019-06-23T05:02:37.580Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>引言</p></blockquote><p>&emsp;之前公司有需求要做一个采集信息的工具,包括获取商品信息导入数据库,比价什么的功能,没办法只能尝试这做一下。<br>&emsp;考虑到是做定向爬取,我就选择了jquery,因为jquery相比其他语言做爬虫是简单轻松很多。<br><blockquote><p>不同语言自然会有不同用处。离开环境谈哪个好，哪个不好都是耍流氓。<br>1，如果是自己做着玩的话，定向爬几个页面，效率不是核心要求的话，问题不会大，什么语言都行的，性能差异不会大。当然，如果碰到十分复杂的页面，正则写的很复杂的话，爬虫的可维护性就会下降。<br><a id="more"></a><br>2，如果是做定向爬取，而目标又要解析动态js。<br>那么这个时候，用普通的请求页面，然后得到内容的方法肯定不行了，就要一个类似firfox，chrome的js引擎来对js代码做动态解析。这个时候推荐casperJS+phantomjs或slimerJS+phantomjs</p><p></p><p><br>3，如果是大规模的网站爬取。<br>这个时候就要考虑到，效率，扩展性，可维护性，等等了。<br>大规模的爬取涉及的方面很多，比如分布式爬取，判重机制，任务调度。这些问题深入下去哪一个简单了？<br>语言选取这个时候很重要。<br>NodeJs：做爬虫效率很高。高并发，多线程编程变成了简单的遍历和callback，内存cpu占用小，要处理好callback。</p><p>PHP：各种框架到处有，随便拉个来用都行。但是，PHP的效率真的有问题…不多说<br>Python:我用python写的比较多，对各种问题都有比较好的支持。scrapy框架很好用，优点多。<br>我觉得js也不是很适合写…效率问题。没写过，估计会有麻烦一堆。<br>据我知道的，大公司也有用c++的，总之大多数都是在开源框架上改造。真重新造个轮子的不多吧。<br>不值。</p><footer><strong>来自segmentfault</strong><cite>一位大佬</cite></footer></blockquote><br><blockquote><p>jquery实现</p></blockquote><br><figure class="highlight plain"><figcaption><span>抓取代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">javascript: (function() &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        var Arr = &#123;</span><br><span class="line">            &apos;name&apos;: getTitle(),</span><br><span class="line">            &apos;img&apos;: getImgs(),</span><br><span class="line">            &apos;price&apos;: getPirce(),</span><br><span class="line">            &apos;sku&apos;: getSku(),</span><br><span class="line">            &apos;desc&apos;: getDesc(),</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取图片</span><br><span class="line">        function getImgs() &#123;</span><br><span class="line">            var imgArr = [];</span><br><span class="line">            $(&quot;#dt-tab ul li&quot;).each(function(k, v) &#123;</span><br><span class="line">                var imgJson = JSON.parse($(v).attr(&apos;data-imgs&apos;));</span><br><span class="line">                if (imgJson) &#123;</span><br><span class="line">                    imgArr.push(imgJson.preview);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">            return imgArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取名称</span><br><span class="line">        function getTitle() &#123;</span><br><span class="line">            var _this = $(&apos;#mod-detail-title .d-title&apos;);</span><br><span class="line">            return _this.html();</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取价格</span><br><span class="line">        function getPirce() &#123;</span><br><span class="line">            var _this = $(&quot;#mod-detail-price .price .ladder-3-1&quot;);</span><br><span class="line">            var priceJson = JSON.parse(_this.attr(&apos;data-range&apos;));</span><br><span class="line">            return priceJson.price;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取sku属性</span><br><span class="line">        function getSku() &#123;</span><br><span class="line">            var skuArr = [];</span><br><span class="line">            var _this = $(&quot;.obj-sku .table-sku tr&quot;);</span><br><span class="line">            if (_this) &#123;</span><br><span class="line">                var step = 0;</span><br><span class="line">                _this.each(function(k, v) &#123;</span><br><span class="line">                    step++;</span><br><span class="line">                    skuArr.push(&#123;</span><br><span class="line">                        &apos;sku_name&apos;: $(v).find(&apos;.name span&apos;).html(),</span><br><span class="line">                        &apos;price&apos;: $(v).find(&apos;.price span .value&apos;).html(),</span><br><span class="line">                        &apos;img&apos;: getSkuImg(step),</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return skuArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取商品详情</span><br><span class="line">        function getDesc() &#123;</span><br><span class="line">            var descArr = [];</span><br><span class="line">            var _this = $(&quot;#mod-detail-description img&quot;);</span><br><span class="line">            if (_this) &#123;</span><br><span class="line">                _this.each(function(k, v) &#123;</span><br><span class="line">                    var url = $(v).attr(&apos;src&apos;);</span><br><span class="line">                    var patt = new RegExp(&quot;[a-zA-z]+://[^\s]*&quot;);</span><br><span class="line">                    if(patt.test(url))&#123;</span><br><span class="line">                        descArr.push(url);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return descArr;</span><br><span class="line">        &#125;;</span><br><span class="line">        //获取sku图片</span><br><span class="line">        function getSkuImg(step) &#123;</span><br><span class="line">            if ($(&quot;#dt-tab ul li&quot;) &amp;&amp; $(&quot;.obj-sku .table-sku tr&quot;)) &#123;</span><br><span class="line">                return $(&quot;#dt-tab ul li:eq(&quot; + step + &quot;) .box-img img&quot;).attr(&apos;src&apos;);</span><br><span class="line">            &#125;;</span><br><span class="line">            return &apos;&apos;;</span><br><span class="line">        &#125;;</span><br><span class="line">        if(confirm(&apos;获取成功，确认要采集吗？&apos;)==true)&#123;</span><br><span class="line">            console.log(Arr);</span><br><span class="line">            return false;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                type:&quot;post&quot;,</span><br><span class="line">                url:&apos;www.daichongweb.com&apos;,</span><br><span class="line">                data:&#123;</span><br><span class="line">                    post:Arr</span><br><span class="line">                &#125;,</span><br><span class="line">                dataType:&apos;json&apos;,</span><br><span class="line">                success:function(res)&#123;</span><br><span class="line">                    if(res.code==0)&#123;</span><br><span class="line">                        alert(&apos;采集成功！&apos;);</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        alert(res.message);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,error:function(res)&#123;</span><br><span class="line">                    alert(&apos;采集失败！&apos;);</span><br><span class="line">                &#125;,beforeSend:function(res)&#123;</span><br><span class="line">                    $(&apos;body&apos;).append(&apos;&lt;div id=&quot;daichongweb&quot; style=&quot;position:fixed;top:0;left:0;background: rgba(0, 0, 0, .5);text-align: center;line-height: 20;font-size: 30px;color: white;width:100vw;height:100vh;z-index:1000000000;&quot;&gt;采集中！&lt;/div&gt;&apos;);</span><br><span class="line">                &#125;,complete:function(res)&#123;</span><br><span class="line">                    $(&quot;#daichongweb&quot;).remove();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (err) &#123;</span><br><span class="line">        alert(err);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><br><a href="https://detail.1688.com/offer/532767414753.html?spm=a312h.2018_new_sem.dh_002.9.4182da6cBnSleC&tracelog=p4p&clickid=b71344bc8a2845a89bec27e826ef5244&sessionid=ca394d2c134b91816dc881204b47063c" target="_blank" rel="noopener">定向商品链接->1688.com</a>&emsp;当然了,这个采集代码不只是针对这一个商品,它可以抓取和他页面结构一样的所有商品。</p><p><font color="#ff5722">PS:这里的抓取可根据自己的实际业务来改变,比如需要让页面中的轮播图切换这个才能获取,那就在抓取之前写个切换的脚本;切换一张抓取一张;</font><br><blockquote><p>怎么才能在谷歌中运行这个脚本</p></blockquote><br>&emsp;方法一：直接放在控制台(这里并不推荐使用,因为公司的人不可能都懂代码,而且操作麻烦)。<br>&emsp;方法二：在浏览器中添加书签,把代码复制到网址栏里,要采集的时候点击一下就ok了！<br><img src="/用jquery做爬虫/img/jquery.png"></p><p><font color="#ff5722">PS:整体运用情况看,个人觉得jquery做采集还是挺不错的。当然相比php、python的话显得有点低端的感觉,那也没办法谁让php、python是动态获取的呢?</font><br>之后会用php或python做个一个动态抓取的脚本,当然也包括比价之类的运用…..<br><blockquote><p>后端处理数据(可忽略)</p></blockquote><br><figure class="highlight php"><figcaption><span>php处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'./oss/autoload.php'</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">OSS</span>\<span class="title">OssClient</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">OSS</span>\<span class="title">Core</span>\<span class="title">OssException</span>;</span><br><span class="line"></span><br><span class="line">header(<span class="string">'Content-Type: text/html;charset=utf-8'</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Origin:*'</span>); <span class="comment">// *代表允许任何网址请求</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Methods:POST,GET,OPTIONS,DELETE'</span>); <span class="comment">// 允许请求的类型</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Credentials: true'</span>); <span class="comment">// 设置是否允许发送 cookies</span></span><br><span class="line">header(<span class="string">'Access-Control-Allow-Headers: Content-Type,Content-Length,Accept-Encoding,X-Requested-with, Origin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST)&#123;</span><br><span class="line"></span><br><span class="line">$post = $_POST[<span class="string">'post'</span>];</span><br><span class="line"><span class="keyword">if</span>($post)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理大图</span></span><br><span class="line">$imgArr = $post[<span class="string">'img'</span>];</span><br><span class="line"><span class="keyword">if</span>($imgArr)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($imgArr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$imgArr[$k] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'img'</span>] = $imgArr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>, $post))&#123;</span><br><span class="line"><span class="comment">//处理小图</span></span><br><span class="line">$sku = $post[<span class="string">'sku'</span>];</span><br><span class="line"><span class="keyword">if</span>($sku)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($sku <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v[<span class="string">'img'</span>]);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$sku[$k][<span class="string">'img'</span>] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'sku'</span>] = $sku;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'desc'</span>, $post))&#123;</span><br><span class="line"><span class="comment">//处理详情图</span></span><br><span class="line">$desc = $post[<span class="string">'desc'</span>];</span><br><span class="line"><span class="keyword">if</span>($desc)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($desc <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$name = saveImgToLocal($v);</span><br><span class="line">$ossPath = <span class="string">'collect/'</span>.date(<span class="string">'Ym'</span>).<span class="string">'/'</span>.$name;</span><br><span class="line">uploadImgOss($ossPath,<span class="string">'./img/'</span>.$name);</span><br><span class="line">$desc[$k] = $ossPath;</span><br><span class="line">&#125;</span><br><span class="line">$post[<span class="string">'desc'</span>] = $desc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line">$Db = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"daichongweb"</span>,<span class="string">"shop"</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno($Db)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"连接 MySQL 失败: "</span> . mysqli_connect_error(); </span><br><span class="line">&#125;</span><br><span class="line">insertDb($Db,$post);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存图片到本地</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveImgToLocal</span><span class="params">($telefile,$path=<span class="string">'./img/'</span>)</span></span>&#123;</span><br><span class="line">$ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $telefile);</span><br><span class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">120</span>);</span><br><span class="line">    $file = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line"></span><br><span class="line">    $filename = pathinfo($telefile, PATHINFO_BASENAME);</span><br><span class="line">    $resource = fopen($path . $filename, <span class="string">'a'</span>);</span><br><span class="line">    fwrite($resource, $file);</span><br><span class="line">    fclose($resource);</span><br><span class="line">    <span class="keyword">return</span> $filename;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上传图片的oss</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadImgOss</span><span class="params">($object,$filePath)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">$accessKeyId = <span class="string">"阿里ossKeyID"</span>;</span><br><span class="line">$accessKeySecret = 阿里ossKeySecret;</span><br><span class="line">$endpoint = <span class="string">"项目地址"</span>;</span><br><span class="line">$bucket = <span class="string">"项目名称"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    $ossClient = <span class="keyword">new</span> OssClient($accessKeyId, $accessKeySecret, $endpoint);</span><br><span class="line">   $ossClient-&gt;uploadFile($bucket, $object, $filePath);</span><br><span class="line">&#125; <span class="keyword">catch</span>(OssException $e) &#123;</span><br><span class="line">   print_r($e-&gt;getMessage());</span><br><span class="line">   <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获得随机字符串</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $len             需要的长度</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> $special        是否需要特殊符号</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> string       返回随机字符串</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomStr</span><span class="params">($len, $special = false)</span></span>&#123;</span><br><span class="line">$chars = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span>, <span class="string">"g"</span>, <span class="string">"h"</span>, <span class="string">"i"</span>, <span class="string">"j"</span>, <span class="string">"k"</span>,</span><br><span class="line">    <span class="string">"l"</span>, <span class="string">"m"</span>, <span class="string">"n"</span>, <span class="string">"o"</span>, <span class="string">"p"</span>, <span class="string">"q"</span>, <span class="string">"r"</span>, <span class="string">"s"</span>, <span class="string">"t"</span>, <span class="string">"u"</span>, <span class="string">"v"</span>,</span><br><span class="line">    <span class="string">"w"</span>, <span class="string">"x"</span>, <span class="string">"y"</span>, <span class="string">"z"</span>, <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>,</span><br><span class="line">    <span class="string">"H"</span>, <span class="string">"I"</span>, <span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"N"</span>, <span class="string">"O"</span>, <span class="string">"P"</span>, <span class="string">"Q"</span>, <span class="string">"R"</span>,</span><br><span class="line">    <span class="string">"S"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>, <span class="string">"W"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"Z"</span>, <span class="string">"0"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>,</span><br><span class="line">    <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>($special)&#123;</span><br><span class="line">    $chars = array_merge($chars, <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"!"</span>, <span class="string">"@"</span>, <span class="string">"#"</span>, <span class="string">"$"</span>, <span class="string">"?"</span>, <span class="string">"|"</span>, <span class="string">"&#123;"</span>, <span class="string">"/"</span>, <span class="string">":"</span>, <span class="string">";"</span>,</span><br><span class="line">        <span class="string">"%"</span>, <span class="string">"^"</span>, <span class="string">"&amp;"</span>, <span class="string">"*"</span>, <span class="string">"("</span>, <span class="string">")"</span>, <span class="string">"-"</span>, <span class="string">"_"</span>, <span class="string">"["</span>, <span class="string">"]"</span>,</span><br><span class="line">        <span class="string">"&#125;"</span>, <span class="string">"&lt;"</span>, <span class="string">"&gt;"</span>, <span class="string">"~"</span>, <span class="string">"+"</span>, <span class="string">"="</span>, <span class="string">","</span>, <span class="string">"."</span></span><br><span class="line">    ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$charsLen = count($chars) - <span class="number">1</span>;</span><br><span class="line">shuffle($chars);                            <span class="comment">//打乱数组顺序</span></span><br><span class="line">$str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$len; $i++)&#123;</span><br><span class="line">     $str .= $chars[mt_rand(<span class="number">0</span>, $charsLen)];    <span class="comment">//随机取出一位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//把数据插入数据库</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertDb</span><span class="params">($Db,$data)</span></span>&#123;</span><br><span class="line"><span class="comment">//商品主表</span></span><br><span class="line">$pd_product_field = [</span><br><span class="line"><span class="string">'product_art_no'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'product_number'</span> =&gt; getRandomStr(<span class="number">32</span>),</span><br><span class="line"><span class="string">'pd_name'</span> =&gt; $data[<span class="string">'name'</span>],</span><br><span class="line"><span class="string">'pd_subtitle'</span> =&gt;<span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_descs'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_category_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_seller_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_brand_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'express_tpl_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'meun_id'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_weight'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_weight_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_volume'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'pd_volume_unit'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'min_price'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'market_price'</span> =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'cost_price'</span>=&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'detail_descr'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_key_word'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_remark'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_picture_prefix'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'pd_detail_info'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'detail_title'</span> =&gt; <span class="string">''</span>,</span><br><span class="line"><span class="string">'created_at'</span> =&gt; date(<span class="string">'Y-m-d H:i:s'</span>),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">$pd_detail_info = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'desc'</span>] <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$pd_detail_info .= <span class="string">'&lt;img src="'</span>.$v.<span class="string">'"&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pd_product_field[<span class="string">'pd_detail_info'</span>] = addslashes(bin2hex(gzcompress($pd_detail_info)));</span><br><span class="line">$pd_product_field[<span class="string">'pd_image_url'</span>] = implode(<span class="string">','</span>,$data[<span class="string">'img'</span>]);</span><br><span class="line">$pd_product_field[<span class="string">'pd_translation_pic'</span>] = implode(<span class="string">','</span>,$data[<span class="string">'img'</span>]);</span><br><span class="line">$pd_product_keys = <span class="string">''</span>;</span><br><span class="line">$pd_product_values = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($pd_product_field <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$pd_product_keys .= $key.<span class="string">','</span>;</span><br><span class="line">$pd_product_values .= <span class="string">"'"</span>.$value.<span class="string">"'"</span>.<span class="string">','</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pd_product_keys = trim($pd_product_keys,<span class="string">','</span>);</span><br><span class="line">$pd_product_values = trim($pd_product_values,<span class="string">','</span>);</span><br><span class="line">$inser_pd_product = <span class="string">"insert into pd_product($pd_product_keys) value($pd_product_values)"</span>;</span><br><span class="line"></span><br><span class="line">mysqli_autocommit($Db,<span class="keyword">false</span>);<span class="comment">//开启事务</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">$product_number = $pd_product_field[<span class="string">'product_number'</span>];</span><br><span class="line">$pd_product_reslut = mysqli_query($Db,$inser_pd_product);</span><br><span class="line">$product_id = mysqli_insert_id($Db);</span><br><span class="line">$pd_sku_result = <span class="number">0</span>;</span><br><span class="line">$pd_sku_properties_reslut = <span class="number">0</span>;</span><br><span class="line">$sku_unique_code = getRandomStr(<span class="number">32</span>);</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>,$data) &amp;&amp; count($data[<span class="string">'sku'</span>])&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'sku'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line"></span><br><span class="line">$property = $value[<span class="string">'sku_name'</span>];</span><br><span class="line">$pd_price = $value[<span class="string">'price'</span>];</span><br><span class="line">$sku_picture_url = $value[<span class="string">'img'</span>];</span><br><span class="line"></span><br><span class="line">$insert_pd_sku = <span class="string">"insert into pd_sku(sku_unique_code,product_number,property,sku_code,product_id) value('$sku_unique_code','$product_number','$property','',$product_id)"</span>;</span><br><span class="line">$pd_sku_result = mysqli_query($Db,$insert_pd_sku);</span><br><span class="line">$sku_id = mysqli_insert_id($Db);</span><br><span class="line"></span><br><span class="line">$insert_pd_sku_properties = <span class="string">"insert into pd_sku_properties(sku_id,sku_unique_code,product_id,product_number,sku_value,pd_price,sku_picture_url,sku_code) value($sku_id,'',$product_id,'$product_number','$property','$pd_price','$sku_picture_url','')"</span>;</span><br><span class="line">$pd_sku_properties_reslut = mysqli_query($Db,$insert_pd_sku_properties);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$pd_sku_result = <span class="number">1</span>;</span><br><span class="line">$pd_sku_properties_reslut = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($pd_product_reslut &amp;&amp; $pd_sku_result &amp;&amp; $pd_sku_properties_reslut)&#123;</span><br><span class="line">mysqli_commit($Db);<span class="comment">//提交事务</span></span><br><span class="line">$code = <span class="number">0</span>;</span><br><span class="line">$message = <span class="string">'插入成功'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mysqli_rollback($Db);<span class="comment">//回滚</span></span><br><span class="line">$code = <span class="number">1</span>;</span><br><span class="line">$message = <span class="string">'插入失败'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (\<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">mysqli_rollback($Db);<span class="comment">//回滚</span></span><br><span class="line">$code = <span class="number">1</span>;</span><br><span class="line">$message = $e-&gt;getMessage();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除本地下载的图片</span></span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'img'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'desc'</span>, $data))&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'desc'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">'sku'</span>, $data))&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($data[<span class="string">'sku'</span>] <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$arr = explode(<span class="string">'/'</span>,$value[<span class="string">'img'</span>]);</span><br><span class="line">unlink(<span class="string">'./img/'</span>.array_pop($arr));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> json_encode([</span><br><span class="line"><span class="string">'code'</span> =&gt; $code,</span><br><span class="line"><span class="string">'message'</span> =&gt; $message</span><br><span class="line">]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;引言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;之前公司有需求要做一个采集信息的工具,包括获取商品信息导入数据库,比价什么的功能,没办法只能尝试这做一下。&lt;br&gt;&amp;emsp;考虑到是做定向爬取,我就选择了jquery,因为jquery相比其他语言做爬虫是简单轻松很多。&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;不同语言自然会有不同用处。离开环境谈哪个好，哪个不好都是耍流氓。&lt;br&gt;1，如果是自己做着玩的话，定向爬几个页面，效率不是核心要求的话，问题不会大，什么语言都行的，性能差异不会大。当然，如果碰到十分复杂的页面，正则写的很复杂的话，爬虫的可维护性就会下降。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="jquery" scheme="http://www.daichongweb.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>【原创】walle配置或部署可能会遇到的小问题</title>
    <link href="http://www.daichongweb.com/walle%E9%85%8D%E7%BD%AE%E6%88%96%E9%83%A8%E7%BD%B2%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.daichongweb.com/walle配置或部署可能会遇到的小问题/</id>
    <published>2019-05-09T08:16:07.000Z</published>
    <updated>2019-06-23T05:02:37.575Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一.<b>引言</b></p></blockquote><p>&emsp;作为一个刚接触walle不久的新手,在配置和部署的过程中难免会遇到一些奇奇怪怪的问题。当然排除一些本身就对Linux什么的玩的比较好的大神。<br>&emsp;本来想多写点字凑个字数…后来想想还是算了。<br><blockquote><p>二.<b>配置时</b></p></blockquote><br>&emsp;在<font color="#ff5722">项目管理-新建项目</font>里,新增项目的时候可能会出现的问题<br>&emsp;意思是目标机最少要有一个<br><a id="more"></a><br><img src="/walle配置或部署可能会遇到的小问题/img/error.png"><br>&emsp;操作步骤<br><img src="/walle配置或部署可能会遇到的小问题/img/error1.png"><br>&emsp;正确位置<br><img src="/walle配置或部署可能会遇到的小问题/img/error2.png"><br><blockquote><p>三.<b>部署时</b></p></blockquote><br>&emsp;部署的时候可能出现这样的错误,因为啥呢？因为你在目标机上没有创建根目录<br><img src="/walle配置或部署可能会遇到的小问题/img/error4.png"><br>&emsp;就是这个<font color="#ff5722">data</font>目录,虽然他提示说会自动生成,但是没生成…倒是那个<font color="#ff5722">datar</font>能自动生成<br><img src="/walle配置或部署可能会遇到的小问题/img/error3.png"><br><blockquote><p>四.<b>访问时</b></p></blockquote><br>&emsp;访问的时候出现这个错误,就要检查一下的nginx配置是否正确<br><img src="/walle配置或部署可能会遇到的小问题/img/error6.png"><br>&emsp;看看是否缺了<font color="#ff5722">下图所示</font>,或者是端口占用、域名配置不一致的情况<br><img src="/walle配置或部署可能会遇到的小问题/img/error5.png"><br>&emsp;如果是长时间闲置的时候也会弹出一个<font color="#ff5722">后台服务未启动</font>,这个不用担心没有什么问题</p><p><font color="#ff5722">PS:其他情况在walle官网上有介绍,如502/404等错误</font><br><blockquote><p>五.<b>安全方面</b></p></blockquote><br>&emsp;官网建议把walle部署在内网,这样应该是没有什么大问题。<br>&emsp;这里的话推荐搞个双向认证,这个也是我研究好久的。<br><blockquote><p>六.<b>最后</b></p></blockquote><br>说起来用的频率不是很高,更多的问题还是需要长时间的使用才能发现,当然了本篇文章会持续的更新(在发现bug的前提下..)。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;一.&lt;b&gt;引言&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;作为一个刚接触walle不久的新手,在配置和部署的过程中难免会遇到一些奇奇怪怪的问题。当然排除一些本身就对Linux什么的玩的比较好的大神。&lt;br&gt;&amp;emsp;本来想多写点字凑个字数…后来想想还是算了。&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;二.&lt;b&gt;配置时&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;&lt;br&gt;&amp;emsp;在&lt;font color=&quot;#ff5722&quot;&gt;项目管理-新建项目&lt;/font&gt;里,新增项目的时候可能会出现的问题&lt;br&gt;&amp;emsp;意思是目标机最少要有一个&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.daichongweb.com/categories/linux/"/>
    
    
      <category term="walle" scheme="http://www.daichongweb.com/tags/walle/"/>
    
  </entry>
  
  <entry>
    <title>walle搭建项目部署系统</title>
    <link href="http://www.daichongweb.com/walle%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.daichongweb.com/walle搭建项目部署系统/</id>
    <published>2019-04-30T03:32:23.000Z</published>
    <updated>2019-06-23T05:02:37.574Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>二.<b>前言</b>-<font color="#ff5722">为什么要使用walle来管理项目</font></p></blockquote><blockquote><p>walle 让用户代码发布终于可以不只能选择 jenkins！支持各种web代码发布，php、java、python、go等代码的发布、回滚可以通过web来一键完成。walle 一个可自由配置项目，更人性化，高颜值，支持git、多用户、多语言、多项目、多环境同时部署的开源上线部署系统</p><footer><strong>引言</strong><cite><a href="http://www.walle-web.io/docs/" target="_blank" rel="noopener">来自walle官网</a></cite></footer></blockquote><p>&emsp;<font color="#ff5722">1)</font>.个人而言,walle为我提供了一个非常方便的项目管理平台,从项目开发到项目测试再到项目上线walle为整个流程提供了一套完美的解决方案。</p><p>&emsp;<font color="#ff5722">2)</font>.对公司团队而言,walle为管理者提供了一个非常好的项目管理工具。对项目质量、项目的进度、程序的安全和可靠性等等都提供了一定的保障。<br><a id="more"></a><br><blockquote><p>三.<b>正文</b>-<font color="#ff5722">walle到底能做什么</font></p></blockquote><br><img src="/walle搭建项目部署系统/img/walle.png"><br>&emsp;<font color="#ff5722">PS:</font>walle做的工作就是当你提交代码上线的时候,他会从宿主机(<font color="#ff5722">walle系统所在的机器</font>)向你配置的git地址拉取代码、打包、上传到目标机器(<font color="#ff5722">正式环境所在的机器</font>)上去、然后解压成完整的项目。</p><font color="#ff5722">问:</font>walle仅仅只能做这些工作吗？<br><font color="#ff5722">答:</font>1).当然不是啦!每次提交上线单(项目代码),walle都会保存一份在目标机上。当你新上线的程序发现了bug,这是你可以选择回滚代码(<font color="#ff5722">ai,这个就和InnoDB的事务有些相似了</font>)。<br><br>&emsp;2).相比传统的ftp和sftp部署项目,walle就更加显得安全和可靠。<br><br>&emsp;3).相比jenkins,walle是由国人开发;界面、操作更加具有亲和力。<br><br>&emsp;4).同样他具有相比jenkins相同的特性pre_deploy、post_deploy、pre_release、post_release等高级任务这对于大部分开发框架来说都是非常棒的一个功能。<br><br><font color="#ff5722">总结</font>:walle的优点并不止这些,更多的内容需要大家亲自去发现和挖掘。<br><blockquote><p>四.<b>搭建walle部署系统-<a href="http://www.walle-web.io/docs/installation.html" target="_blank" rel="noopener">官网文档</a><br></b></p></blockquote><br>&emsp;walle本身是由Python开发,但web需要使用nginx服务;所以搭建lnmp环境是比不可少的一步。<br><br>&emsp;第一步:克隆项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/meolu/walle-web.git</span><br></pre></td></tr></table></figure><br>&emsp;第二步: 配置nginx<br><figure class="highlight plain"><figcaption><span>nginx配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">upstream webservers &#123;</span><br><span class="line">    server 0.0.0.0:5000 weight=1; # 负载设置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  你的域名或ip; # 域名设置</span><br><span class="line">    access_log   /usr/local/nginx/logs/walle.log main;</span><br><span class="line">    index index.html index.htm; # 日志目录</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        root 指定到walle项目下fe目录; # 前端代码已集成到walle-web，即walle-web/fe的绝对路径</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /api/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /socket.io/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-NginX-Proxy true;</span><br><span class="line"></span><br><span class="line">        # WebScoket Support</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;第三步: 添加hosts<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"># 新增一行</span><br><span class="line">127.0.0.1  你的域名 # 与nginx配置一致</span><br></pre></td></tr></table></figure><br>&emsp;第四步: 安装Python 2.7 + pip。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">sh admin.sh init</span><br></pre></td></tr></table></figure><br>&emsp;第五步: 修改walle配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">vi walle/config/settings_prod.py</span><br><span class="line"># @TODO 是为要修改的部分</span><br><span class="line"># 服务启动 @TODO</span><br><span class="line"># HOST 修改为与 nginx server_name 一致.</span><br><span class="line"># 后续在web hooks与通知中用到此域名.</span><br><span class="line">HOST = 你的域名</span><br><span class="line">PORT = 5000</span><br><span class="line"># https True, http False</span><br><span class="line">SSL = False</span><br><span class="line"></span><br><span class="line"># 数据库设置 @TODO</span><br><span class="line">SQLALCHEMY_DATABASE_URI = &apos;mysql://user:password@localhost:3306/walle?charset=utf8&apos;</span><br><span class="line"></span><br><span class="line"># 本地代码检出路径（用户查询分支, 编译, 打包） #TODO</span><br><span class="line">CODE_BASE = 项目路径,也就是宿主机的git仓库的路径</span><br><span class="line"></span><br><span class="line"># 日志存储路径 @TODO</span><br><span class="line"># 默认为walle-web项目下logs, 可自定义路径, 需以 / 结尾</span><br><span class="line"># LOG_PATH = &apos;/var/logs/walle/&apos;</span><br><span class="line">LOG_PATH = os.path.join(Config.PROJECT_ROOT, &apos;logs&apos;)</span><br><span class="line">LOG_PATH_ERROR = os.path.join(LOG_PATH, &apos;error.log&apos;)</span><br><span class="line">LOG_PATH_INFO = os.path.join(LOG_PATH, &apos;info.log&apos;)</span><br><span class="line">LOG_FILE_MAX_BYTES = 100 * 1024 * 1024</span><br><span class="line"></span><br><span class="line"># 邮箱配置 @TODO</span><br><span class="line">MAIL_SERVER = &apos;smtp.exmail.qq.com&apos;</span><br><span class="line">MAIL_PORT = 465</span><br><span class="line">MAIL_USE_SSL = True</span><br><span class="line">MAIL_USE_TLS = False</span><br><span class="line">MAIL_DEFAULT_SENDER = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_USERNAME = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_PASSWORD = &apos;Ki9y&amp;3U82&apos;</span><br></pre></td></tr></table></figure><br>&emsp;第六步: 初始化项目。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">mysql  -hxx -uxx -p -e&apos;CREATE SCHEMA walle&apos;</span><br><span class="line"># Data Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>&emsp;第七步: 启动walle。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">sh admin.sh start</span><br><span class="line"># 重启</span><br><span class="line">sh admin.sh restart </span><br><span class="line"># 升级</span><br><span class="line">sh admin.sh upgrade</span><br><span class="line"># Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>最后访问你的域名就可以访问了！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">超管：super@walle-web.io \ Walle123</span><br><span class="line">所有者：owner@walle-web.io \ Walle123</span><br><span class="line">负责人：master@walle-web.io \ Walle123</span><br><span class="line">开发者：developer@walle-web.io \ Walle123</span><br><span class="line">访客：reporter@walle-web.io \ Walle123</span><br></pre></td></tr></table></figure><br><font color="#ff5722">PS:下篇文章将会介绍如何配置项目、项目配置中可能会遇到的问题及解决办法、上线项目要注意的事项</font>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;二.&lt;b&gt;前言&lt;/b&gt;-&lt;font color=&quot;#ff5722&quot;&gt;为什么要使用walle来管理项目&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;walle 让用户代码发布终于可以不只能选择 jenkins！支持各种web代码发布，php、java、python、go等代码的发布、回滚可以通过web来一键完成。walle 一个可自由配置项目，更人性化，高颜值，支持git、多用户、多语言、多项目、多环境同时部署的开源上线部署系统&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://www.walle-web.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来自walle官网&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;&lt;font color=&quot;#ff5722&quot;&gt;1)&lt;/font&gt;.个人而言,walle为我提供了一个非常方便的项目管理平台,从项目开发到项目测试再到项目上线walle为整个流程提供了一套完美的解决方案。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&lt;font color=&quot;#ff5722&quot;&gt;2)&lt;/font&gt;.对公司团队而言,walle为管理者提供了一个非常好的项目管理工具。对项目质量、项目的进度、程序的安全和可靠性等等都提供了一定的保障。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="liunx" scheme="http://www.daichongweb.com/categories/liunx/"/>
    
    
      <category term="walle" scheme="http://www.daichongweb.com/tags/walle/"/>
    
  </entry>
  
  <entry>
    <title>walle项目部署系统搭建</title>
    <link href="http://www.daichongweb.com/walle%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.daichongweb.com/walle项目部署系统搭建/</id>
    <published>2019-04-30T03:32:23.000Z</published>
    <updated>2019-06-23T05:02:37.578Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>二.<b>前言</b>-<font color="#ff5722">为什么要使用walle来管理项目</font></p></blockquote><blockquote><p>walle 让用户代码发布终于可以不只能选择 jenkins！支持各种web代码发布，php、java、python、go等代码的发布、回滚可以通过web来一键完成。walle 一个可自由配置项目，更人性化，高颜值，支持git、多用户、多语言、多项目、多环境同时部署的开源上线部署系统</p><footer><strong>引言</strong><cite><a href="http://www.walle-web.io/docs/" target="_blank" rel="noopener">来自walle官网</a></cite></footer></blockquote><p>&emsp;<font color="#ff5722">1)</font>.个人而言,walle为我提供了一个非常方便的项目管理平台,从项目开发到项目测试再到项目上线walle为整个流程提供了一套完美的解决方案。</p><p>&emsp;<font color="#ff5722">2)</font>.对公司团队而言,walle为管理者提供了一个非常好的项目管理工具。对项目质量、项目的进度、程序的安全和可靠性等等都提供了一定的保障。<br><a id="more"></a><br><blockquote><p>三.<b>正文</b>-<font color="#ff5722">walle到底能做什么</font></p></blockquote><br><img src="/walle项目部署系统搭建/img/walle.png"><br>&emsp;<font color="#ff5722">PS:</font>walle做的工作就是当你提交代码上线的时候,他会从宿主机(<font color="#ff5722">walle系统所在的机器</font>)向你配置的git地址拉取代码、打包、上传到目标机器(<font color="#ff5722">正式环境所在的机器</font>)上去、然后解压成完整的项目。</p><font color="#ff5722">问:</font>walle仅仅只能做这些工作吗？<br><font color="#ff5722">答:</font>1).当然不是啦!每次提交上线单(项目代码),walle都会保存一份在目标机上。当你新上线的程序发现了bug,这是你可以选择回滚代码(<font color="#ff5722">ai,这个就和InnoDB的事务有些相似了</font>)。<br><br>&emsp;2).相比传统的ftp和sftp部署项目,walle就更加显得安全和可靠。<br><br>&emsp;3).相比jenkins,walle是由国人开发;界面、操作更加具有亲和力。<br><br>&emsp;4).同样他具有相比jenkins相同的特性pre_deploy、post_deploy、pre_release、post_release等高级任务这对于大部分开发框架来说都是非常棒的一个功能。<br><br><font color="#ff5722">总结</font>:walle的优点并不止这些,更多的内容需要大家亲自去发现和挖掘。<br><blockquote><p>四.<b>搭建walle部署系统-<a href="http://www.walle-web.io/docs/installation.html" target="_blank" rel="noopener">官网文档</a><br></b></p></blockquote><br>&emsp;walle本身是由Python开发,但web需要使用nginx服务;所以搭建lnmp环境是比不可少的一步。<br><br>&emsp;第一步:克隆项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/meolu/walle-web.git</span><br></pre></td></tr></table></figure><br>&emsp;第二步: 配置nginx<br><figure class="highlight plain"><figcaption><span>nginx配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">upstream webservers &#123;</span><br><span class="line">    server 0.0.0.0:5000 weight=1; # 负载设置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  你的域名或ip; # 域名设置</span><br><span class="line">    access_log   /usr/local/nginx/logs/walle.log main;</span><br><span class="line">    index index.html index.htm; # 日志目录</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        root 指定到walle项目下fe目录; # 前端代码已集成到walle-web，即walle-web/fe的绝对路径</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /api/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /socket.io/ &#123;</span><br><span class="line">        add_header access-control-allow-origin *;</span><br><span class="line">        proxy_pass      http://webservers;</span><br><span class="line">        proxy_set_header X-Forwarded-Host $host:$server_port;</span><br><span class="line">        proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class="line">        proxy_set_header    Origin        $host:$server_port;</span><br><span class="line">        proxy_set_header    Referer       $host:$server_port;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-NginX-Proxy true;</span><br><span class="line"></span><br><span class="line">        # WebScoket Support</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&emsp;第三步: 添加hosts<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"># 新增一行</span><br><span class="line">127.0.0.1  你的域名 # 与nginx配置一致</span><br></pre></td></tr></table></figure><br>&emsp;第四步: 安装Python 2.7 + pip。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">sh admin.sh init</span><br></pre></td></tr></table></figure><br>&emsp;第五步: 修改walle配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 切换到walle-web根目录下操作</span><br><span class="line">vi walle/config/settings_prod.py</span><br><span class="line"># @TODO 是为要修改的部分</span><br><span class="line"># 服务启动 @TODO</span><br><span class="line"># HOST 修改为与 nginx server_name 一致.</span><br><span class="line"># 后续在web hooks与通知中用到此域名.</span><br><span class="line">HOST = 你的域名</span><br><span class="line">PORT = 5000</span><br><span class="line"># https True, http False</span><br><span class="line">SSL = False</span><br><span class="line"></span><br><span class="line"># 数据库设置 @TODO</span><br><span class="line">SQLALCHEMY_DATABASE_URI = &apos;mysql://user:password@localhost:3306/walle?charset=utf8&apos;</span><br><span class="line"></span><br><span class="line"># 本地代码检出路径（用户查询分支, 编译, 打包） #TODO</span><br><span class="line">CODE_BASE = 项目路径,也就是宿主机的git仓库的路径</span><br><span class="line"></span><br><span class="line"># 日志存储路径 @TODO</span><br><span class="line"># 默认为walle-web项目下logs, 可自定义路径, 需以 / 结尾</span><br><span class="line"># LOG_PATH = &apos;/var/logs/walle/&apos;</span><br><span class="line">LOG_PATH = os.path.join(Config.PROJECT_ROOT, &apos;logs&apos;)</span><br><span class="line">LOG_PATH_ERROR = os.path.join(LOG_PATH, &apos;error.log&apos;)</span><br><span class="line">LOG_PATH_INFO = os.path.join(LOG_PATH, &apos;info.log&apos;)</span><br><span class="line">LOG_FILE_MAX_BYTES = 100 * 1024 * 1024</span><br><span class="line"></span><br><span class="line"># 邮箱配置 @TODO</span><br><span class="line">MAIL_SERVER = &apos;smtp.exmail.qq.com&apos;</span><br><span class="line">MAIL_PORT = 465</span><br><span class="line">MAIL_USE_SSL = True</span><br><span class="line">MAIL_USE_TLS = False</span><br><span class="line">MAIL_DEFAULT_SENDER = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_USERNAME = &apos;service@walle-web.io&apos;</span><br><span class="line">MAIL_PASSWORD = &apos;Ki9y&amp;3U82&apos;</span><br></pre></td></tr></table></figure><br>&emsp;第六步: 初始化项目。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">mysql  -hxx -uxx -p -e&apos;CREATE SCHEMA walle&apos;</span><br><span class="line"># Data Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>&emsp;第七步: 启动walle。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">sh admin.sh start</span><br><span class="line"># 重启</span><br><span class="line">sh admin.sh restart </span><br><span class="line"># 升级</span><br><span class="line">sh admin.sh upgrade</span><br><span class="line"># Migration</span><br><span class="line">sh admin.sh migration</span><br></pre></td></tr></table></figure><br>最后访问你的域名就可以访问了！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">超管：super@walle-web.io \ Walle123</span><br><span class="line">所有者：owner@walle-web.io \ Walle123</span><br><span class="line">负责人：master@walle-web.io \ Walle123</span><br><span class="line">开发者：developer@walle-web.io \ Walle123</span><br><span class="line">访客：reporter@walle-web.io \ Walle123</span><br></pre></td></tr></table></figure><br><font color="#ff5722">PS:下篇文章将会介绍如何配置项目、项目配置中可能会遇到的问题及解决办法、上线项目要注意的事项</font>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;二.&lt;b&gt;前言&lt;/b&gt;-&lt;font color=&quot;#ff5722&quot;&gt;为什么要使用walle来管理项目&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;walle 让用户代码发布终于可以不只能选择 jenkins！支持各种web代码发布，php、java、python、go等代码的发布、回滚可以通过web来一键完成。walle 一个可自由配置项目，更人性化，高颜值，支持git、多用户、多语言、多项目、多环境同时部署的开源上线部署系统&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://www.walle-web.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;来自walle官网&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;emsp;&lt;font color=&quot;#ff5722&quot;&gt;1)&lt;/font&gt;.个人而言,walle为我提供了一个非常方便的项目管理平台,从项目开发到项目测试再到项目上线walle为整个流程提供了一套完美的解决方案。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&lt;font color=&quot;#ff5722&quot;&gt;2)&lt;/font&gt;.对公司团队而言,walle为管理者提供了一个非常好的项目管理工具。对项目质量、项目的进度、程序的安全和可靠性等等都提供了一定的保障。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.daichongweb.com/categories/linux/"/>
    
    
      <category term="walle" scheme="http://www.daichongweb.com/tags/walle/"/>
    
  </entry>
  
  <entry>
    <title>【原创】hexo+github+coding搭建博客(绑定多域名)</title>
    <link href="http://www.daichongweb.com/hexo-github-coding%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-%E7%BB%91%E5%AE%9A%E5%A4%9A%E5%9F%9F%E5%90%8D/"/>
    <id>http://www.daichongweb.com/hexo-github-coding搭建博客-绑定多域名/</id>
    <published>2019-04-22T09:46:21.000Z</published>
    <updated>2019-06-23T05:02:37.563Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;一.最近服务器快到期了,也突然想起之前有个网友问我怎么用hexo+github搭建个人博客,好多天没有回他,心里也总是过意不去。不论他有没有解决这个问题,现在也需要补发一篇关于hexo+github+coding搭建个人博客的文章了。</p><p>&emsp;二.也希望通过这篇博客,能让更多正处于初期阶段的同学顺利的搭建属于自己的博客;也同样适合没有编程经验的同学来亲手感觉一下编程的乐趣！<br><a id="more"></a><br>&emsp;三.相比使用个人服务器搭建而言利用github或coding搭建博客更加省事省力又省钱,最便宜的服务器一年也需要一千左右的租赁费,而使用github、coding、码云等搭建是完全免费的,并且不用部署服务器环境,也不用担心证书的问题。<br><blockquote><p>第一步:hexo本地环境的搭建</p></blockquote><br><a>ps:这里因为hexo官网有教程,我就不一一介绍了,简单介绍一下搭建流程</a></p><a>hexo本地搭建流程:</a><p>&emsp;&emsp;1).安装git<br>&emsp;&emsp;2).安装nodejs<br>&emsp;&emsp;3).安装hexo</p><a>参数配置</a><p>1).首先是根目录下<a>_config.yml</a>文件的配置。<br>&emsp;&emsp;1.配置导航和博客基本信息。<br>&emsp;&emsp;2.配置部署地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#文章生成配置</span><br><span class="line">#permalink: :year/:month/:day/:title/ </span><br><span class="line">//文章路径 原有的路径为‘daihongweb.com/2019/04/22/hexo+github+coding搭建博客(绑定多域名)’</span><br><span class="line">permalink: :title/ </span><br><span class="line">//文章路径 改为路径为‘daihongweb.com/hexo+github+coding搭建博客(绑定多域名)’ 有利于seo优化</span><br><span class="line">permalink_defaults:</span><br><span class="line">#代码部署配置</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">      coding: coding仓库地址,master,//master是代码分支</span><br><span class="line">      github: github仓库地址,master,</span><br></pre></td></tr></table></figure><br><a>ps:这里建议大家再本地把一切搞好之后再添部署地址，或者在本地测试的时候不要使用 hexo d 命令</a><br><blockquote><p>第二步:搭建远程仓库</p></blockquote><br>1).coding建立git仓库<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/add.png"><br>2).获取git地址<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/address.png" class="结果"><br><a>ps:这里建议大家使用https,使用ssh需要秘钥什么的比较麻烦</a><br>3).github建立git仓库<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_add.png"><br>4).获取git地址<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_address.png"><br><blockquote><p>第三步:部署项目</p></blockquote><br><a>ps:部署的时候可能会弹出要求登录的输入框,这个第一次部署的时候输入一次,之后就不需要再输入了</a><br>1).项目中执行<br><figure class="highlight plain"><figcaption><span>部署项目</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><br><a>ps:当你访问博客的时候你会发现文章内所有的图片都加载不出来,解决办法如下</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#项目根目录下_config.yml</span><br><span class="line">external_link: true</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: true</span><br><span class="line">future: true</span><br></pre></td></tr></table></figure><br><a>ps:修改之后把图片移入文章名称对应的文件夹下的img文件夹下;修改文章中引入的路径;在重新执行上边的命令就ok了</a><br><blockquote><p>第四步:开启pages服务</p></blockquote><br>1).coding开启pages服务<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/coding_start.png"><br><img src="/hexo-github-coding搭建博客-绑定多域名/img/coding_show.png"><br><a>ps:coding开启之后它会自动部署一次,点击自动分配的域名地址查看是否有问题</a></p><p>2).github开始pages服务<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_start.png"><br>在下面可以找到：<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/github_show.png"><br>显示成这样就说明部署成功了！<br><blockquote><p>第五步:绑定个人域名，并实现多域名绑定</p></blockquote><br>首先你需要购买一个域名并且已备案。<br>1).添加解析<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/dns.png"><br><a>ps:我这里是用的阿里云的,记录类型为CNAME,记录值为你github或coding的地址;所有的服务商解析都是一样的！</a><br>2).对应的github绑定个人域名<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/bind_github.png"><br><a>ps:下面勾选的是开始https,记得勾选上;之后会提示你开始失败什么的,不用担心。稍等1小时再去刷新就好了！</a><br>3).coding绑定个人域名<br><img src="/hexo-github-coding搭建博客-绑定多域名/img/bind_coding.png"><br><a>ps:绑定之后点击申请,有的时候会出现错误,暂时还没有找到解决的办法;添加绑定之后记得点击上边的部署！</a></p><blockquote><p>总结:问题来了,到底是怎么实现绑定多个域名的？啊哈哈,其实就是利用多个pages服务;例如现有2个域名,那么一个域名绑定coding,一个域名绑定github;并且还可以实现国外的访问分配到github上,国内的访问分配到coding上来提升访问速度！</p><footer><strong>Daichongweb.blog</strong></footer></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;一.最近服务器快到期了,也突然想起之前有个网友问我怎么用hexo+github搭建个人博客,好多天没有回他,心里也总是过意不去。不论他有没有解决这个问题,现在也需要补发一篇关于hexo+github+coding搭建个人博客的文章了。&lt;/p&gt;
&lt;p&gt;&amp;emsp;二.也希望通过这篇博客,能让更多正处于初期阶段的同学顺利的搭建属于自己的博客;也同样适合没有编程经验的同学来亲手感觉一下编程的乐趣！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.daichongweb.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.daichongweb.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>composer 报错php_pdo_firebird.dll找不到指定模块</title>
    <link href="http://www.daichongweb.com/composer-%E6%8A%A5%E9%94%99php-pdo-firebird-dll%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97/"/>
    <id>http://www.daichongweb.com/composer-报错php-pdo-firebird-dll找不到指定模块/</id>
    <published>2019-04-04T03:57:30.000Z</published>
    <updated>2019-06-23T05:02:37.563Z</updated>
    
    <content type="html"><![CDATA[<p>自从把php版本切换到7.0后，一旦使用composer就会出现php_pdo_firebird.dll找不到指定模块的错误，而且还不止这一个。百度查过很多资料最后都是没有解决，最后受到一篇博客的启发，尝试在php环境里卸载掉这些扩展，最后，，居然解决了？？<br><a id="more"></a><br>实际的原因是因为在PHP7中已经不再支持使用ext/mysql这个扩展了,把不支持的扩展直接给卸载掉就ok了。<br><blockquote><p>错误信息：</p></blockquote><br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/pdo.png" class="报错"><br><blockquote><p>修改方法：</p></blockquote><br>根据实际情况而定，我用的是phpstudy<br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/save.png" class="修改扩展"><br><blockquote><p>结果：</p></blockquote><br><img src="/composer-报错php-pdo-firebird-dll找不到指定模块/img/composer.png" class="结果"></p><p>最后又试了几次，发现只要是报错什么模块找不到，就直接卸载。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从把php版本切换到7.0后，一旦使用composer就会出现php_pdo_firebird.dll找不到指定模块的错误，而且还不止这一个。百度查过很多资料最后都是没有解决，最后受到一篇博客的启发，尝试在php环境里卸载掉这些扩展，最后，，居然解决了？？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="php扩展类" scheme="http://www.daichongweb.com/categories/php%E6%89%A9%E5%B1%95%E7%B1%BB/"/>
    
    
      <category term="composer" scheme="http://www.daichongweb.com/tags/composer/"/>
    
  </entry>
  
  <entry>
    <title>sublime text3 不能安装插件</title>
    <link href="http://www.daichongweb.com/sublime-text3-%E4%B8%8D%E8%83%BD%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.daichongweb.com/sublime-text3-不能安装插件/</id>
    <published>2019-03-13T05:38:18.000Z</published>
    <updated>2019-06-23T05:02:37.574Z</updated>
    
    <content type="html"><![CDATA[<p>用sublime的小伙伴会发现最近用Package Control安装插件的时候总会提示请前往一个地址寻求帮助的一句话。我在百度上也了解了一下，大多都说是被墙了或者是版本的问题，真实的原因还不知道是那个，不管了反正能解决就行。</p><p>解决方案：<br><a id="more"></a><br><blockquote><p>第一步：下载channel_v3.json文件到本地</p></blockquote><br>文件地址：<br><a>channe_v3.json /img/channel_v3.json</a></p><blockquote><p>第二步：修改配置</p></blockquote><p>找到：<br><img src="/sublime-text3-不能安装插件/img/sublime.png" class="配置方法"><br>打开内容<br><img src="/sublime-text3-不能安装插件/img/sublime1.png" class="文件内容"><br>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;channels&quot;:</span><br><span class="line">[</span><br><span class="line">&quot;D:/PHPTutorial/channel_v3.json&quot;//文件的地址</span><br><span class="line">],</span><br></pre></td></tr></table></figure><br>最后关闭sublime重启，ctrl+shift+p 找个插件试试果然可以了！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用sublime的小伙伴会发现最近用Package Control安装插件的时候总会提示请前往一个地址寻求帮助的一句话。我在百度上也了解了一下，大多都说是被墙了或者是版本的问题，真实的原因还不知道是那个，不管了反正能解决就行。&lt;/p&gt;
&lt;p&gt;解决方案：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://www.daichongweb.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="sublime" scheme="http://www.daichongweb.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>sublime Text3自动格式化php代码</title>
    <link href="http://www.daichongweb.com/sublime-Text3%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96php%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.daichongweb.com/sublime-Text3自动格式化php代码/</id>
    <published>2019-03-07T03:21:09.000Z</published>
    <updated>2019-06-23T05:02:37.574Z</updated>
    
    <content type="html"><![CDATA[<p>sublime text3很小的一个代码开发工具，但功能却很强大。开发者可安装各种插件帮助开发，提升代码质量和开发效率，相比一些HD或pS的开发工具，个人还是比较喜欢sublime。</p><p>这篇文章主要讲sublime中自动格式化php代码的插件介绍和安装配置。<br><a id="more"></a><br>首先下载插件<a href="https://github.com/nanch/phpfmt_stable" target="_blank" rel="noopener">phpfmt</a></p><p>下载之后把文件名改为phpfmt放入：首选项-》浏览插件目录中。重启sublime。</p><p>第二步：选择首选项-》package Settings-》phpfmt-》settings-Default 点击</p><p>第三步：配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;version&quot;: 4,</span><br><span class="line">&quot;php_bin&quot;:&quot;D:/PHPTutorial/php/php-7.2.1-nts/php.exe&quot;,//你的php安装路径</span><br><span class="line">&quot;format_on_save&quot;:true,</span><br><span class="line">&quot;option&quot;: &quot;value&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存之后重启，按ctrl+s就会自动格式化了，然后格式化的还是不美观。</p><p>那么下一步选择PSR2，按住ctrl+shift+p，输入phpfmt: toggle PSR2 回车，在测试你就会发现格式漂亮了许多。</p><p>注意：ctrl+shift+p无法使用是需要安装package Control 百度搜一下教程，这里就不一一介绍了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sublime text3很小的一个代码开发工具，但功能却很强大。开发者可安装各种插件帮助开发，提升代码质量和开发效率，相比一些HD或pS的开发工具，个人还是比较喜欢sublime。&lt;/p&gt;
&lt;p&gt;这篇文章主要讲sublime中自动格式化php代码的插件介绍和安装配置。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://www.daichongweb.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="sublime" scheme="http://www.daichongweb.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>mysql把字段的值用逗号连接成字符串</title>
    <link href="http://www.daichongweb.com/mysql%E6%8A%8A%E5%AD%97%E6%AE%B5%E7%9A%84%E5%80%BC%E7%94%A8%E9%80%97%E5%8F%B7%E8%BF%9E%E6%8E%A5%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://www.daichongweb.com/mysql把字段的值用逗号连接成字符串/</id>
    <published>2019-03-01T07:14:47.000Z</published>
    <updated>2019-06-23T05:02:37.568Z</updated>
    
    <content type="html"><![CDATA[<p>两张多对多关系的表进行数据关联查询，有两种常见的写法(我只知道两种,嘿嘿)：<br>(1) 从主表中查出来所关联的字段，例如order_id，然后循环数组将order_id用逗号隔开；副表进行in查询（当然这种写法比较low,新手使用的比较多）</p><p>(2) 使用leftJoin关联，左边为主表<br>以上仅举例</p><p>有些情况下只能使用先查再in的写法，那么怎么简化它呢(就不想先查再循环连接)？</p><p>那么一个mysql的函数就能使用上了，他就是<a>GROUP_CONCAT()</a>.这个函数就是把某个字段的值用字符串连接成<a>A,B,C</a>这样的格式<br><a id="more"></a><br>用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP_CONCAT(字段) </span><br></pre></td></tr></table></figure><br>去重时用法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP_CONCAT(DISTINCT(字段))</span><br></pre></td></tr></table></figure><br>执行查询语句之后就会得到这个字段用逗号隔开的值</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两张多对多关系的表进行数据关联查询，有两种常见的写法(我只知道两种,嘿嘿)：&lt;br&gt;(1) 从主表中查出来所关联的字段，例如order_id，然后循环数组将order_id用逗号隔开；副表进行in查询（当然这种写法比较low,新手使用的比较多）&lt;/p&gt;
&lt;p&gt;(2) 使用leftJoin关联，左边为主表&lt;br&gt;以上仅举例&lt;/p&gt;
&lt;p&gt;有些情况下只能使用先查再in的写法，那么怎么简化它呢(就不想先查再循环连接)？&lt;/p&gt;
&lt;p&gt;那么一个mysql的函数就能使用上了，他就是&lt;a&gt;GROUP_CONCAT()&lt;/a&gt;.这个函数就是把某个字段的值用字符串连接成&lt;a&gt;A,B,C&lt;/a&gt;这样的格式&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://www.daichongweb.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://www.daichongweb.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>phpExcel分析复杂表格数据(远程文件)</title>
    <link href="http://www.daichongweb.com/phpExcel%E5%88%86%E6%9E%90%E5%A4%8D%E6%9D%82%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE-%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6/"/>
    <id>http://www.daichongweb.com/phpExcel分析复杂表格数据-远程文件/</id>
    <published>2019-02-26T10:17:30.000Z</published>
    <updated>2019-06-23T05:02:37.568Z</updated>
    
    <content type="html"><![CDATA[<p>phpExcel是一个专门操作数据表格的类，他可以导入、导出excel表格中的数据，简单、漂亮，非常适合导入、导出、分析数据来使用。</p><p>以下代码主要为了实现从阿里OSS上获取数据表格，并分析表格数据导入数据库，唯一不同的是这个表格是不规则，分析数据的话相对来数复杂了一些，废话不多少，下面直接介绍如何处理这种复杂的表格：<br><a id="more"></a><br><blockquote><p>第一步：分析表格</p></blockquote><br><img src="/phpExcel分析复杂表格数据-远程文件/img/1.png"><br>经过处理，把这个底色为白色的表格处理成正常的形式<br><img src="/phpExcel分析复杂表格数据-远程文件/img/2.png"><br>经过处理可以发现，这个表格的数据是有规律的。<br>坐标B6是账号，C6是房号，D6是房类，一次类推，每行不同的数据都是由不同字母和数字的组合。</p><p>特殊的一点就是房价在行数据的下一行，通过观察可以发现，每行的真实数据的列坐标是偶数，相对应的房价都是在奇数上，这样一分析就可以找到方法分析数据了。</p><blockquote><p>第二步：实现代码</p></blockquote><figure class="highlight php"><figcaption><span>实现代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">'../excel/Classes/PHPExcel/IOFactory.php'</span>);<span class="comment">//静态</span></span><br><span class="line">file_put_contents(<span class="string">'abc.xls'</span>,file_get_contents(<span class="string">'https://www.baidu.com/20190226/caf55125b3f510b9242235bfa7f06212.xls'</span>));</span><br><span class="line"></span><br><span class="line">$filePath = <span class="string">'abc.xls'</span>;</span><br><span class="line">$fileType = PHPExcel_IOFactory::identify($filePath);<span class="comment">//检测文件类型</span></span><br><span class="line">$fileRead = PHPExcel_IOFactory::createReader($fileType);<span class="comment">//读取文件</span></span><br><span class="line">$excelObj = $fileRead-&gt;load($filePath);</span><br><span class="line">$sheet = $excelObj-&gt;getActiveSheet();</span><br><span class="line">$highestRow = $sheet-&gt;getHighestRow();<span class="comment">//行数</span></span><br><span class="line">$highestColumn = $sheet-&gt;getHighestColumn();<span class="comment">//列数</span></span><br><span class="line"></span><br><span class="line">$dataSet = <span class="keyword">array</span>();<span class="comment">//数据</span></span><br><span class="line"><span class="comment">//这里是从第6行开始，因为上5行都是空的，直接过滤</span></span><br><span class="line"><span class="keyword">for</span>($row = <span class="number">6</span>;$row&lt;=$highestRow<span class="number">-4</span>;$row++)&#123;</span><br><span class="line">    $dataSet[$row] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//列从B开始A也是空的</span></span><br><span class="line"><span class="keyword">for</span>($column=<span class="string">"B"</span>;$column&lt;=$highestColumn;$column++)&#123;</span><br><span class="line"><span class="comment">//如果列坐标是F(房价) and 是奇数行，说明已经到房价那一行了</span></span><br><span class="line"><span class="keyword">if</span>($column==<span class="string">'F'</span> &amp;&amp; $row%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//列坐标是F 行坐标7 7-1 就是上一行,这里的意思就是上一行的F里的值等于下一行的F的值</span></span><br><span class="line">$dataSet[$row<span class="number">-1</span>][$column] = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//如果列坐标是L和N说明是时间</span></span><br><span class="line"><span class="keyword">if</span>($column ==<span class="string">'L'</span> || $column == <span class="string">'N'</span>)&#123;</span><br><span class="line">$time = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line"><span class="comment">//转化时间</span></span><br><span class="line">$dataSet[$row][$column] = date(<span class="string">'Y-m-d H:i:s'</span>,PHPExcel_Shared_Date::ExcelToPHP($time));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$dataSet[$row][$column] = $sheet-&gt;getCell($column.$row)-&gt;getValue();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除已经合并过的奇数行</span></span><br><span class="line"><span class="keyword">if</span>($row%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">unset</span>($dataSet[$row]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//删除空数组</span></span><br><span class="line">$dataSet[$row] = array_filter($dataSet[$row]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($dataSet);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>第三步：查看结果</p></blockquote><figure class="highlight php"><figcaption><span>打印数据</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">6</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">233756</span></span><br><span class="line">            [C] =&gt; <span class="number">1</span>AC65</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-04</span> <span class="number">12</span>:<span class="number">42</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">400</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">8</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">233758</span></span><br><span class="line">            [C] =&gt; <span class="number">1</span>BC65</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">48</span>+<span class="number">456</span>+<span class="number">844654654</span></span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-04</span> <span class="number">12</span>:<span class="number">44</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-06</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">400</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">10</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">241572</span></span><br><span class="line">            [C] =&gt; E55b</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-16</span> <span class="number">09</span>:<span class="number">40</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-03</span><span class="number">-30</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">12</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246484</span></span><br><span class="line">            [C] =&gt; <span class="number">2</span>AC52</span><br><span class="line">            [D] =&gt; YGTYF</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">476</span>+<span class="number">5456456156415641</span></span><br><span class="line">            [I] =&gt; 博客</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">23</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-27</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">362</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">14</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246485</span></span><br><span class="line">            [C] =&gt; <span class="number">2</span>BC52</span><br><span class="line">            [D] =&gt; YGTYF</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">415645156</span></span><br><span class="line">            [I] =&gt; 博客</span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">24</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-27</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [F] =&gt; <span class="number">362</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">16</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [B] =&gt; <span class="number">246486</span></span><br><span class="line">            [C] =&gt; D86a</span><br><span class="line">            [D] =&gt; DDYG</span><br><span class="line">            [G] =&gt; 戴</span><br><span class="line">            [H] =&gt; <span class="number">156</span>+<span class="number">1112</span></span><br><span class="line">            [L] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-25</span> <span class="number">17</span>:<span class="number">25</span>:<span class="number">00</span></span><br><span class="line">            [N] =&gt; <span class="number">2019</span><span class="number">-02</span><span class="number">-28</span> <span class="number">12</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">            [P] =&gt; 业主自主</span><br><span class="line">            [F] =&gt; <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>很完美，如有其它需要可根据代码调整。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phpExcel是一个专门操作数据表格的类，他可以导入、导出excel表格中的数据，简单、漂亮，非常适合导入、导出、分析数据来使用。&lt;/p&gt;
&lt;p&gt;以下代码主要为了实现从阿里OSS上获取数据表格，并分析表格数据导入数据库，唯一不同的是这个表格是不规则，分析数据的话相对来数复杂了一些，废话不多少，下面直接介绍如何处理这种复杂的表格：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="php扩展类" scheme="http://www.daichongweb.com/categories/php%E6%89%A9%E5%B1%95%E7%B1%BB/"/>
    
    
      <category term="phpExcel" scheme="http://www.daichongweb.com/tags/phpExcel/"/>
    
  </entry>
  
  <entry>
    <title>larveral小程序模板消息发送</title>
    <link href="http://www.daichongweb.com/larveral%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81/"/>
    <id>http://www.daichongweb.com/larveral小程序模板消息发送/</id>
    <published>2019-02-20T04:59:39.000Z</published>
    <updated>2019-06-23T05:02:37.567Z</updated>
    
    <content type="html"><![CDATA[<p>今天来一篇larveral5.5的小程序模板消息发送示例，总感觉用larveral框架写的代码逼格高了很多，奇怪！！</p><p>1.小程序向用户发送模板消息分为两步：<br>    第一步：用户在小程序上进行表单操作(例如提交表单),此时前端要获取到form_id传递给后端<br>    第二步：后端接收到from_id，再查询用户的openid，按照微信文档的数据格式进行发送<br>2.发送之前有一下几个前提:<br>    第一:微信小程序以开通了消息服务<br>    第二:微信小程序以配置了模板消息<br>    第三:发送的数据内容必须和微信小程序配置的模板消息一致<br>    第四:获取到正确的用户openid<br>    第五:获取到未过期的微信access_token<br><a id="more"></a><br><blockquote><p>首先是发送示例:</p></blockquote></p><figure class="highlight php"><figcaption><span>php代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * seedTempMessage 发送模板消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> DaiChong</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@DateTime</span> 2019-01-04</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>    array      $seedData    需要发送的数据 格式为(key=&gt;value)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>    string     $tempKey     tempkey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>   json</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">seedTempMessage</span><span class="params">($seedData,$tempKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="keyword">empty</span>($seedData) )&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'请传输数据(格式为Array)！'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送模板消息地址</span></span><br><span class="line">        $postUrl = config(<span class="string">"company.seedTempMeg"</span>);</span><br><span class="line">        <span class="keyword">if</span>( $postUrl == <span class="keyword">false</span> )&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'未定义微信模板消息地址(seedTempMeg)！'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($tempKey)&#123;</span><br><span class="line">            <span class="comment">//查询消息模板内容</span></span><br><span class="line">            $temp = \App\Models\WechatMessageModel::where(<span class="string">'temp_key'</span>,$tempKey)-&gt;first()-&gt;toArray();</span><br><span class="line">            <span class="keyword">if</span>( <span class="keyword">empty</span>($temp) )&#123;</span><br><span class="line">                <span class="keyword">self</span>::seedError(<span class="string">'未添加此模板!'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $seedData[<span class="string">'template_id'</span>] = $temp[<span class="string">'temp_id'</span>];</span><br><span class="line">            $temp_context = $temp[<span class="string">'context'</span>];</span><br><span class="line">            $temp_json = vsprintf($temp_context,$seedData);<span class="comment">//替换数据</span></span><br><span class="line"></span><br><span class="line">            $temp_array = json_decode($temp_json,<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">//获取AccessToken</span></span><br><span class="line">            $accessToken = <span class="keyword">self</span>::getAccessToken();</span><br><span class="line">            $postUrl = str_replace(<span class="string">'ACCESS_TOKEN'</span>, $accessToken, $postUrl);</span><br><span class="line">            $curl = <span class="keyword">new</span> \JSocket();</span><br><span class="line">            $curl-&gt;setUrl($postUrl);</span><br><span class="line">            $curl-&gt;setRetFormat(\JSocket::retFormatText);</span><br><span class="line">            <span class="keyword">foreach</span> ($temp_array <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                $curl-&gt;setParam($key,$value);</span><br><span class="line">            &#125;</span><br><span class="line">            $curl-&gt;setTimeout(<span class="number">30</span>);</span><br><span class="line">            $curl-&gt;setHeader(<span class="string">"Content-Type:application/json"</span>);</span><br><span class="line">            $curl-&gt;setRequestType(\JSocket::retFormatJson);</span><br><span class="line">            $curl-&gt;setMethod(\JSocket::methodPost);</span><br><span class="line">            $curl-&gt;exe();</span><br><span class="line">            $result = $curl-&gt;getRet();</span><br><span class="line">            <span class="keyword">self</span>::seedError($result);</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>::seedError(<span class="string">'未传入模板Key(tempKey)!'</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取微信AccessToken 我这里已经做了access_token处理，具体细节按照微信文档进行操作或评论</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccessToken</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $access_token = \App\Data\WxAccessTokenData::info();</span><br><span class="line">        <span class="keyword">if</span> ($access_token)&#123;</span><br><span class="line">            <span class="keyword">return</span> $access_token;</span><br><span class="line">        &#125;</span><br><span class="line">        $getAccessTokenUrl = config(<span class="string">"company.getAccessToken"</span>);</span><br><span class="line">        $getAccessTokenUrl = str_replace([<span class="string">"APPID"</span>,<span class="string">"APPSECRET"</span>],[config(<span class="string">"company.appid"</span>),config(<span class="string">"company.appsecret"</span>)],$getAccessTokenUrl);</span><br><span class="line">        $curl = <span class="keyword">new</span> \JSocket();</span><br><span class="line">        $curl-&gt;setUrl($getAccessTokenUrl);</span><br><span class="line">        $curl-&gt;setRetFormat(\JSocket::retFormatJson);</span><br><span class="line">        $curl-&gt;setTimeout(<span class="number">30</span>);</span><br><span class="line">        $curl-&gt;setMethod(\JSocket::methodGet);</span><br><span class="line">        $curl-&gt;exe();</span><br><span class="line">        $r = $curl-&gt;getRet();</span><br><span class="line">        <span class="keyword">return</span> \App\Data\WxAccessTokenData::set($r[<span class="string">"access_token"</span>],$r[<span class="string">"expires_in"</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//发送失败</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">seedError</span><span class="params">($msg)</span></span>&#123;</span><br><span class="line">        \Log::info($msg);</span><br><span class="line">        <span class="keyword">return</span> \ResponseHelper::success([</span><br><span class="line">            <span class="string">'code'</span>    =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">'message'</span> =&gt; $msg</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>数据配置:</p></blockquote><figure class="highlight json"><figcaption><span>配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"touser"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"template_id"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"page"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"form_id"</span>:<span class="string">"%s"</span>,</span><br><span class="line">    <span class="attr">"data"</span>:&#123;</span><br><span class="line">        <span class="attr">"keyword1"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword2"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword3"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword4"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"keyword5"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"%s"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里配置也要和微信模板消息的配置一致，例如模板消息的配置内容最多到keyword8,那么这里就要在复制3个,”keyword5”:{“value”:”%s”}出来添加到后面，可以看到数据的内容都是用<a>%s</a>表示的，就是为了使用<a href="http://php.net/manual/en/function.vsprintf.php" title="php官网介绍" target="_blank" rel="noopener">vsprintf</a>替换数据。<br><blockquote><p>发送配置:</p></blockquote><br><figure class="highlight php"><figcaption><span>发送配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送模板消息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">postSeedTemp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $request = \Request::all();</span><br><span class="line">        <span class="keyword">if</span>( $request[<span class="string">'openid'</span>] == <span class="keyword">false</span> || $request[<span class="string">'form_id'</span>] == <span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> \ResponseHelper::error(<span class="string">"缺少参数!"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $array = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'touser'</span>       =&gt; $request[<span class="string">'openid'</span>],</span><br><span class="line">            <span class="string">'template_id'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">            <span class="string">'page'</span>         =&gt; <span class="string">'pages/home/home'</span>,</span><br><span class="line">            <span class="string">'form_id'</span>      =&gt; $request[<span class="string">'form_id'</span>],</span><br><span class="line">            <span class="string">'keyword1'</span>     =&gt; <span class="string">'卖家正在积极准备商品'</span>,</span><br><span class="line">            <span class="string">'keyword2'</span>     =&gt; <span class="string">'顺丰快递'</span>,</span><br><span class="line">            <span class="string">'keyword3'</span>     =&gt; <span class="string">'4324242342'</span>,</span><br><span class="line">            <span class="string">'keyword4'</span>     =&gt; <span class="string">'S123456789'</span>,</span><br><span class="line">            <span class="string">'keyword5'</span>     =&gt; <span class="string">'你的物流状态已更新'</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> \ResponseHelper::success([</span><br><span class="line">            <span class="string">'result'</span> =&gt; \WxHelper::seedTempMessage($array,<span class="string">'logisticsMsg'</span>)</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>可以看出这里的配置和数据配置是一一对应的。<br><blockquote><p>curl模拟提交示例:</p></blockquote><br><figure class="highlight php"><figcaption><span>curl类</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JSocket</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> methodGet=<span class="string">"GET"</span>;              <span class="comment">//发起GET请求</span></span><br><span class="line">    <span class="keyword">const</span> methodPost=<span class="string">"POST"</span>;            <span class="comment">//发起POST请求</span></span><br><span class="line">    <span class="keyword">const</span> methodDelete=<span class="string">"DELETE"</span>;        <span class="comment">//发起DELETE请求</span></span><br><span class="line">    <span class="keyword">const</span> methodPut=<span class="string">"PUT"</span>;          <span class="comment">//发起PUT请求</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> retFormatJson=<span class="string">"JSON"</span>;     <span class="comment">//返回json格式</span></span><br><span class="line">    <span class="keyword">const</span> retFormatXml=<span class="string">"XML"</span>;       <span class="comment">//返回XML格式</span></span><br><span class="line">    <span class="keyword">const</span> retFormatText=<span class="string">"Text"</span>;       <span class="comment">//返回XML格式</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $ch;            <span class="comment">//链接对象</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $url;               <span class="comment">//请求地址</span></span><br><span class="line">    <span class="keyword">private</span> $requestType;       <span class="comment">//请求方式</span></span><br><span class="line">    <span class="keyword">private</span> $param=[];             <span class="comment">//请求参数</span></span><br><span class="line">    <span class="keyword">private</span> $timeout=<span class="number">10</span>;           <span class="comment">//超时时间</span></span><br><span class="line">    <span class="keyword">private</span> $header=[];         <span class="comment">//请求头信息</span></span><br><span class="line">    <span class="keyword">private</span> $method=JSocket::methodGet;        <span class="comment">//请求方式</span></span><br><span class="line">    <span class="keyword">private</span> $file;          <span class="comment">//文件</span></span><br><span class="line">    <span class="keyword">private</span> $ssl;           <span class="comment">//证书文件</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> $ret;                                   <span class="comment">//返回结果</span></span><br><span class="line">    <span class="keyword">private</span> $retFormat=JSocket::retFormatJson;      <span class="comment">//返回格式</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ch = curl_init();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setRetFormat</span><span class="params">($retFormat)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;retFormat=$retFormat;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setRequestType</span><span class="params">($requestType)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;requestType=$requestType;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span><span class="params">($url)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;url=$url;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setParam</span><span class="params">($key,$value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;param[$key]=$value;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getParam</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;param;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求超时时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTimeout</span><span class="params">($timeout)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;timeout=$timeout;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求头</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $header</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setHeader</span><span class="params">($header)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;header[]=$header;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置请求方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $method</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMethod</span><span class="params">($method)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method=$method;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置发送文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFile</span><span class="params">($key,$file)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file[$key]=curl_file_create($file);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置整数文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type $ssl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ssl</span><span class="params">($ssl)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ssl=$ssl;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \JSocket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exe</span><span class="params">()</span></span>&#123;</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_TIMEOUT, <span class="keyword">$this</span>-&gt;timeout);</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;header)&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HTTPHEADER, <span class="keyword">$this</span>-&gt;header);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HEADER,<span class="keyword">FALSE</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;method)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodPost:</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POST, <span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;file)&#123;</span><br><span class="line">                    curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, <span class="keyword">$this</span>-&gt;file);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;param)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;requestType==<span class="keyword">self</span>::retFormatJson)&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, json_encode(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;requestType==<span class="keyword">self</span>::retFormatXml)&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, \DataBaseHelper::arrayToXml(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_POSTFIELDS, http_build_query(<span class="keyword">$this</span>-&gt;param));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodDelete:</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_CUSTOMREQUEST, <span class="string">'DELETE'</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="keyword">self</span>::methodGet:</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;param)&#123;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;url = <span class="keyword">$this</span>-&gt;url . (strpos(<span class="keyword">$this</span>-&gt;url, <span class="string">'?'</span>) ? <span class="string">'&amp;'</span> : <span class="string">'?'</span>) . http_build_query(<span class="keyword">$this</span>-&gt;param);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ssl)&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLCERTTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLCERT, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'cert'</span>]);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLKEYTYPE,<span class="string">'PEM'</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSLKEY, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'key'</span>]);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSL_VERIFYPEER,<span class="keyword">TRUE</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_SSL_VERIFYHOST,<span class="number">2</span>);<span class="comment">//严格校验</span></span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;ssl[<span class="string">'ca'</span>]))&#123;</span><br><span class="line">                curl_setopt(<span class="keyword">$this</span>-&gt;ch,CURLOPT_CAINFO, <span class="keyword">$this</span>-&gt;ssl[<span class="string">'ca'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">            curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        curl_setopt(<span class="keyword">$this</span>-&gt;ch, CURLOPT_URL, <span class="keyword">$this</span>-&gt;url);</span><br><span class="line">        $starttime=<span class="keyword">$this</span>-&gt;microtimeFloat();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ret = curl_exec(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $endtime = <span class="keyword">$this</span>-&gt;microtimeFloat();</span><br><span class="line">        $errorNum=curl_errno(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $errorMsg=curl_error(<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        $runtime = number_format(($endtime-$starttime), <span class="number">4</span>).<span class="string">'s'</span>;</span><br><span class="line">        <span class="keyword">if</span>($errorNum)&#123;</span><br><span class="line">            Log::error(<span class="keyword">$this</span>-&gt;url, [<span class="string">"param"</span>=&gt;<span class="keyword">$this</span>-&gt;param,<span class="string">"result"</span>=&gt;$errorNum,<span class="string">"runtime"</span>=&gt;$runtime,<span class="string">"response"</span>=&gt;<span class="keyword">$this</span>-&gt;ret]);</span><br><span class="line">            Log::error(<span class="string">"curl请求错误信息："</span>.$errorMsg);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;http_code = curl_getinfo(<span class="keyword">$this</span>-&gt;ch,CURLINFO_HTTP_CODE); </span><br><span class="line">        curl_close (<span class="keyword">$this</span>-&gt;ch);</span><br><span class="line">        Log::info(<span class="keyword">$this</span>-&gt;url, [<span class="string">"param"</span>=&gt;<span class="keyword">$this</span>-&gt;param,<span class="string">"status"</span>=&gt;<span class="keyword">$this</span>-&gt;http_code,<span class="string">"runtime"</span>=&gt;$runtime,<span class="string">"response"</span>=&gt;<span class="keyword">$this</span>-&gt;ret]);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;retFormat)&#123;</span><br><span class="line">            <span class="keyword">case</span> JSocket::retFormatJson:</span><br><span class="line">                <span class="keyword">return</span> json_decode(<span class="keyword">$this</span>-&gt;ret,<span class="keyword">TRUE</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JSocket::retFormatXml:</span><br><span class="line">                <span class="keyword">return</span> \DataBaseHelper::xmlToArray(<span class="keyword">$this</span>-&gt;ret);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;ret;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHttpCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;http_code;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 精确时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> type</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">microtimeFloat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($usec, $sec) = explode(<span class="string">" "</span>, microtime());</span><br><span class="line">        <span class="keyword">return</span> ((float)$usec + (float)$sec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天来一篇larveral5.5的小程序模板消息发送示例，总感觉用larveral框架写的代码逼格高了很多，奇怪！！&lt;/p&gt;
&lt;p&gt;1.小程序向用户发送模板消息分为两步：&lt;br&gt;    第一步：用户在小程序上进行表单操作(例如提交表单),此时前端要获取到form_id传递给后端&lt;br&gt;    第二步：后端接收到from_id，再查询用户的openid，按照微信文档的数据格式进行发送&lt;br&gt;2.发送之前有一下几个前提:&lt;br&gt;    第一:微信小程序以开通了消息服务&lt;br&gt;    第二:微信小程序以配置了模板消息&lt;br&gt;    第三:发送的数据内容必须和微信小程序配置的模板消息一致&lt;br&gt;    第四:获取到正确的用户openid&lt;br&gt;    第五:获取到未过期的微信access_token&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="php框架" scheme="http://www.daichongweb.com/categories/php%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="larveral" scheme="http://www.daichongweb.com/tags/larveral/"/>
    
  </entry>
  
  <entry>
    <title>tp5模型事件‘before_insert’用法</title>
    <link href="http://www.daichongweb.com/tp5%E6%A8%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6%E2%80%98beforeInsert%E2%80%99%E7%94%A8%E6%B3%95/"/>
    <id>http://www.daichongweb.com/tp5模型事件‘beforeInsert’用法/</id>
    <published>2019-02-19T02:19:58.000Z</published>
    <updated>2019-06-23T05:02:37.574Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>tp5的模型事件只有在调用模型方法的时候生效，使用查询构造器是无效的。</p><footer><strong>引言TP5官网</strong></footer></blockquote><p>也就是说，不实例化模型进行操作before_insert这个方法是不执行的。</p><p>模型的意义就是为了简化控制器操作，简化逻辑处理，提升代码的整洁度和可读性。这样一来模型事件起到了至关重要的作用。<br><a id="more"></a><br>这篇文章就介绍一下模型事件‘before_insert’事件对于下单逻辑的帮助。<br><figure class="highlight php"><figcaption><span>模型ShopOrder</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">daichongweb</span>\<span class="title">helper</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopOrderM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_text'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">self</span>::beforeInsert(<span class="function"><span class="keyword">function</span><span class="params">($ShopOrderM)</span></span>&#123;</span><br><span class="line"><span class="comment">//创建订单号</span></span><br><span class="line">       $ShopOrderM[<span class="string">'orderno'</span>] = helper::buildOrderno(<span class="string">'T'</span>, <span class="string">'shop_text'</span>);$ShopOrderM[<span class="string">'name'</span>] = $ShopOrderM[<span class="string">'name'</span>].<span class="string">'1'</span>;<span class="comment">//处理前端传过来的数据进行操作</span></span><br><span class="line">       <span class="keyword">return</span> $ShopOrderM;</span><br><span class="line">&#125;,<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><figcaption><span>控制器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">daichongweb</span>\<span class="title">helper</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">response</span>\<span class="title">Json</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Db</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Cache</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>\<span class="title">ShopMain</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商城下单接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopOrder</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下单测试</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">orderText</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$info = input();</span><br><span class="line"><span class="comment">//验证器</span></span><br><span class="line">$validate = <span class="keyword">new</span> \app\common\validate\ShopOrderV();</span><br><span class="line">        <span class="keyword">if</span>(!$validate-&gt;check($info)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Json([</span><br><span class="line"><span class="string">'code'</span>    =&gt; <span class="number">1</span>,</span><br><span class="line"><span class="string">'message'</span> =&gt; $validate-&gt;getError(),</span><br><span class="line">]);</span><br><span class="line">        &#125;</span><br><span class="line">$shopOrder = <span class="keyword">new</span> \app\common\model\ShopOrderM();</span><br><span class="line">$shopOrder-&gt;save($info);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从控制器的代码可以看出，控制器的逻辑处理只有接收数据、验证、执行插入。<br>生成订单、处理数据全部放在模型的新增前处理。<br>$ShopOrderM[‘name’] = $ShopOrderM[‘name’].’1’;这里就是自动向数据表的name插入数据。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;&lt;p&gt;tp5的模型事件只有在调用模型方法的时候生效，使用查询构造器是无效的。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;引言TP5官网&lt;/strong&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;也就是说，不实例化模型进行操作before_insert这个方法是不执行的。&lt;/p&gt;
&lt;p&gt;模型的意义就是为了简化控制器操作，简化逻辑处理，提升代码的整洁度和可读性。这样一来模型事件起到了至关重要的作用。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="php框架" scheme="http://www.daichongweb.com/categories/php%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="tp5" scheme="http://www.daichongweb.com/tags/tp5/"/>
    
  </entry>
  
  <entry>
    <title>tp5类的属性不存在</title>
    <link href="http://www.daichongweb.com/tp5%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E4%B8%8D%E5%AD%98%E5%9C%A8/"/>
    <id>http://www.daichongweb.com/tp5类的属性不存在/</id>
    <published>2019-02-16T06:13:53.000Z</published>
    <updated>2019-06-23T05:02:37.574Z</updated>
    
    <content type="html"><![CDATA[<p>tp5模型新增关联报错类的属性不存在,即使数据表中存在需要的字段，但是依然报错app\common\model\Slide-&gt;is_slide类似的问题，其实是因为在使用关联模型新增的时候主表新增操作未使用模型新增。<br><a id="more"></a><br><figure class="highlight php"><figcaption><span>错误写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接新增未使用模型</span></span><br><span class="line">$result = Db::name(<span class="string">'table'</span>)-&gt;allowField(<span class="keyword">true</span>)-&gt;save($info);</span><br><span class="line"><span class="comment">//然后使用模型新增</span></span><br><span class="line">$model = <span class="keyword">new</span> \app\common\model\ShopCommentM();</span><br><span class="line">$model-&gt;comment_image()-&gt;saveAll($imageData);</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><figcaption><span>正确写法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先使用模型新增主表，再新增关联表</span></span><br><span class="line">$model = <span class="keyword">new</span> \app\common\model\ShopCommentM();</span><br><span class="line">$model-&gt;allowField(<span class="keyword">true</span>)-&gt;save($info);</span><br><span class="line">$model-&gt;comment_image()-&gt;saveAll($imageData);</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>模型文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主表模型</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopCommentM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_comment'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">comment_image</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(<span class="string">'ShopCommentImageM'</span>,<span class="string">'comment_id'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关联表模型</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopCommentImageM</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $table = <span class="string">'shop_comment_image'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tp5模型新增关联报错类的属性不存在,即使数据表中存在需要的字段，但是依然报错app\common\model\Slide-&amp;gt;is_slide类似的问题，其实是因为在使用关联模型新增的时候主表新增操作未使用模型新增。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="tp5" scheme="http://www.daichongweb.com/tags/tp5/"/>
    
  </entry>
  
  <entry>
    <title>php关于trait的使用</title>
    <link href="http://www.daichongweb.com/php%E5%85%B3%E4%BA%8Etrait%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.daichongweb.com/php关于trait的使用/</id>
    <published>2019-01-25T09:28:45.000Z</published>
    <updated>2019-06-23T05:02:37.573Z</updated>
    
    <content type="html"><![CDATA[<p>关于trait之前可以说是完全没有了解过，看了官方文档之后才得知是php5.4的新特性,用来解决在不同结构(模块)下代码复用的问题.具体可以查看<a href="http://php.net/traits" target="_blank" rel="noopener">php手册</a><br>手册的介绍相对来说还是比较清晰的，那这篇文章就是为了献给那些不喜欢看文档，喜欢直接上手使用的童鞋.</p><p>首先介绍一下我的项目结构 我在Common模块下新建了一个文件traits 命名空间为 common/traits。</p><p>现在有多个模块需要使用相同的代码，那么就在traits下新建一个控制器,写入公用的代码<br><a id="more"></a><br><figure class="highlight php"><figcaption><span>common/traits/ShopGoods.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> \<span class="title">common</span>\<span class="title">traits</span>;</span><br><span class="line"><span class="keyword">trait</span> ShopGoods&#123;</span><br><span class="line"><span class="keyword">use</span> \<span class="title">app</span>\<span class="title">common</span>\<span class="title">traits</span>\<span class="title">ShopCommon</span>;<span class="comment">//这里是引用了其他的公共方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//商品数据</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">goodsList</span><span class="params">($company_id,$hotel_id = NULL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$post = input();</span><br><span class="line"></span><br><span class="line">$post[<span class="string">'company_id'</span>] = $company_id;</span><br><span class="line">$post[<span class="string">'hotel_id'</span>] = $hotel_id;</span><br><span class="line"></span><br><span class="line">$post[<span class="string">'my'</span>] = <span class="keyword">isset</span>($post[<span class="string">'my'</span>])??<span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">$goods = <span class="keyword">new</span> ShopGoodsM();</span><br><span class="line"></span><br><span class="line">$model = $goods-&gt;alias(<span class="string">'goods'</span>)</span><br><span class="line">-&gt;leftJoin(<span class="string">'shop_goods_category gcat'</span>,<span class="string">'goods.id=gcat.goods_id'</span>)</span><br><span class="line">-&gt;leftJoin(<span class="string">'shop_category cat'</span>,<span class="string">'gcat.category_id=cat.category_id'</span>)</span><br><span class="line">-&gt;where(<span class="string">'cat.deletetime'</span>,<span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($post[<span class="string">'my'</span>])&#123;</span><br><span class="line">$model-&gt;withSearch([<span class="string">'company_id'</span>,<span class="string">'hotel_id'</span>],$post);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$model-&gt;withSearch([<span class="string">'company_id'</span>],$post);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$model-&gt;group(<span class="string">'goods.id'</span>);</span><br><span class="line">$list = $model-&gt;field(<span class="string">"GROUP_CONCAT(DISTINCT(cat.name)) as category_name,goods.*"</span>)</span><br><span class="line">-&gt;select();</span><br><span class="line"><span class="comment">//查询sku属性</span></span><br><span class="line"><span class="keyword">foreach</span> ($list <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">$list[$key][<span class="string">'sku'</span>] = $goods-&gt;skus()-&gt;where(<span class="string">'goods_id'</span>,$value[<span class="string">'id'</span>])-&gt;field(<span class="string">'sku,price,stock,score'</span>)-&gt;select();</span><br><span class="line">&#125;</span><br><span class="line">$total = $model-&gt;count();</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Json([</span><br><span class="line"><span class="string">'code'</span>    =&gt; <span class="number">0</span>,</span><br><span class="line"><span class="string">'message'</span> =&gt; <span class="string">'success'</span>,</span><br><span class="line"><span class="string">'data'</span>  =&gt; $list,</span><br><span class="line"><span class="string">'total'</span>  =&gt; $total</span><br><span class="line">]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>那上边这块代码现在有Company和Hotel两个模块要使用:<br><figure class="highlight php"><figcaption><span>company/index.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">company</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShopGoods</span></span>&#123;</span><br><span class="line"><span class="keyword">use</span> \<span class="title">common</span>\<span class="title">traits</span>\<span class="title">ShopGoods</span>;<span class="comment">//引入公共的traits文件</span></span><br><span class="line"><span class="comment">//商品数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getGoods</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;goodsList(helper::getCompanyIdInCompany());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>这样的话Company和Hotel模块下只有写这两行代码就够了。</p><p>看到这里其实很多人会有疑问，说:这不和普通的代码公用是一个类型吗？<br>不不不！他们不一样，例如很多模块下的参数是无法公用的,company下的company_id在hotel模块下是无法调用的,但引入trait方法之后，你就可以在不同的模块下做参数处理,trait方法既可以通过默认参数的形式传递也可以接收post、get等方法的传递。<br>安全方面：trait方法不可直接通过接口访问、相比用公用的common方法做访问处理省事了很多！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于trait之前可以说是完全没有了解过，看了官方文档之后才得知是php5.4的新特性,用来解决在不同结构(模块)下代码复用的问题.具体可以查看&lt;a href=&quot;http://php.net/traits&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;php手册&lt;/a&gt;&lt;br&gt;手册的介绍相对来说还是比较清晰的，那这篇文章就是为了献给那些不喜欢看文档，喜欢直接上手使用的童鞋.&lt;/p&gt;
&lt;p&gt;首先介绍一下我的项目结构 我在Common模块下新建了一个文件traits 命名空间为 common/traits。&lt;/p&gt;
&lt;p&gt;现在有多个模块需要使用相同的代码，那么就在traits下新建一个控制器,写入公用的代码&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.daichongweb.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>js一次提交却发起多次请求</title>
    <link href="http://www.daichongweb.com/js%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E5%8D%B4%E5%8F%91%E8%B5%B7%E5%A4%9A%E6%AC%A1%E8%AF%B7%E6%B1%82/"/>
    <id>http://www.daichongweb.com/js一次提交却发起多次请求/</id>
    <published>2019-01-21T02:25:46.000Z</published>
    <updated>2019-06-23T05:02:37.567Z</updated>
    
    <content type="html"><![CDATA[<p>最近做前端的工作比较多,经常会遇到一些自己不太明白的问题，非常的懵逼。<br>比如做一个简单的ajax异步提交会出现两次请求的问题，也是最近遇见比较奇怪的问题。</p><p>经过排查之后发现两次出现两次请求的原因可能是：<br><blockquote><p>1.引入了两个同样的js,比如引入了两个同样的jquery插件</p></blockquote><br><a id="more"></a><br><blockquote><p>2.页面存在form表单，点击提交按钮之后又执行了form.submit(),这个form本身就会提交一次。</p></blockquote><br><blockquote><p>3.跨域请求，这个问题就比较深入一点了，js跨域的时候本身会发送两次请求，第一次是预查请求(option)，是为了查询是否支持跨域，第二次才是真正的数据请求。解决这个问题，首先后端要有允许跨域请求的处理，前端的header要加入application/x-www-form-urlencoded, multipart/form-data 或 text/plain中的一种，就可以解决了。</p></blockquote><br><figure class="highlight php"><figcaption><span>后端跨域处理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Access-Control-Allow-Origin: *'</span>);</span><br><span class="line">header(<span class="string">"Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept"</span>);</span><br><span class="line">header(<span class="string">'Access-Control-Allow-Methods: GET, POST, PUT'</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做前端的工作比较多,经常会遇到一些自己不太明白的问题，非常的懵逼。&lt;br&gt;比如做一个简单的ajax异步提交会出现两次请求的问题，也是最近遇见比较奇怪的问题。&lt;/p&gt;
&lt;p&gt;经过排查之后发现两次出现两次请求的原因可能是：&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;1.引入了两个同样的js,比如引入了两个同样的jquery插件&lt;/p&gt;
&lt;/blockquote&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://www.daichongweb.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>小程序服务商支付</title>
    <link href="http://www.daichongweb.com/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%95%86%E6%94%AF%E4%BB%98/"/>
    <id>http://www.daichongweb.com/小程序服务商支付/</id>
    <published>2018-11-13T07:59:14.000Z</published>
    <updated>2019-06-23T05:02:37.579Z</updated>
    
    <content type="html"><![CDATA[<p>建议按照接口文档进行开发,不要直接使用sdk<br>下面贴上代码为大家一一介绍文档和真实情况的差距:<br><a id="more"></a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'./common/payConfig.php'</span>;</span><br><span class="line">$key = $payConfig[<span class="string">'key'</span>];</span><br><span class="line">$orderData = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"appid"</span>            =&gt;   $payConfig[<span class="string">'appid'</span>],</span><br><span class="line"><span class="string">'mch_id'</span>           =&gt;   $payConfig[<span class="string">'mchid'</span>],</span><br><span class="line"><span class="string">'sub_appid'</span>        =&gt;   $payConfig[<span class="string">'sub_appid'</span>],</span><br><span class="line"><span class="string">'sub_mch_id'</span>       =&gt;   $mchid,</span><br><span class="line"><span class="string">'body'</span>             =&gt;   $body,</span><br><span class="line"><span class="string">'attach'</span>           =&gt;   $attach,</span><br><span class="line"><span class="string">'out_trade_no'</span>     =&gt;   $order_id,</span><br><span class="line"><span class="string">'total_fee'</span>        =&gt;   $total_price,</span><br><span class="line"><span class="string">'spbill_create_ip'</span> =&gt;   $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line"><span class="string">'notify_url'</span>       =&gt;   <span class="string">'daichongweb.com'</span>,</span><br><span class="line"><span class="string">'trade_type'</span>       =&gt;   <span class="string">'JSAPI'</span>,</span><br><span class="line"><span class="comment">// 'openid'        =&gt;   $UnionID, 这个是不需要的</span></span><br><span class="line"><span class="string">'goods_tag'</span>        =&gt;   <span class="string">'daichong'</span>,</span><br><span class="line"><span class="string">'nonce_str'</span>        =&gt;   <span class="keyword">$this</span>-&gt;getNonceStr(),</span><br><span class="line"><span class="string">'sub_openid'</span>       =&gt;   $mini_openid</span><br><span class="line">);</span><br><span class="line">ksort($orderData);</span><br><span class="line">reset($orderData);</span><br><span class="line">$buff = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($orderData <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span>($k != <span class="string">"sign"</span> &amp;&amp; $v != <span class="string">""</span> &amp;&amp; !is_array($v))&#123;</span><br><span class="line">      $buff .= ($k . <span class="string">"="</span> . $v . <span class="string">"&amp;"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">$buff = trim($buff, <span class="string">"&amp;"</span>);</span><br><span class="line">$buff = $buff.<span class="string">'&amp;key='</span>.$key;</span><br><span class="line">$signA = strtoupper(MD5($buff));</span><br><span class="line">$orderData[<span class="string">'sign'</span>] = $signA;</span><br><span class="line"></span><br><span class="line">$xml = <span class="keyword">$this</span>-&gt;arrayToXml($orderData);</span><br><span class="line"></span><br><span class="line">$url = <span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>;</span><br><span class="line">        </span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;https_post($url,$xml);</span><br><span class="line">$payArray = (<span class="keyword">array</span>)simplexml_load_string($result, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);</span><br></pre></td></tr></table></figure><br>在代码上的差距其实只有一个openid,但是他还是会报错appid和sub_mch_id不匹配,解决这个问题的前提小程序和公众号的主体必须一致,也就是小程序和微信公众号必须在同一个服务商上绑定。绑定方式是在服务商户里找到’服务商功能‘-&gt;’特约商户管理‘找到对应商户点击配置<br><blockquote><p>第一步：</p></blockquote><br><img src="/小程序服务商支付/img/2.png" title="小程序服务商支付 配置"><br><blockquote><p>第二步：</p></blockquote><br><img src="/小程序服务商支付/img/1.png" title="小程序服务商支付 配置"><br>添加好之后就可以测试支付了，把支付参数返回给前端，啊就完事了!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;建议按照接口文档进行开发,不要直接使用sdk&lt;br&gt;下面贴上代码为大家一一介绍文档和真实情况的差距:&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="小程序支付" scheme="http://www.daichongweb.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
</feed>
